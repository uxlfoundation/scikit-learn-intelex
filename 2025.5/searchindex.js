Search.setIndex({"docnames": ["404", "about_daal4py", "algorithms", "array_api", "blogs", "contribute", "daal4py", "deprecation", "distributed-mode", "distributed_daal4py", "guide/acceleration", "ideas", "index", "input-types", "kaggle", "kaggle/automl", "kaggle/classification", "kaggle/regression", "license", "logistic_model_builder", "model_builders", "non-scikit-algorithms", "non_sklearn_d4p", "oneapi-gpu", "preview", "quick-start", "samples", "samples/ElasticNet", "samples/dbscan", "samples/kmeans", "samples/knn_mnist", "samples/lasso_regression", "samples/linear_regression", "samples/logistictic_regression_cifar", "samples/nusvr_medical_charges", "samples/random_forest_rain", "samples/random_forest_yolanda", "samples/ridge_regression", "samples/ridge_regression_bike_sharing", "samples/ridge_regression_fraud_detection", "samples/ridge_regression_higgs", "samples/svc_adult", "samples/tsne", "substitutions", "support", "tutorials", "verbose"], "filenames": ["404.rst", "about_daal4py.rst", "algorithms.rst", "array_api.rst", "blogs.rst", "contribute.rst", "daal4py.rst", "deprecation.rst", "distributed-mode.rst", "distributed_daal4py.rst", "guide/acceleration.rst", "ideas.rst", "index.rst", "input-types.rst", "kaggle.rst", "kaggle/automl.rst", "kaggle/classification.rst", "kaggle/regression.rst", "license.rst", "logistic_model_builder.rst", "model_builders.rst", "non-scikit-algorithms.rst", "non_sklearn_d4p.rst", "oneapi-gpu.rst", "preview.rst", "quick-start.rst", "samples.rst", "samples/ElasticNet.ipynb", "samples/dbscan.ipynb", "samples/kmeans.ipynb", "samples/knn_mnist.ipynb", "samples/lasso_regression.ipynb", "samples/linear_regression.ipynb", "samples/logistictic_regression_cifar.ipynb", "samples/nusvr_medical_charges.ipynb", "samples/random_forest_rain.ipynb", "samples/random_forest_yolanda.ipynb", "samples/ridge_regression.ipynb", "samples/ridge_regression_bike_sharing.ipynb", "samples/ridge_regression_fraud_detection.ipynb", "samples/ridge_regression_higgs.ipynb", "samples/svc_adult.ipynb", "samples/tsne.ipynb", "substitutions.rst", "support.rst", "tutorials.rst", "verbose.rst"], "titles": ["", "About daal4py", "Supported Algorithms", "Array API support", "Follow us on Medium", "How to Contribute", "daal4py API Reference", "Deprecation Notice", "SPMD (multi-GPU distributed mode)", "Distributed mode (daal4py, CPU)", "Tuning Guide", "Ideas", "Extension for Scikit-learn*", "Supported input types", "Kaggle Kernels", "Kaggle Kernels that use AutoML and Extension for Scikit-learn*", "Kaggle Kernels for Classification Tasks", "Kaggle Kernels for Regression Tasks", "License", "Serving Logistic Regression from Other Libraries", "Serving GBT models from other libraries", "Non-Scikit-Learn Algorithms", "Other Non-Scikit-Learn Algorithms", "oneAPI and GPU support in Extension for Scikit-learn*", "Preview Functionality", "Quick Start", "Samples", "Extension for Scikit-learn ElasticNet for Airlines DepDelay dataset", "Extension for Scikit-learn DBSCAN for spoken arabic digit dataset", "Extension for Scikit-learn Kmeans for spoken arabic digit dataset", "Extension for Scikit-learn KNN for MNIST dataset", "Extension for Scikit-learn Lasso Regression for YearPredictionMSD dataset", "Extension for Scikit-learn Linear Regression for YearPredictionMSD dataset", "Extension for Scikit-learn Logistic Regression for Cifar dataset", "Extension for Scikit-learn NuSVR for Medical Charges dataset", "Intel\u00ae Extension for Scikit-learn RandomForestClassifier for rain in Australia dataset", "Extension for Scikit-learn Random Forest for Yolanda dataset", "Extension for Scikit-learn Ridge Regression for Airlines DepDelay dataset", "Intel\u00ae Extension for Scikit-learn Ridge Regression for New York City Bike Share dataset", "Intel\u00ae Extension for Scikit-learn Ridge Regression for IEEE-CIS Fraud Detection dataset", "Intel\u00ae Extension for Scikit-learn Ridge Regression for Higgs dataset", "Extension for Scikit-learn SVC for Adult dataset", "Extension for Scikit-learn TSNE example", "&lt;no title&gt;", "Extension for Scikit-learn Support", "Extension for Scikit-learn* Tutorials &amp; Case Studies", "Verbose Mode"], "terms": {"extens": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 16, 17, 18, 19, 20, 21, 22, 24, 26, 43, 46], "scikit": [1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 16, 17, 18, 19, 20, 24, 26, 43, 46], "learn": [1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 16, 17, 18, 19, 20, 24, 26, 43, 46], "oneapi": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 43, 44, 45, 46], "data": [1, 2, 3, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 43, 44, 45, 46], "analyt": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 43, 44, 45, 46], "librari": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 41, 42, 43, 44, 45, 46], "dpctl": [1, 2, 6, 8, 9, 12, 13, 19, 20, 22, 23, 25, 43], "repositori": [1, 2, 5, 6, 8, 9, 12, 19, 20, 22, 23, 25, 26, 43], "mpi4pi": [1, 2, 6, 8, 9, 12, 19, 20, 22, 23, 25, 43], "i": [1, 2, 3, 5, 6, 7, 8, 9, 11, 12, 15, 16, 17, 19, 20, 21, 23, 24, 25, 29, 30, 38, 41, 44, 45, 46], "low": [1, 9, 11], "level": [1, 5, 22, 46], "modul": [1, 8, 9, 19, 20, 22, 24, 25, 42], "within": [1, 9], "packag": [1, 8, 9, 11, 20, 23, 25, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42], "provid": [1, 5, 6, 7, 8, 9, 11, 14, 21, 25, 26, 44], "python": [1, 3, 5, 6, 8, 9, 11, 19, 20, 22, 23, 25, 46], "bind": [1, 6, 22], "over": [1, 6, 9, 17, 19, 21, 22, 23], "It": [1, 3, 6, 8, 11, 21, 25, 45], "ha": [1, 6, 11, 12, 21, 25], "been": [1, 11, 21, 22], "deprec": [1, 21], "favor": 1, "newer": [1, 25], "sklearnex": [1, 3, 8, 9, 12, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 46], "same": [1, 3, 6, 8, 9, 21, 23, 25, 42, 44], "which": [1, 3, 6, 8, 9, 11, 15, 16, 17, 19, 20, 21, 22, 23, 46], "offer": [1, 6, 8, 9, 13, 19, 20, 22, 23], "more": [1, 2, 4, 6, 9, 19, 20, 21, 22, 23, 25, 35], "idiomat": 1, "higher": [1, 6], "interfac": [1, 6, 8, 11, 22, 23], "call": [1, 6, 8, 9, 20, 21, 23, 25, 46], "acceler": [1, 2, 4, 6, 10, 12, 13, 19, 20, 25, 45, 46], "routin": [1, 13], "from": [1, 3, 4, 5, 6, 8, 9, 11, 12, 13, 15, 16, 17, 21, 22, 23, 24, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42], "intern": [1, 3, 6, 21, 25], "wrapper": [1, 6, 9], "now": 1, "daal": [1, 6], "while": [1, 6, 8, 21, 23, 25], "built": [1, 6, 8, 25], "atop": 1, "dpc": [1, 23, 25], "base": [1, 6, 7, 9, 10, 11, 16, 17, 20, 21, 23], "featur": [1, 2, 5, 6, 15, 16, 17, 20, 21, 23, 27, 34, 35, 37, 38, 39, 40, 42, 44], "gpu": [1, 3, 9, 11, 21, 25, 26, 45], "support": [1, 8, 10, 16, 17, 20, 21, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 41, 42, 46], "There": [1, 11, 26], "larg": [1, 6, 11, 25], "degre": [1, 6, 34], "overlap": 1, "function": [1, 2, 3, 7, 9, 19, 20, 23, 25, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42], "between": [1, 6, 9, 16, 17, 21], "two": [1, 6, 9, 10, 11, 21, 23, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42], "should": [1, 2, 6, 8, 9, 21], "prefer": [1, 6], "whenev": 1, "possibl": [1, 6, 10, 21], "either": [1, 3, 6, 23, 25], "directli": [1, 3, 6, 11, 19, 21], "through": [1, 6, 8, 9, 19, 20, 22, 23], "patch": [1, 2, 3, 5, 15, 16, 17, 23, 24], "mechan": [1, 3, 21], "expos": 1, "some": [1, 6, 8, 9, 10, 11, 21, 22, 24], "addit": [1, 5, 6, 8, 11, 12, 13, 20, 22, 25, 46], "doesn": [1, 3, 24], "t": [1, 3, 21, 24], "algorithm": [1, 8, 10, 11, 23, 25, 42, 45, 46], "ar": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 16, 19, 20, 21, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 41, 42, 44, 46], "outsid": [1, 23], "scope": [1, 11], "cpu": [1, 3, 6, 8, 11, 20, 21, 23, 25, 26, 46], "fast": [1, 6, 29], "serv": 1, "gradient": [1, 10, 15, 19, 20], "boost": [1, 4, 15, 19, 20], "decis": [1, 19, 20], "tree": [1, 19, 20], "other": [1, 6, 8, 9, 11, 13, 21, 25], "xgboost": [1, 4, 6, 20], "model": [1, 3, 4, 10, 19, 21, 23, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 45], "builder": [1, 19, 20], "previous": [1, 24, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42], "wa": [1, 3, 6, 8, 9, 23], "separ": [1, 6, 8, 38], "an": [1, 3, 5, 6, 8, 9, 11, 13, 15, 16, 17, 19, 20, 21, 23, 25, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 41, 42, 44, 45], "import": [1, 3, 6, 8, 9, 11, 12, 16, 17, 19, 20, 21, 23, 24, 25, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 46], "intelex": [1, 11, 14, 16, 17, 18, 25, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42], "mean": [1, 2, 4, 9, 11, 21, 34, 35, 36, 45], "after": [1, 3, 6, 9, 10, 23, 25], "instal": [1, 3, 5, 6, 8, 9, 19, 23, 45], "can": [1, 3, 5, 6, 8, 9, 10, 11, 12, 14, 19, 20, 21, 23, 24, 25, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44], "follow": [1, 2, 3, 6, 8, 9, 10, 11, 15, 16, 17, 20, 22, 24, 25, 26, 44], "For": [1, 2, 3, 5, 6, 8, 9, 21, 23, 24, 25, 46], "specif": [1, 3, 6, 7, 12, 14, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 41, 42], "see": [1, 3, 6, 8, 9, 10, 11, 12, 13, 14, 19, 20, 21, 22, 23, 25, 44], "api": [1, 11, 13, 19, 20, 21, 24], "refer": [1, 2, 10, 19, 20, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 41, 42], "unlik": [1, 9], "being": [1, 6, 8, 24, 46], "lower": [1, 6, 19, 22, 29], "doe": [1, 3, 6, 9, 11, 13, 22, 23, 25, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 41, 42], "idiom": 1, "instead": [1, 9, 11, 21, 25], "process": [1, 9, 11, 14, 21], "procedur": [1, 6, 9], "instanti": [1, 6, 19], "class": [1, 2, 13, 19, 20, 21, 25, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42], "its": [1, 6, 11, 17, 21, 45, 46], "contructor": 1, "without": [1, 3, 8, 12, 20, 21, 25], "ani": [1, 3, 5, 6, 11, 20, 21, 23, 25, 44], "exampl": [1, 6, 8, 9, 16, 21, 24, 25, 26, 46], "qr_algo": [1, 9], "qr": [1, 9], "comput": [1, 3, 6, 8, 9, 11, 14, 17, 21, 23, 25, 45], "method": [1, 2, 8, 9, 10, 20, 21, 23, 25, 44], "order": [1, 8, 9, 21, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42], "obtain": [1, 3, 6, 21, 23], "result": [1, 3, 9, 10, 11, 21, 23, 25, 27, 31, 32, 33, 34, 35, 36, 37, 41], "object": [1, 8, 9, 20, 21, 23, 35], "pass": [1, 2, 5, 6, 8, 9, 21, 23], "oper": [1, 6, 8, 19, 23, 25], "qr_result": [1, 6, 9], "x": [1, 3, 6, 7, 8, 9, 12, 19, 20, 21, 23, 25, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42], "access": [1, 6, 9, 38, 40], "relev": [1, 3, 5, 11, 21], "r": [1, 9, 12, 21, 23, 35, 38, 39, 40], "matrixr": [1, 6, 9], "full": [1, 2, 6, 9, 10, 19, 20, 23, 24, 45], "numpi": [1, 3, 6, 9, 12, 13, 19, 20, 21, 25, 31, 32], "np": [1, 3, 6, 9, 12, 19, 20, 21, 23, 25, 31, 32], "rng": [1, 9], "random": [1, 3, 9, 15, 16, 17, 26], "default_rng": 1, "seed": [1, 6, 9], "123": [1, 9, 20, 29, 36], "standard_norm": [1, 9], "size": [1, 6, 9, 10, 21], "100": [1, 9, 20, 33, 35, 36, 41, 42], "5": [1, 3, 6, 9, 10, 21, 25, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42], "test": [1, 5, 9, 11, 19, 20, 21, 24, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 41], "assert_almost_equ": [1, 9, 19], "ab": [1, 9], "linalg": [1, 9], "factor": [1, 6, 9], "linear": [1, 4, 9, 19, 21, 26], "algebra": [1, 9, 19], "have": [1, 3, 6, 9, 11, 21, 22, 24, 25, 44], "strictli": [1, 9, 23], "uniqu": [1, 6, 9, 11], "solut": [1, 9, 45], "sign": [1, 5, 6, 9], "number": [1, 9, 10, 11, 21, 29, 42], "flip": [1, 6, 9], "particular": [1, 9, 23], "column": [1, 6, 9, 20, 30, 34, 35, 38, 39, 41], "both": [1, 6, 8, 9, 10, 11, 19, 20, 21, 25], "q": [1, 3, 9], "matric": [1, 9, 13], "thei": [1, 3, 9, 11, 25], "would": [1, 8, 9, 11, 21], "still": [1, 6, 9], "valid": [1, 3, 9], "equival": [1, 6, 9, 12], "origin": [1, 3, 6, 9, 10, 20, 21, 25, 46], "matrix": [1, 9, 21], "like": [1, 3, 6, 9, 11, 13, 21, 23], "choleski": [1, 9], "decomposit": [1, 9, 24], "typic": [1, 9], "constrain": [1, 9], "onli": [1, 2, 3, 6, 9, 11, 19, 20, 21, 23, 25, 46], "posit": [1, 6, 9, 21], "main": [1, 9, 18, 25], "diagon": [1, 9], "make": [1, 3, 5, 6, 9, 11, 13, 17, 25, 44], "determinist": [1, 9], "thi": [1, 3, 5, 6, 7, 8, 9, 10, 11, 13, 14, 19, 20, 21, 22, 23, 24, 25, 42], "alwai": [1, 6, 9, 21, 23, 25], "case": [1, 3, 6, 9, 10, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 41, 42], "most": [1, 6, 9, 35, 44], "softwar": [1, 3, 6, 8, 9, 12, 19, 23], "henc": [1, 8, 9], "abov": [1, 8, 9, 30, 41], "take": [1, 9, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42], "absolut": [1, 6, 9, 11], "valu": [1, 3, 9, 10, 11, 17, 20, 21, 23, 24, 35, 39], "when": [1, 3, 5, 6, 9, 11, 13, 21, 23, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 41, 42], "compar": [1, 9, 10, 20, 21, 24, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 45], "differ": [1, 3, 6, 8, 9, 12, 13, 23, 25], "mani": 1, "accept": [1, 5, 6, 8, 13, 23], "argument": [1, 6, 8, 9, 10, 23, 25], "true": [1, 2, 3, 6, 9, 19, 20, 21, 23, 25, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41], "allow": [1, 3, 6, 8, 9, 11, 19, 21, 23], "execut": [1, 6, 8, 9, 12, 23, 29], "onlin": [1, 11], "fashion": [1, 11], "suppli": [1, 45], "subset": [1, 6, 9, 35], "one": [1, 6, 9, 11, 16, 20, 21, 24, 25, 46], "time": [1, 4, 10, 11, 17, 25, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 45], "batch": [1, 6, 21], "whole": [1, 6], "upfront": 1, "arriv": 1, "final": [1, 6, 9, 11, 16, 21], "all": [1, 2, 3, 5, 6, 9, 10, 12, 21, 23, 24, 25, 35], "had": 1, "onc": [1, 6, 25], "The": [1, 3, 5, 6, 7, 8, 9, 10, 11, 12, 15, 16, 17, 19, 20, 21, 23, 24, 25, 26, 30, 41, 45], "also": [1, 3, 6, 8, 9, 11, 13, 19, 20, 23, 25, 26], "increment": [1, 21], "version": [1, 3, 6, 7, 8, 9, 11, 13, 21, 23, 24, 25, 46], "doc": [1, 6, 9], "non": [1, 3, 6, 23, 24, 35], "detail": [1, 2, 6, 9, 10, 13, 21, 22, 23, 25, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 41, 42], "dataset": [1, 3, 6, 11, 16, 17, 19, 20, 21, 25, 26, 42], "don": 1, "fit": [1, 2, 3, 6, 8, 11, 12, 19, 21, 23, 25, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 46], "memori": [1, 3, 12, 16, 20, 21, 23, 35], "load": [1, 9], "smaller": [1, 6], "chunk": 1, "machin": [1, 4, 9, 11, 16, 22, 26, 31, 32, 45], "constantli": 1, "updat": [1, 21, 44], "new": [1, 5, 6, 11, 21, 24, 25, 26], "collect": [1, 6, 9], "In": [1, 3, 6, 9, 10, 13, 20, 22, 25, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42], "constructor": [1, 9], "need": [1, 4, 6, 24, 25], "multipl": [1, 6, 8, 9, 17, 21], "x_full": [1, 9], "split": [1, 6, 9, 10, 21, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 41], "arang": [1, 9], "x_batch": 1, "list": [1, 8, 10, 11, 13, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 41, 42], "svd": [1, 9], "regress": [1, 3, 9, 11, 14, 16, 20, 21, 22, 26], "ridg": [1, 2, 9, 11, 17, 21, 26], "multinomi": [1, 9, 19, 33], "naiv": [1, 9], "bay": [1, 9], "moment": [1, 9, 21], "covari": [1, 9, 21, 24], "run": [1, 3, 5, 6, 8, 9, 21, 23, 25, 26, 42, 46], "node": [1, 6, 8, 9, 11], "mpi": [1, 8, 9, 11], "framework": [1, 9, 11, 12, 15, 23, 45], "section": [1, 3, 8, 10, 19, 20, 23], "appli": [2, 6, 25, 34], "impact": [2, 3, 11], "estim": [2, 3, 6, 8, 13, 16, 21, 22, 23, 24, 25], "paramet": [2, 6, 10, 16, 17, 21, 25, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 41, 42], "format": [2, 3, 5, 6, 10], "svc": [2, 16, 25, 26], "No": [2, 5, 7, 35], "limit": [2, 3], "nusvc": 2, "randomforestclassifi": [2, 3, 25], "except": [2, 3, 10, 21], "warm_start": 2, "ccp_alpha": 2, "0": [2, 3, 5, 6, 9, 10, 12, 21, 23, 25, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42], "criterion": [2, 6, 35], "gini": [2, 35], "multi": [2, 6, 11, 25], "output": [2, 3, 5, 6, 11, 24], "spars": [2, 6, 13, 16, 21], "kneighborsclassifi": [2, 30], "kd_tree": 2, "metric": [2, 3, 10, 11, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42], "euclidean": [2, 10], "minkowski": [2, 10], "p": [2, 6, 10], "2": [2, 3, 5, 6, 9, 10, 12, 16, 21, 23, 25, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 45], "brute": 2, "manhattan": 2, "chebyshev": 2, "cosin": 2, "logisticregress": [2, 6, 19, 33], "solver": [2, 33], "lbfg": [2, 6, 33], "newton": [2, 6], "cg": 2, "class_weight": 2, "none": [2, 6, 8, 21, 31, 32, 38], "sample_weight": [2, 21], "dens": [2, 6], "svr": [2, 15, 17], "nusvr": [2, 17, 26], "randomforestregressor": [2, 3, 36], "mse": [2, 27, 31, 32, 36, 37, 38, 39, 40], "kneighborsregressor": 2, "linearregress": [2, 8, 23, 32], "normal": [2, 16, 27, 28, 29, 37], "fals": [2, 3, 6, 21, 23, 27, 29, 31, 32, 37, 38, 39, 40], "auto": [2, 5, 23], "observ": [2, 3, 6, 10, 20, 21], "elasticnet": [2, 17, 26], "lasso": [2, 17, 26], "kmean": [2, 6, 25, 26], "precompute_dist": 2, "dbscan": [2, 3, 9, 12, 23, 26, 46], "pca": [2, 9, 16], "svd_solver": 2, "covariance_eigh": 2, "incrementalpca": [2, 24], "tsne": [2, 26], "nearestneighbor": [2, 25], "empiricalcovari": [2, 11, 24], "train_test_split": [2, 3, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41], "assert_all_finit": 2, "pairwise_dist": 2, "correl": [2, 17], "roc_auc_scor": 2, "averag": [2, 10], "max_fpr": 2, "multi_class": [2, 33], "kernel": [2, 6, 21, 26, 34, 41], "sigmoid_poli": 2, "binari": [2, 6, 14, 15, 19], "oob_scor": 2, "weight": [2, 6, 21, 30, 41], "callabl": 2, "penalti": 2, "l2": [2, 6, 11], "init": 2, "k": [2, 4, 9, 16, 23, 26, 45], "fallback": [2, 3, 23, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 41, 42, 46], "distribut": [2, 3, 11, 21, 25], "mode": [2, 6, 21, 24, 25], "predict_proba": [2, 6, 19, 20, 33], "monkei": [2, 25], "": [2, 3, 5, 6, 8, 9, 11, 16, 17, 19, 21, 23, 25, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42], "own": [2, 5], "suit": 2, "few": [2, 24, 25], "specifi": [2, 3, 5, 21, 23], "deselected_test": 2, "yaml": 2, "defin": [3, 6, 21, 35, 38], "standard": [3, 6, 21], "manipul": 3, "requir": [3, 6, 8, 9, 11, 12, 23, 24], "current": [3, 6, 11, 13, 20, 21, 23, 24, 25, 46], "implement": [3, 6, 13, 22, 24, 25, 46], "datafram": [3, 13, 16, 35, 38], "modifi": [3, 6, 11, 25], "precis": [3, 6, 19, 20, 21, 30, 41], "unless": [3, 21], "necessari": [3, 5, 11, 21, 25], "convert": [3, 6, 11, 13, 19, 20, 38], "host": [3, 23], "done": [3, 9], "represent": [3, 20], "parallel": [3, 6, 21], "control": [3, 23], "special": [3, 11, 45], "handl": [3, 9, 13], "describ": [3, 6, 11, 21], "document": [3, 5, 6, 11], "match": [3, 5, 8, 11, 23], "known": [3, 11, 20, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42], "work": [3, 6, 11, 13, 20, 21], "stock": [3, 13, 16, 17, 23, 24, 25, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 45], "extend": [3, 11], "sycl": [3, 21, 23], "usm": [3, 23], "type": [3, 6, 14, 16, 19, 21, 23, 24], "These": [3, 12, 16, 17, 23, 25, 26, 46], "includ": [3, 11, 13, 16, 17, 21, 25, 35], "contain": [3, 6, 9, 11, 21, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42], "context": [3, 21, 23], "devic": [3, 8, 25], "offload": [3, 8, 26], "copi": [3, 21, 25], "move": [3, 6], "util": [3, 11, 19, 21], "config_context": [3, 12, 23], "target_offload": [3, 12, 23], "As": [3, 5, 6, 11], "do": [3, 5, 6, 23], "howev": [3, 10], "overrid": 3, "forc": [3, 21], "movement": 3, "target": [3, 21, 23, 24, 26, 35, 38, 39, 40], "tool": [3, 5, 45], "preserv": 3, "accomplish": 3, "avail": [3, 6, 8, 11, 21, 24, 25, 46], "array_api_dispatch": 3, "enabl": [3, 5, 6, 11, 24, 25, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 46], "If": [3, 6, 8, 9, 19, 21, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 41, 42, 44], "fall": [3, 13], "back": [3, 13], "sinc": [3, 21], "compliant": 3, "guarante": 3, "train": [3, 6, 10, 12, 16, 17, 20, 21, 42], "attribut": [3, 21], "namespac": 3, "here": [3, 4, 13, 21, 25], "code": [3, 9, 11, 12, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 46], "demonstr": 3, "how": [3, 6, 15, 16, 17, 21, 23, 25, 45], "copyright": [3, 5], "2023": [3, 7], "intel": [3, 4, 8, 9, 12, 19, 20, 23, 45, 46], "corpor": 3, "licens": 3, "under": [3, 5, 8, 21, 24], "apach": [3, 5], "you": [3, 5, 11, 12, 14, 19, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46], "mai": [3, 5, 6, 8, 9, 11, 16, 21, 24, 25, 44], "file": [3, 5, 8, 9, 25, 31, 32], "complianc": 3, "http": [3, 8, 9, 18, 19, 23, 25, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42], "www": 3, "org": [3, 42], "applic": [3, 4, 6, 12, 25, 26], "law": 3, "agre": [3, 5], "write": [3, 25, 31, 32], "AS": 3, "basi": [3, 11], "warranti": 3, "OR": 3, "condit": [3, 6, 9, 21], "OF": 3, "kind": 3, "express": 3, "impli": 3, "languag": [3, 14], "govern": 3, "permiss": [3, 25], "rf": [3, 36], "random_forest_regressor_dpnp": 3, "py": [3, 8, 9, 25], "sklearn": [3, 6, 8, 12, 19, 20, 21, 23, 24, 25, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 46], "make_regress": [3, 20], "model_select": [3, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41], "via": [3, 8, 11, 15, 16, 25], "patch_sklearn": [3, 12, 23, 24, 25, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42], "sklearn_is_patch": 3, "state": 3, "ensembl": [3, 6, 35, 36], "Or": 3, "just": [3, 9, 11, 13, 25, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42], "we": [3, 4, 5, 11, 21, 25, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44], "creat": [3, 6, 8, 10, 11, 14, 16, 17, 19, 25], "syclqueu": [3, 8, 23], "put": 3, "tensor": [3, 23], "queue": [3, 8, 21, 23], "u": [3, 17, 21], "y": [3, 19, 20, 21, 23, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42], "n_sampl": [3, 6, 20, 21, 42], "1000": [3, 35], "n_featur": [3, 6, 20, 21, 42], "4": [3, 8, 9, 21, 25, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42], "n_inform": 3, "random_st": [3, 20, 25, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42], "shuffl": 3, "x_train": [3, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41], "x_test": [3, 21, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41], "y_train": [3, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41], "y_test": [3, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41], "test_siz": [3, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 41], "33": [3, 35], "42": [3, 34, 35, 36, 41, 42], "dpnp_x_train": 3, "asarrai": 3, "usm_typ": 3, "sycl_queu": 3, "dpnp_y_train": 3, "dpnp_x_test": 3, "max_depth": 3, "pred": 3, "predict": [3, 6, 8, 15, 16, 17, 19, 20, 21, 23, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41], "print": [3, 24, 25, 29, 30, 35, 38, 41, 42, 46], "forest": [3, 15, 16, 17, 26], "ground": 3, "truth": 3, "first": [3, 5, 6, 8, 30, 41], "n": [3, 6, 8, 9, 25, 30, 35, 41], "sycl_devic": 3, "is_gpu": 3, "witout": 3, "random_forest_classifier_dpctl_batch": 3, "dpt": 3, "make_classif": 3, "sure": [3, 5, 13, 25], "n_redund": 3, "dpt_x_train": 3, "dpt_y_train": 3, "dpt_x_test": 3, "classif": [3, 14, 15, 20, 22, 26, 30, 41], "previou": 3, "2024": 3, "array_api_strict": 3, "cluster": [3, 4, 9, 11, 12, 23, 25, 26, 28, 29, 42, 46], "1": [3, 6, 8, 9, 10, 12, 16, 21, 23, 24, 25, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42], "3": [3, 6, 10, 11, 12, 21, 23, 25, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42], "8": [3, 9, 12, 21, 23, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42], "7": [3, 12, 21, 23, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42], "25": [3, 12, 23, 35], "80": [3, 12, 23, 35], "dtype": [3, 6, 12, 23, 31, 32, 35], "float32": [3, 6, 12, 19, 23, 31, 32], "could": [3, 9, 11], "launch": 3, "manag": [3, 9], "ep": [3, 12, 23], "min_sampl": [3, 12, 23], "f": [3, 9, 25, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42], "label": [3, 6, 11, 30, 35, 41], "labels_": [3, 25], "publish": 4, "blog": [4, 20, 25], "so": [4, 5, 6, 9, 13, 21, 25], "tip": 4, "trick": [4, 11], "effici": [4, 6, 45], "analysi": 4, "help": [4, 26, 44, 45], "our": [4, 5, 11, 25], "latest": [4, 11, 25], "save": [4, 6, 9, 21], "monei": 4, "superior": 4, "perform": [4, 6, 10, 11, 12, 16, 17, 20, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 45], "xeon": [4, 20], "scalabl": 4, "processor": [4, 25], "leverag": [4, 19, 20, 45], "optim": [4, 16, 17, 20, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 45, 46], "give": 4, "scientist": [4, 12], "hour": [4, 11, 17, 38], "minut": 4, "600x": 4, "faster": [4, 6, 12, 19, 20, 29, 45], "svm": [4, 16, 25, 34, 41], "improv": [4, 6, 12, 20, 21, 35, 45], "lightgbm": [4, 6, 20], "infer": [4, 12, 19, 20, 21, 23], "kaggl": [4, 26], "challeng": [4, 44], "us": [4, 5, 6, 8, 10, 11, 12, 13, 16, 19, 20, 21, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46], "ai": [4, 12, 45], "toolkit": 4, "your": [4, 5, 8, 12, 23, 25, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 45], "why": 4, "pai": 4, "open": [5, 11, 31, 32, 45], "sourc": [5, 6, 8, 9, 11, 21, 42, 45], "project": [5, 6, 11], "welcom": [5, 11], "commun": [5, 9, 11], "explain": 5, "particip": [5, 24], "convers": [5, 20], "log": [5, 6, 21, 33, 46], "bug": [5, 44], "enhanc": 5, "submit": [5, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 41, 42], "By": [5, 6, 25], "term": [5, 6, 20, 21], "releas": [5, 7], "anonym": 5, "name": [5, 9, 21, 23, 24, 27, 28, 29, 30, 33, 34, 36, 37, 41], "commit": [5, 11, 44], "messag": 5, "off": 5, "line": [5, 12, 25, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42], "email": [5, 15, 16], "must": [5, 6, 9, 11, 21, 23, 25], "authorship": 5, "inform": [5, 7, 11, 19, 20, 21], "gitconfig": 5, "set": [5, 6, 8, 10, 11, 20, 21, 23, 24, 25, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 46], "up": [5, 8, 12, 19, 20], "correctli": 5, "git": 5, "config": 5, "global": [5, 6, 23], "user": [5, 11, 21, 24, 25, 44], "kate": 5, "develop": [5, 14, 26, 45], "compani": 5, "com": [5, 8, 9, 18, 19, 23, 25, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42], "build": [5, 8, 45], "product": [5, 15, 16, 17], "larger": [5, 9, 10, 11, 21], "restructuredtext": 5, "appropri": 5, "year": [5, 31, 32, 35, 38], "master": 5, "branch": 5, "continu": [5, 6], "integr": [5, 8, 12], "ci": [5, 26], "check": [5, 17, 21, 35, 38, 44], "merg": 5, "review": 5, "feedback": 5, "guid": [5, 21], "fix": [5, 6], "modif": [5, 12, 25], "github": [5, 8, 11, 18, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44], "black": 5, "isort": 5, "formatt": 5, "length": [5, 21], "90": [5, 11, 30, 31, 32, 41], "charact": 5, "default": [5, 6, 10, 16, 17, 21, 23, 24, 25], "option": [5, 6, 9, 19, 21, 23], "otherwis": [5, 6, 8, 11, 19, 21], "find": [5, 6, 11, 12, 14, 44, 46], "linter": 5, "configur": [5, 6, 10, 23], "pyproject": 5, "toml": 5, "A": [5, 6, 9, 21, 23, 25], "action": [5, 25], "verifi": 5, "compli": 5, "pre": [5, 11, 25], "hook": 5, "top": [5, 25], "pip": [5, 8, 23, 25], "page": [6, 7, 23], "note": [6, 8, 9, 10, 12, 19, 21, 23], "part": [6, 10], "simpl": [6, 9, 21, 25, 39, 45], "about": [6, 7, 11, 16, 19, 22, 25], "daalinit": 6, "nthread": 6, "int": [6, 21, 42], "subsequ": 6, "further": [6, 9], "less": [6, 21], "equal": [6, 10], "than": [6, 19, 21, 22, 23, 25, 35], "zero": [6, 11, 21], "chang": [6, 10, 11, 21, 24, 25, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 44], "return": [6, 21, 23, 25], "num_thread": 6, "get": [6, 9, 10, 11, 21, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 45, 46], "enable_thread_pin": 6, "bool": [6, 21], "disabl": [6, 10, 12, 25], "pin": 6, "physic": [6, 21], "unit": [6, 11], "improp": 6, "degrad": 6, "depend": [6, 10, 13, 23, 25, 46], "topologi": 6, "whether": [6, 15, 16, 21], "particularli": 6, "daalfini": [6, 9], "environ": [6, 8, 24, 25, 46], "befor": [6, 8, 9, 21, 24, 25, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42], "effect": [6, 11, 21], "mpi_fin": 6, "upon": [6, 17], "exit": 6, "automat": [6, 8], "rank": [6, 8, 9, 20], "them": [6, 11, 13, 19, 26], "num_proc": [6, 9], "though": [6, 11], "mpi_comm_s": 6, "comm": [6, 9], "get_siz": [6, 9], "my_procid": [6, 9], "mpi_comm_rank": 6, "get_rank": [6, 9], "produc": [6, 19, 20, 25], "articl": 6, "mb": [6, 19, 20, 35], "convert_model": [6, 19, 20], "gbtdaalmodel": [6, 20], "logisticdaalmodel": [6, 19], "catboost": [6, 20], "those": [6, 8, 20, 23], "coeffici": [6, 19, 21], "intercept": [6, 19, 21], "therebi": [6, 9, 19], "beyond": [6, 13, 19], "obj": 6, "correspond": [6, 8, 9, 15, 21, 23, 24, 25], "meant": 6, "calcul": [6, 10, 11, 16, 17, 19, 20, 21, 35], "said": 6, "meet": [6, 24], "criteria": 6, "were": [6, 26], "booster": [6, 20], "compat": [6, 20, 24], "categor": [6, 20, 27, 34, 35, 37, 38, 39, 40], "e": [6, 8, 9, 11, 20, 21, 23, 25], "g": [6, 8, 11, 20, 21, 23, 25], "logitraw": 6, "out": [6, 19, 44, 46], "reg": [6, 20], "anoth": [6, 16], "rest": [6, 16, 23], "input": [6, 17, 21, 23], "properti": [6, 15, 17], "is_classifier_": 6, "is_regressor_": 6, "pred_contrib": [6, 20], "pred_interact": [6, 20], "ndarrai": [6, 21], "respons": [6, 15, 31, 32], "variabl": [6, 8, 24, 35, 38, 39, 46], "given": [6, 11, 15, 21, 23], "each": [6, 9, 10, 11, 15, 21, 25, 35], "row": [6, 20, 35], "probabl": [6, 17, 33], "link": [6, 11, 19, 20], "scale": [6, 9, 11, 20, 21, 35, 41, 45], "what": [6, 16, 19, 20], "margin": [6, 20], "raw": [6, 20], "arrai": [6, 8, 12, 13, 19, 21, 23, 25], "shape": [6, 9, 20, 21, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40], "num_sampl": 6, "num_featur": 6, "contribut": [6, 11, 20], "last": [6, 7, 25], "interact": [6, 20, 23], "across": [6, 8, 12, 21], "dimens": [6, 35], "belong": 6, "num_class": 6, "coef": 6, "float64": [6, 35], "predictor": [6, 19], "multionomi": 6, "logarithm": [6, 19], "elsewher": 6, "linear_model": [6, 8, 19, 21, 23, 27, 31, 32, 33, 37, 38, 39, 40], "doubl": 6, "singl": [6, 8, 9, 14, 21, 25], "sgdclassifi": [6, 19], "classifier_prediction_result": 6, "n_class": 6, "1d": [6, 21], "2d": [6, 21], "float": [6, 21], "scalar": 6, "entri": [6, 35], "n_classes_": 6, "n_features_in_": [6, 21], "dtype_": 6, "coef_": [6, 21], "intercept_": [6, 21], "csr": 6, "scipi": [6, 13, 19], "integ": 6, "index": [6, 35], "predict_log_proba": 6, "log_proba": 6, "predict_multipl": 6, "proba": 6, "togeth": [6, 8, 9], "independ": [6, 11, 21], "per": [6, 20], "request": [6, 21, 31, 32, 44], "logprob": 6, "semant": 6, "histogram": [6, 10], "decision_forest_classification_train": 6, "nclass": 6, "size_t": 6, "fptype": 6, "str": [6, 21, 23], "intermedi": 6, "defaultdens": 6, "resultstoevalu": 6, "evalu": 6, "computeclasslabel": 6, "computeclassprob": 6, "computeclasslogprob": 6, "join": [6, 31, 32], "bar": 6, "everi": [6, 11, 17], "oned": [6, 11], "ntree": 6, "10": [6, 9, 20, 21, 25, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41], "observationspertreefract": 6, "get_nan64": 6, "fraction": 6, "sampl": [6, 11, 21, 25, 42], "replac": [6, 24, 25, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42], "featurespernod": 6, "tri": 6, "sqrt": [6, 21, 35], "where": [6, 11, 21, 23], "total": [6, 11, 17, 21, 35], "maxtreedepth": 6, "maxim": [6, 45], "depth": [6, 11], "unlimit": 6, "minobservationsinleafnod": 6, "minim": [6, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41], "leaf": 6, "engines_batchbase__iface__": 6, "impuritythreshold": 6, "threshold": 6, "stop": 6, "impur": 6, "anymor": 6, "varimport": 6, "resultstocomput": 6, "memorysavingmod": 6, "slower": 6, "bootstrap": 6, "minobservationsinsplitnod": 6, "minweightfractioninleafnod": 6, "minimum": [6, 10, 11, 21], "minimpuritydecreaseinsplitnod": 6, "induc": 6, "decreas": 6, "greater": 6, "neg": [6, 21], "maxleafnod": 6, "maximum": [6, 11, 21], "maxbin": [6, 10], "hist": [6, 10], "discret": [6, 10], "bin": [6, 10], "bucket": 6, "256": [6, 10], "increas": [6, 10, 11], "cost": 6, "minbins": [6, 10], "splitter": 6, "best": [6, 17, 21], "binningstrategi": [6, 10], "select": [6, 10, 23, 25], "strategi": [6, 11, 35], "group": [6, 11], "point": [6, 10, 21], "actual": 6, "data_or_fil": 6, "decision_forest_classification_training_result": 6, "decision_forest_classification_model": 6, "outofbagerror": 6, "outofbagerroraccuraci": 6, "outofbagerrordecisionfunct": 6, "outofbagerrorperobserv": 6, "variableimport": 6, "decision_forest_classification_predict": 6, "decision_forest": 6, "votingmethod": 6, "decision_forest_classification_modelptr": 6, "nfeatur": 6, "numberofclass": 6, "numberoffeatur": 6, "numberoftre": 6, "decision_tree_classification_train": 6, "prune": 6, "nbin": 6, "splitcriterion": 6, "dataforprun": 6, "labelsforprun": 6, "decision_tree_classification_training_result": 6, "decision_tree_classification_model": 6, "decision_tree_classification_predict": 6, "decision_tree_classification_modelptr": 6, "gbt_classification_train": 6, "64": [6, 12, 25, 41], "bit": 6, "flag": [6, 23, 25], "variableimportancemod": 6, "indic": [6, 46], "splitmethod": 6, "exact": [6, 10], "maxiter": 6, "50": 6, "6": [6, 20, 21, 25, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42], "shrinkag": 6, "rate": [6, 16], "minsplitloss": 6, "regular": [6, 11, 20, 21], "partit": 6, "rang": [6, 10, 11], "inf": [6, 10], "lambda": [6, 34], "entir": [6, 10, 21, 25], "inexact": 6, "internalopt": 6, "gbt_classification_training_result": 6, "gbt_classification_model": 6, "variableimportancebycov": 6, "variableimportancebygain": 6, "variableimportancebytotalcov": 6, "variableimportancebytotalgain": 6, "variableimportancebyweight": 6, "gbt_classification_predict": 6, "niter": 6, "gbt_classification_modelptr": 6, "gbt_classification_prediction_result": 6, "predictionbia": 6, "kdtree_knn_classification_train": 6, "kd": 6, "datauseinmodel": 6, "usag": [6, 8, 16, 23, 35], "choos": 6, "element": 6, "voteweight": 6, "kdtree_knn_classification_training_result": 6, "kdtree_knn_classification_model": 6, "kdtree_knn_classification_predict": 6, "kdtree_knn_classification_modelptr": 6, "kdtree_knn_classification_prediction_result": 6, "bf_knn_classification_train": 6, "bf": 6, "bf_knn_classification_training_result": 6, "bf_knn_classification_model": 6, "bf_knn_classification_predict": 6, "bf_knn_classification_modelptr": 6, "bf_knn_classification_prediction_result": 6, "adaboost_train": 6, "weaklearnertrain": 6, "classifier_training_batch__iface__": 6, "weaklearnerpredict": 6, "classifier_prediction_batch__iface__": 6, "accuracythreshold": 6, "accuraci": [6, 12, 21, 30, 35, 41], "learningr": 6, "multipli": 6, "classifi": [6, 16, 33, 41], "shrink": 6, "adaboost_training_result": 6, "adaboost_model": 6, "weaklearnerserror": 6, "adaboost_predict": 6, "adaboost_modelptr": 6, "alpha": [6, 21, 27, 31, 37, 38, 39, 40], "numberofweaklearn": 6, "weaklearnermodel": 6, "idx": 6, "classifier_model": 6, "deriv": 6, "brownboost_train": 6, "newtonraphsonaccuracythreshold": 6, "raphson": 6, "newtonraphsonmaxiter": 6, "degeneratecasesthreshold": 6, "avoid": 6, "degener": 6, "brownboost_training_result": 6, "brownboost_model": 6, "brownboost_predict": 6, "brownboost_modelptr": 6, "logitboost_train": 6, "friedman": 6, "regression_training_batch__iface__": 6, "regression_prediction_batch__iface__": 6, "weightsdegeneratecasesthreshold": 6, "w": [6, 21, 35], "responsesdegeneratecasesthreshold": 6, "logitboost_training_result": 6, "logitboost_model": 6, "logitboost_predict": 6, "logitboost_modelptr": 6, "regression_model": 6, "stump_classification_train": 6, "stump_classification_training_result": 6, "stump_classification_model": 6, "stump_classification_predict": 6, "stump_classification_modelptr": 6, "leftvalu": 6, "rightvalu": 6, "splitfeatur": 6, "splitvalu": 6, "stream": [6, 31, 32], "multinomial_naive_bayes_train": 6, "priorclassestim": 6, "prior": 6, "imagin": 6, "occurr": 6, "word": 6, "spmd": [6, 9, 11, 25], "multinomial_naive_bayes_training_result": 6, "multinomial_naive_bayes_model": 6, "multinomial_naive_bayes_predict": 6, "multinomial_naive_bayes_modelptr": 6, "auxtabl": 6, "logp": 6, "logtheta": 6, "svm_train": 6, "boser": 6, "c": [6, 8, 9, 11, 21, 23, 25, 33, 34, 41, 42], "upper": 6, "bound": 6, "constraint": 6, "quadrat": 6, "problem": [6, 9, 21, 44], "tau": 6, "scheme": 6, "caches": 6, "cach": 6, "byte": 6, "store": [6, 15, 17, 21, 25], "techniqu": [6, 45], "doshrink": 6, "shrinkingstep": 6, "step": [6, 11, 25], "kernel_function_kerneliface__iface__": 6, "svm_training_result": 6, "svm_model": 6, "svm_predict": 6, "svm_modelptr": 6, "bia": [6, 20], "classificationcoeffici": 6, "supportindic": 6, "supportvector": 6, "logistic_regression_train": 6, "interceptflag": 6, "penaltyl1": 6, "get_nan32": 6, "l1": [6, 11], "penaltyl2": 6, "optimizationsolv": 6, "optimization_solver_iterative_solver_batch__iface__": 6, "sgd": 6, "momentum": 6, "logistic_regression_training_result": 6, "logistic_regression_model": 6, "logistic_regression_predict": 6, "logistic_regression_modelptr": 6, "beta": 6, "numberofbeta": 6, "decision_forest_regression_train": 6, "dependentvari": 6, "tabl": 6, "decision_forest_regression_training_result": 6, "decision_forest_regression_model": 6, "outofbagerrorpredict": 6, "outofbagerrorr2": 6, "decision_forest_regression_predict": 6, "decision_forest_regression_modelptr": 6, "decision_forest_regression_prediction_result": 6, "decision_tree_regression_train": 6, "dependentvariablesforprun": 6, "decision_tree_regression_training_result": 6, "decision_tree_regression_model": 6, "decision_tree_regression_predict": 6, "decision_tree_regression_modelptr": 6, "decision_tree_regression_prediction_result": 6, "gbt_regression_train": 6, "gbt_regression_training_result": 6, "gbt_regression_model": 6, "gbt_regression_predict": 6, "gbt_regression_modelptr": 6, "gbt_regression_prediction_result": 6, "linear_regression_train": 6, "normeqdens": 6, "linear_regression_training_result": 6, "linear_regression_model": 6, "linear_regression_predict": 6, "linear_regression_modelptr": 6, "linear_regression_prediction_result": 6, "numberofrespons": 6, "lasso_regression_train": 6, "lassoparamet": 6, "numer": [6, 20, 35], "datauseincomput": 6, "corrupt": 6, "optresulttocomput": 6, "grammatrix": 6, "numerict": 6, "lasso_regression_training_result": 6, "grammatrixid": 6, "lasso_regression_model": 6, "lasso_regression_predict": 6, "lasso_regression_modelptr": 6, "lasso_regression_prediction_result": 6, "ridge_regression_train": 6, "ridgeparamet": 6, "ridge_regression_training_result": 6, "ridge_regression_model": 6, "ridge_regression_predict": 6, "ridge_regression_modelptr": 6, "ridge_regression_prediction_result": 6, "stump_regression_train": 6, "skip": 6, "backward": 6, "stump_regression_training_result": 6, "stump_regression_model": 6, "stump_regression_predict": 6, "stump_regression_modelptr": 6, "stump_regression_prediction_result": 6, "kmeans_init": 6, "ncluster": 6, "ntrial": 6, "trial": 6, "oversamplingfactor": 6, "chosen": 6, "nround": 6, "l": 6, "round": [6, 35], "kmeans_init_result": 6, "centroid": 6, "lloyddens": 6, "termin": 6, "gamma": [6, 41], "distancetyp": 6, "assignflag": 6, "assign": [6, 9], "inputcentroid": 6, "kmeans_result": 6, "objectivefunct": 6, "densiti": 6, "spatial": 6, "nois": 6, "epsilon": 6, "radiu": 6, "neighborhood": 6, "minobserv": 6, "core": [6, 9, 21, 35], "blockindex": 6, "identifi": [6, 15, 16, 35], "block": 6, "local": [6, 26], "nblock": 6, "leftblock": 6, "lesser": 6, "rightblock": 6, "dbscan_result": 6, "coreindic": 6, "coreobserv": 6, "expect": [6, 11, 21], "em_gmm_init": 6, "ncompon": 6, "gmm": 6, "short": 6, "covariancestorag": 6, "randomli": 6, "start": [6, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 45], "em_gmm_init_result": 6, "em_gmm": 6, "regularizationfactor": 6, "ill": 6, "inputweight": 6, "inputmean": 6, "inputcovari": 6, "list_numerictableptr": 6, "em_gmm_result": 6, "goalfunct": 6, "correlationdens": 6, "reduc": [6, 10, 16, 21], "isdeterminist": 6, "doscal": 6, "iscorrel": 6, "normalization_zscore_batchimpl__iface__": 6, "pointer": 6, "pca_result": 6, "datafortransform": 6, "eigenvalu": [6, 21], "eigenvector": 6, "pca_transform": 6, "dict_numerictableptr": 6, "pca_transform_result": 6, "transformeddata": 6, "multivariate_outlier_detect": 6, "locat": [6, 21, 23, 24, 35], "scatter": [6, 42], "measur": [6, 16, 17], "spread": 6, "region": 6, "multivariate_outlier_detection_result": 6, "univariate_outlier_detect": 6, "deviat": [6, 21], "univariate_outlier_detection_result": 6, "bacon_outlier_detect": 6, "initmethod": 6, "One": [6, 9, 16], "tail": 6, "lpha": 6, "chi": 6, "freedom": 6, "tolerancetoconverg": 6, "basic": [6, 11, 21], "bacon_outlier_detection_result": 6, "adagrad": 6, "optimization_solver_ms": 6, "numberofterm": 6, "batchindic": 6, "m": [6, 25, 42], "repres": [6, 21], "featureid": 6, "hessian": 6, "proxim": 6, "optimization_solver_objective_function_result": 6, "setup": [6, 8], "partial": 6, "optimization_solver_mse_result": 6, "alia": [6, 21], "optimization_solver_logistic_loss": 6, "optimization_solver_logistic_loss_result": 6, "optimization_solver_cross_entropy_loss": 6, "optimization_solver_cross_entropy_loss_result": 6, "optimization_solver_sum_of_functions_result": 6, "optimization_solver_sgd": 6, "optimization_solver_sum_of_functions_batch__iface__": 6, "32": [6, 9, 35], "learningratesequ": 6, "sequenc": 6, "achiev": [6, 12, 14, 19, 20], "optionalresultrequir": 6, "batchsiz": 6, "ignor": [6, 21, 27, 28, 29, 31, 32, 33, 34, 35, 37, 38, 39, 40, 42], "conservativesequ": 6, "conserv": 6, "innerniter": 6, "inputargu": 6, "optimization_solver_sgd_result": 6, "optimization_solver_lbfg": 6, "correct": [6, 21], "pair": 6, "approxim": [6, 21, 25], "invers": 6, "curvatur": 6, "correctionpairbatchs": 6, "sub": [6, 11, 21], "correctionpairbatchindic": 6, "steplengthsequ": 6, "optimization_solver_lbfgs_result": 6, "optimization_solver_adagrad": 6, "root": 6, "optimization_solver_adagrad_result": 6, "saga": 6, "proce": 6, "logistc_loss": 6, "optimization_solver_saga": 6, "gradientst": 6, "accumul": [6, 21], "optimization_solver_saga_result": 6, "optimization_solver_coordinate_desc": 6, "daal_deprecated_us": 6, "skipthefirstcompon": 6, "optimization_solver_coordinate_descent_result": 6, "characterist": [6, 17], "optimization_solver_precomput": 6, "optimization_solver_precomputed_result": 6, "association_rul": 6, "apriori": 6, "minsupport": 6, "minconfid": 6, "confid": 6, "nuniqueitem": 6, "item": [6, 15], "ntransact": 6, "transact": 6, "discoverrul": 6, "itemset": 6, "itemsetsord": 6, "rulesord": 6, "minitemsets": 6, "maxitemsets": 6, "boundari": 6, "association_rules_result": 6, "antecedentitemset": 6, "consequentitemset": 6, "largeitemset": 6, "largeitemsetssupport": 6, "implicit_als_train": 6, "nfactor": 6, "preferencethreshold": 6, "inputmodel": 6, "implicit_als_modelptr": 6, "implicit_als_training_result": 6, "implicit_als_model": 6, "itemsfactor": 6, "usersfactor": 6, "implicit_als_prediction_r": 6, "implicit_als_prediction_ratings_result": 6, "cosine_dist": 6, "cosine_distance_result": 6, "cosinedist": 6, "correlation_dist": 6, "correlation_distance_result": 6, "correlationdist": 6, "outputmatrixtyp": 6, "covariance_result": 6, "normalization_zscor": 6, "boolean": [6, 23], "center": [6, 21, 42], "normalization_zscore_result": 6, "normalizeddata": 6, "normalization_minmax": 6, "lowerbound": 6, "dure": [6, 21, 46], "upperbound": 6, "normalization_minmax_result": 6, "low_order_mo": 6, "estimatestocomput": 6, "low_order_moments_result": 6, "secondorderrawmo": 6, "standarddevi": 6, "sumsquar": 6, "sumsquarescent": 6, "variat": [6, 21], "quantileord": 6, "median": 6, "quantiles_result": 6, "cholesky_result": 6, "choleskyfactor": 6, "matrixq": [6, 9], "pivoted_qr": 6, "permutedcolumn": 6, "On": [6, 8, 9, 24, 46], "th": 6, "begin": [6, 25], "place": 6, "free": [6, 12], "interchang": [6, 25], "pivoted_qr_result": 6, "permutationmatrix": 6, "leftsingularmatrix": 6, "left": 6, "rightsingularmatrix": 6, "right": [6, 9], "svd_result": 6, "singularvalu": 6, "engines_result": 6, "randomnumb": 6, "engines_mt19937": 6, "tabletofil": 6, "fill": [6, 17], "engines_mt19937_result": 6, "engines_mt2203": 6, "engines_mt2203_result": 6, "engines_mcg59": 6, "engines_mcg59_result": 6, "engines_mrg32k3a": 6, "engines_mrg32k3a_result": 6, "engines_philox4x32x10": 6, "engines_philox4x32x10_result": 6, "distributions_bernoulli": 6, "success": 6, "distributions_result": 6, "distributions_bernoulli_result": 6, "distributions_norm": 6, "sigma": 6, "distributions_normal_result": 6, "distributions_uniform": 6, "b": [6, 21, 40], "distributions_uniform_result": 6, "sorting_result": 6, "sorteddata": 6, "reason": 7, "modern": [7, 20], "x86": [7, 12, 25], "system": [7, 12, 23, 45], "altern": [7, 46], "program": 8, "daal4pi": [8, 19, 20, 22, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42], "sever": [8, 11, 25], "capabl": [8, 11, 19], "prerequisit": 8, "along": [8, 20], "backend": [8, 9], "choic": 8, "recommend": [8, 23, 25], "impi_rt": [8, 9], "ensur": [8, 35, 38], "spmd_backend": 8, "smpd": [8, 9], "runtim": [8, 9, 23, 25], "compil": [8, 9, 23, 25], "pypi": [8, 9, 23], "conda": [8, 9, 19, 23, 25], "easili": [8, 9, 23], "channel": [8, 9, 19, 23, 25], "repo": [8, 9, 19, 23, 25], "mpiexec": [8, 9], "mpirun": [8, 9], "command": [8, 12, 25], "forg": [8, 23, 25], "might": [8, 9, 13, 19], "openmpi": [8, 9], "speed": [8, 12, 19, 20], "i_mpi_offload": 8, "lead": 8, "error": [8, 21, 23, 36], "linux": [8, 9, 24, 25, 46], "export": [8, 24, 46], "window": [8, 24, 25, 46], "awar": [8, 11, 23], "desir": 8, "transfer": 8, "dpnp": [8, 13], "signatur": 8, "def": 8, "self": [8, 21], "found": 8, "To": [8, 10, 23, 24, 25, 35, 46], "linear_regression_spmd": 8, "Then": [8, 9, 11, 24], "rememb": 8, "ad": [8, 9, 11, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42], "aid": 9, "hold": 9, "piec": 9, "themselv": 9, "much": [9, 19, 29, 45], "1280": 9, "12": [9, 25, 27, 28, 29, 31, 32, 35, 37, 38, 39, 40, 42], "tb": 9, "107": 9, "second": [9, 21, 35], "35": 9, "76": [9, 41], "gb": 9, "runner": 9, "turn": 9, "aspect": [9, 11], "inter": 9, "logic": [9, 21], "side": 9, "distributed_qr": 9, "num_nod": 9, "world": 9, "this_nod": 9, "randomst": 9, "x_node": 9, "ncol": 9, "common": 9, "nrow": 9, "gener": [9, 11, 21, 23], "subdivid": 9, "broadcast": 9, "practic": 9, "want": [9, 26, 44], "serial": [9, 21], "oftentim": 9, "interest": 9, "pl": 9, "read_parquet": 9, "parquet": 9, "distributed_qr_mpi4pi": 9, "comm_world": 9, "wai": [9, 19, 20, 24], "denot": 10, "consist": [10, 20, 21], "compon": [10, 21], "knn": [10, 15, 16, 26], "descent": 10, "overal": [10, 11], "n_compon": [10, 42], "verbos": [10, 25], "better": [10, 11, 19, 23], "keyword": 10, "influenc": [10, 21], "descript": [10, 11], "quantil": [10, 16], "edg": 10, "similar": [10, 11, 27, 44], "amount": [10, 25], "divid": [10, 21], "width": 10, "max": [10, 11, 21], "min": [10, 11, 21], "greatli": 10, "especi": 10, "due": [10, 11, 21], "fidel": 10, "present": [10, 21], "wors": [10, 21], "suggest": 11, "direct": 11, "consid": 11, "good": 11, "introductori": 11, "meaning": 11, "next": [11, 17, 24, 35], "kei": [11, 25], "architectur": [11, 25, 45], "evolv": 11, "three": 11, "tier": 11, "medium": 11, "175": 11, "350": 11, "relat": 11, "topic": 11, "combin": [11, 15], "complet": [11, 24, 26], "curv": 11, "difficulti": 11, "becom": 11, "issu": [11, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 41, 42], "possibli": 11, "goal": [11, 15, 16, 17], "rel": 11, "easi": [11, 19], "show": [11, 15, 16, 17, 25, 35, 42], "high": 11, "sbc": 11, "exist": [11, 12, 21, 25, 38, 44], "close": 11, "oa": 11, "shrunk": 11, "codebas": 11, "assist": [11, 44], "analys": 11, "With": [11, 25, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42], "hard": 11, "post": [11, 20], "empir": 11, "veri": [11, 20], "re": [11, 21, 25], "super": 11, "made": [11, 23], "hopefulli": 11, "design": [11, 12, 26], "question": [11, 16], "statu": 11, "track": 11, "vital": 11, "basicstatist": [11, 21], "incrementalbasicstatist": [11, 21], "varianc": [11, 21], "focu": 11, "multithread": [11, 21], "prove": 11, "big": 11, "unwieldli": 11, "processs": 11, "advanc": [11, 45], "investig": 11, "guard": 11, "deliver": 11, "add": [11, 25, 44], "underli": 11, "maxabscal": 11, "norm": [11, 21], "sum": [11, 21, 35], "squar": [11, 21, 36], "public": 11, "math": 11, "Their": 11, "natur": [11, 14], "plugin": 11, "sigmoid": 11, "tanh": 11, "space": 11, "signific": [11, 20], "benchmark": [11, 12, 45], "seamless": 11, "experi": [11, 23, 25], "polynomi": 11, "rbf": [11, 17, 41], "radial": 11, "deliv": 12, "100x": 12, "vector": [12, 16, 17, 26], "instruct": [12, 20, 23, 25, 26], "hardwar": [12, 19, 20], "thread": [12, 25], "mathemat": 12, "benefit": [12, 25], "coupl": [12, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41], "chart": 12, "bench": 12, "abl": 13, "protocol": 13, "panda": [13, 31, 32, 35, 38, 39], "seri": [13, 15, 16, 17], "polar": 13, "receiv": [13, 46], "unsupport": [13, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 41, 42], "notebook": [14, 26], "introduct": [14, 45], "summari": [14, 35], "speedup": [14, 19, 20, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42], "brows": 14, "chapter": 14, "task": [14, 25, 26, 45], "multiclass": [14, 15], "vision": 14, "regressor": [14, 21], "stack": [14, 16], "autogluon": 15, "evalml": 15, "blend": 15, "pycaret": 15, "tp": [15, 16, 17], "stand": [15, 16, 17], "tabular": [15, 16, 17], "playground": [15, 16, 17], "beginn": [15, 16, 17], "friendli": [15, 16, 17], "competit": [15, 16, 17], "jun": [15, 16], "2021": [15, 16, 17], "synthet": [15, 16, 17], "ecommerc": [15, 16], "categori": [15, 16, 34], "titan": [15, 16], "datset": 15, "passeng": [15, 16], "survivi": [15, 16], "oct": 15, "molecular": 15, "biolog": 15, "molecul": 15, "variou": [15, 16, 17], "chemic": 15, "nov": [15, 16], "spam": [15, 16], "extract": [15, 16, 38], "jan": 15, "2022": [15, 16, 17], "fiction": 15, "sale": [15, 17], "date": [15, 35, 38], "countri": 15, "usual": [16, 17, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42], "comparison": [16, 17, 25], "content": [16, 17], "logist": [16, 20, 26], "preprocess": [16, 17, 31, 32], "search": [16, 17], "optuna": [16, 17], "eli5": [16, 17], "permut": 16, "apr": 16, "construct": 16, "engin": [16, 17], "transform": [16, 23, 27, 28, 29, 31, 32, 37, 38, 39, 40], "paramt": [16, 17], "hot": 16, "encod": [16, 27, 34, 35, 37, 38, 39, 40], "dimension": [16, 26], "reduct": [16, 26], "pipelin": [16, 21], "dec": 16, "cover": [16, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 41, 42], "nearest": [16, 26], "neighbor": [16, 25, 26, 30], "feb": 16, "bacteria": 16, "dna": 16, "speci": 16, "repeat": 16, "lossi": 16, "snippet": 16, "cv": 16, "digit": [16, 26], "recogn": [16, 23], "mnist": [16, 26], "hand": 16, "written": 16, "nlp": 16, "disast": 16, "tweet": 16, "real": 16, "ones": [16, 25], "tf": 16, "idf": 16, "v": [16, 21, 45], "text": 16, "cook": 16, "recip": 16, "ingredi": 16, "cuisin": 16, "tfidfvector": 16, "overflow": 16, "qualiti": [16, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41], "baselin": 17, "nu": [17, 26, 34], "jul": 17, "pollut": 17, "air": 17, "weather": 17, "sensor": 17, "aug": 17, "loan": 17, "loss": [17, 20, 33], "associ": [17, 21, 22], "hous": 17, "price": 17, "explor": [17, 26, 45], "outlier": [17, 22], "miss": [17, 24, 35, 39], "gridsearchcv": 17, "mar": 17, "spatio": 17, "tempor": 17, "traffic": 17, "forecast": 17, "twelv": 17, "flow": 17, "major": 17, "metropolitan": 17, "area": 17, "sep": 17, "insur": 17, "custom": 17, "claim": 17, "polici": [17, 21], "fore": 17, "futur": [17, 24], "month": [17, 35, 38], "daili": 17, "uxlfound": [18, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42], "blob": [18, 42], "submodul": [19, 20], "gbt": 19, "load_iri": 19, "return_x_i": [19, 27, 28, 29, 30, 33, 34, 36, 37, 41], "model_skl": 19, "model_d4p": 19, "mkl": 19, "exponenti": 19, "alreadi": [19, 23, 25, 44], "against": 19, "besid": 19, "glum": 19, "platinum": 20, "8275cl": 20, "smart": 20, "arrang": 20, "ram": [20, 25], "shap": 20, "xgb": 20, "dm": 20, "dmatrix": 20, "xgb_model": 20, "param": [20, 21, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42], "squarederror": 20, "dtrain": 20, "num_boost_round": 20, "d4p_model": 20, "assert_allclos": 20, "rtol": 20, "1e": 20, "contrast": 20, "drop": [20, 25, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42], "fewer": 20, "multioutput": [20, 21], "nor": [20, 25], "basic_statist": 21, "result_opt": 21, "n_job": [21, 28, 30, 32, 33, 35, 36], "extensionestim": 21, "baseestim": 21, "statist": 21, "string": [21, 23], "sum_squar": 21, "sum_squares_cent": 21, "standard_devi": 21, "second_order_raw_mo": 21, "job": 21, "joblib": 21, "parallel_backend": 21, "glossari": 21, "min_": 21, "max_": 21, "sum_": 21, "mean_": 21, "variance_": 21, "bessel": 21, "variation_": 21, "sum_squares_": 21, "standard_deviation_": 21, "unbias": 21, "sum_squares_centered_": 21, "second_order_raw_moment_": 21, "trail": 21, "underscor": 21, "2025": 21, "remov": 21, "2026": 21, "exhibit": 21, "small": 21, "Not": 21, "convent": [21, 22], "instanc": 21, "itself": 21, "get_metadata_rout": 21, "metadata": 21, "rout": 21, "pleas": [21, 38], "metadatarequest": 21, "encapsul": 21, "get_param": 21, "deep": [21, 45], "subobject": 21, "map": [21, 35], "dict": 21, "set_fit_request": 21, "unchang": 21, "enable_metadata_rout": 21, "set_config": [21, 23], "meta": 21, "rais": 21, "metadata_rout": 21, "retain": 21, "insid": 21, "set_param": 21, "well": 21, "nest": 21, "latter": 21, "form": 21, "__": 21, "batch_siz": 21, "partial_fit": 21, "n_samples_seen_": 21, "Will": 21, "reset": 21, "batch_size_": 21, "seen": 21, "trigger": 21, "finalize_fit": 21, "dispatch": 21, "incb": 21, "minibatch": 21, "check_input": 21, "check_arrai": 21, "set_partial_fit_request": 21, "incrementalempiricalcovari": 21, "store_precis": 21, "assume_cent": 21, "likelihood": 21, "whose": [21, 23], "almost": 21, "exactli": 21, "balanc": 21, "consumpt": 21, "overwritten": 21, "unsaf": 21, "location_": 21, "covariance_": 21, "inccov": 21, "error_norm": 21, "comp_cov": 21, "frobeniu": 21, "spectral": 21, "tr": 21, "rescal": 21, "sens": 21, "get_precis": 21, "getter": 21, "precision_": 21, "mahalanobi": 21, "distanc": [21, 30], "assum": 21, "drawn": 21, "dist": 21, "score": [21, 28, 30, 34, 41], "gaussian": [21, 42], "respect": 21, "set_score_request": 21, "incrementallinearregress": 21, "fit_intercept": [21, 27, 31, 37, 38, 39, 40], "copy_x": [21, 27, 29, 31, 32, 37, 38, 39, 40], "multioutputmixin": 21, "regressormixin": 21, "els": [21, 38], "n_target": 21, "inclr": 21, "determin": 21, "frac": 21, "residu": 21, "y_true": 21, "y_pred": [21, 28, 36], "becaus": 21, "arbitrarili": 21, "constant": 21, "disregard": 21, "precomput": 21, "n_samples_fit": 21, "n_output": 21, "uniform_averag": 21, "23": [21, 35], "keep": 21, "r2_score": 21, "multioutputregressor": 21, "incrementalridg": 21, "strength": 21, "stronger": 21, "albeit": 22, "rule": 22, "implicit": 22, "al": 22, "bacon": 22, "detect": [22, 26], "stump": 22, "brownboost": 22, "finer": 23, "grain": 23, "concept": 23, "unifi": 23, "share": [23, 26], "Be": 23, "gpgpu": [23, 25], "driver": [23, 25], "dpcpp": 23, "cpp": 23, "rt": 23, "dpcpp_cpp_rt": 23, "get_config": 23, "primarili": 23, "filter": 23, "selector": 23, "deduc": 23, "allow_fallback_to_host": 23, "usm_ndarrai": 23, "resid": 23, "consum": [23, 25], "behavior": 23, "restrict": 23, "absenc": 23, "throw": 23, "stabl": [24, 25, 42], "fulli": 24, "sklearnex_preview": 24, "empti": 24, "o": [24, 25, 31, 32, 46], "__module__": 24, "incremental_pca": 24, "ye": [24, 35], "readi": 25, "elev": 25, "perman": 25, "undo": 25, "my_appl": 25, "script": 25, "scenario": [25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 41, 42], "regist": 25, "n_cluster": [25, 29], "read": 25, "glob": 25, "random_forest_classifi": 25, "global_patch": 25, "notif": 25, "nv": 25, "unpatch_sklearn": [25, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42], "clone": 25, "successfulli": 25, "reimport": [25, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42], "prevent": 25, "conflict": 25, "activ": 25, "9": [25, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42], "11": [25, 27, 28, 29, 31, 32, 34, 35, 37, 38, 39, 40], "13": [25, 27, 31, 34, 35, 37, 38, 39, 40], "involv": 25, "wheel": 25, "highli": 25, "download": 25, "least": 25, "sse2": 25, "sse4": 25, "avx2": 25, "avx512": 25, "arm": 25, "onemkl": 25, "ubuntu": 25, "18": [25, 32, 35], "04": [25, 35, 38], "server": 25, "2019": 25, "unoptim": 25, "enough": 25, "jupyt": 26, "cifar": 26, "adult": 26, "rain": 26, "australia": 26, "airlin": 26, "depdelai": 26, "yearpredictionmsd": 26, "medic": 26, "charg": 26, "yolanda": 26, "rigd": 26, "york": 26, "citi": 26, "bike": 26, "ieee": 26, "fraud": 26, "higg": 26, "spoken": 26, "arab": 26, "varieti": 26, "catalog": 26, "multiarchitectur": 26, "fpga": 26, "timeit": [27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42], "default_tim": [27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42], "timer": [27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42], "warn": [27, 28, 29, 31, 32, 33, 34, 35, 37, 38, 39, 40, 42], "fetch_openml": [27, 28, 29, 30, 33, 34, 35, 36, 37, 38, 39, 40, 41], "labelencod": [27, 35, 37, 38, 39, 40], "ipython": [27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41], "displai": [27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41], "html": [27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42], "filterwarn": [27, 28, 29, 31, 32, 33, 34, 35, 37, 38, 39, 40, 42], "airlines_depdelay_10m": [27, 37], "let": [27, 28, 29, 37, 38, 39, 40], "col": [27, 35, 37, 38, 39, 40], "uniquecarri": [27, 37], "dest": [27, 37], "le": [27, 37, 38, 39, 40], "9000000": [27, 37], "1000000": [27, 37], "standardscal": [27, 31, 32, 35, 37, 38, 39, 40], "scaler_i": [27, 31, 32, 37, 38, 39, 40], "to_numpi": [27, 31, 32, 37, 38, 39, 40], "reshap": [27, 31, 32, 37, 38, 39, 40], "ravel": [27, 31, 32, 37, 38, 39, 40], "advantag": [27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42], "affect": [27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 41, 42], "l1_ratio": 27, "train_patch": [27, 28, 29, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41], "2f": [27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42], "39": [27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42], "28": [27, 35, 40], "y_predict": [27, 31, 32, 33, 37, 38, 39, 40], "mse_metric_opt": [27, 31, 32, 37, 38, 39, 40], "mean_squared_error": [27, 31, 32, 36, 37, 38, 39, 40], "0109113399224974": 27, "cancel": [27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42], "train_unpatch": [27, 28, 29, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41], "96": [27, 30], "mse_metric_origin": [27, 31, 32, 37, 38, 39, 40], "0109113399545733": 27, "h3": [27, 28, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40], "br": [27, 28, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40], "unpatch": [27, 28, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40], "ratio": [27, 28, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40], "ul": [27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41], "li": [27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41], "strong": [27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41], "1f": [27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42], "originalms": [27, 31, 32, 36, 37, 38, 39, 40], "9999999999682703": 27, "qualityget": [27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41], "14": [27, 29, 35, 39, 40, 41], "2x": 27, "davies_bouldin_scor": 28, "minmaxscal": [28, 29, 31, 32, 37, 38, 39, 40], "scaler_x": [28, 29, 31, 32, 37, 38, 39, 40], "fit_predict": 28, "37": [28, 42], "look": [28, 29], "davi": 28, "bouldin": 28, "score_opt": [28, 34], "8542652084275848": 28, "469": 28, "21": [28, 35], "score_origin": [28, 34], "originaldavi": 28, "73": 28, "6x": 28, "236930": 29, "26326": 29, "128": 29, "36": [29, 30], "inertia": 29, "iter": 29, "inertia_opt": 29, "inertia_": 29, "n_iter_opt": 29, "n_iter_": 29, "13346": 29, "641333761074": 29, "274": 29, "192": 29, "inertia_origin": 29, "n_iter_origin": 29, "13352": 29, "813785961785": 29, "212": 29, "bigger": 29, "originalinertia": 29, "9995377414603653": 29, "29": [29, 35], "lowerwith": 29, "26": [29, 35], "mnist_784": 30, "72": [30, 36], "56000": 30, "784": 30, "14000": 30, "n_neighbor": 30, "40": [30, 35], "time_opt": [30, 42], "45": [30, 35, 40], "report": [30, 41, 44], "classification_report": [30, 41], "recal": [30, 41], "f1": [30, 41], "97": 30, "99": 30, "98": 30, "1365": 30, "93": 30, "1637": 30, "94": 30, "1401": 30, "95": 30, "1455": 30, "1380": 30, "1219": 30, "1317": 30, "1420": 30, "1379": 30, "92": 30, "1427": 30, "macro": [30, 41], "avg": [30, 41], "mnsit": 30, "time_origin": [30, 42], "15": [30, 33, 35], "h2": [30, 41], "24": [30, 33, 34, 35], "9x": [30, 33, 36, 37], "pd": [31, 32, 35, 38, 39], "dataset_dir": [31, 32], "dataset_nam": [31, 32], "year_prediction_msd": [31, 32], "url": [31, 32], "archiv": [31, 32], "ic": [31, 32], "uci": [31, 32], "edu": [31, 32], "ml": [31, 32], "databas": [31, 32], "00203": [31, 32], "txt": [31, 32], "zip": [31, 32, 42], "makedir": [31, 32], "exist_ok": [31, 32], "local_url": [31, 32], "path": [31, 32], "basenam": [31, 32], "isfil": [31, 32], "wb": [31, 32], "iter_cont": [31, 32], "8192": [31, 32], "read_csv": [31, 32], "header": [31, 32], "iloc": [31, 32], "463810": [31, 32], "51535": [31, 32], "01": [31, 35], "06": [31, 37, 41], "9676607251167297": 31, "83": [31, 36], "9676599502563477": 31, "0000008344650269": 31, "7x": [31, 38, 39, 40], "03": [32, 33, 35, 39], "7716818451881409": 32, "53": 32, "7716856598854065": 32, "9999950528144836": 32, "4x": [32, 34, 45], "43": [33, 35], "54000": 33, "3072": 33, "6000": 33, "82": [33, 35, 41], "log_loss_opt": 33, "log_loss": 33, "7073530800931587": 33, "395": 33, "log_loss_origin": 33, "7140870590578428": 33, "originallog": 33, "9981869086917978": 33, "medical_charges_nomin": 34, "cat_column": [34, 35], "select_dtyp": [34, 35], "cat": 34, "train_siz": 34, "48919": 34, "114146": 34, "poli": 34, "69": 34, "r2": 34, "8635974264586637": 34, "331": 34, "85": 34, "8636031741516902": 34, "originalr2": 34, "999993344520726": 34, "dai": [35, 38], "imput": [35, 39], "simpleimput": 35, "accuracy_scor": 35, "data_id": [35, 38, 39, 40], "46315": 35, "as_fram": [35, 38, 39, 40], "df": 35, "frame": [35, 38, 39], "head": 35, "mintemp": 35, "maxtemp": 35, "rainfal": 35, "evapor": 35, "sunshin": 35, "windgustdir": 35, "windgustspe": 35, "winddir9am": 35, "humidity9am": 35, "humidity3pm": 35, "pressure9am": 35, "pressure3pm": 35, "cloud9am": 35, "cloud3pm": 35, "temp9am": 35, "temp3pm": 35, "raintodai": 35, "raintomorrow": 35, "2008": 35, "alburi": 35, "22": [35, 38], "nan": 35, "44": [35, 36], "71": 35, "1007": 35, "16": 35, "02": 35, "wnw": 35, "nnw": 35, "1010": 35, "17": 35, "wsw": 35, "46": [35, 40], "38": 35, "30": 35, "1008": 35, "ne": 35, "se": 35, "1017": 35, "1012": 35, "05": 35, "41": 35, "en": 35, "1006": 35, "145460": 35, "info": [35, 46], "lt": 35, "gt": 35, "rangeindex": 35, "145459": 35, "null": 35, "count": 35, "143975": 35, "144199": 35, "142199": 35, "82670": 35, "75625": 35, "135134": 35, "135197": 35, "134894": 35, "winddir3pm": 35, "141232": 35, "windspeed9am": 35, "143693": 35, "windspeed3pm": 35, "142398": 35, "142806": 35, "140953": 35, "130395": 35, "130432": 35, "89572": 35, "86102": 35, "19": [35, 38], "20": 35, "141851": 35, "142193": 35, "percentag": 35, "missing_valu": 35, "isnul": 35, "missing_values_percentag": 35, "missing_values_df": 35, "000000": 35, "1485": 35, "020899": 35, "1261": 35, "866905": 35, "3261": 35, "241853": 35, "62790": 35, "166506": 35, "69835": 35, "48": 35, "009762": 35, "10326": 35, "098859": 35, "10263": 35, "055548": 35, "10566": 35, "263853": 35, "4228": 35, "906641": 35, "1767": 35, "214767": 35, "3062": 35, "105046": 35, "2654": 35, "824557": 35, "4507": 35, "098446": 35, "15065": 35, "356799": 35, "15028": 35, "331363": 35, "55888": 35, "421559": 35, "59358": 35, "807095": 35, "3609": 35, "481094": 35, "3267": 35, "245978": 35, "dropna": 35, "thresh": 35, "axi": 35, "to_datetim": [35, 38], "dt": [35, 38], "astyp": 35, "int64": 35, "145458": 35, "datetime64": 35, "141556": 35, "141871": 35, "140787": 35, "132863": 35, "132923": 35, "132180": 35, "138415": 35, "140845": 35, "139563": 35, "140419": 35, "138583": 35, "128179": 35, "128212": 35, "141289": 35, "139467": 35, "num_column": 35, "imputer_num": 35, "fit_transform": [35, 42], "scaler": 35, "frequent": 35, "imputer_cat": 35, "most_frequ": 35, "113754": 35, "28439": 35, "n_estim": [35, 36], "max_featur": 35, "patched_model": 35, "patched_train_tim": 35, "3f": 35, "439": 35, "patched_y_pr": 35, "patched_accuraci": 35, "4f": 35, "8551": 35, "ori_model": 35, "ori_train_tim": 35, "47": 35, "955": 35, "ori_y_pr": 35, "ori_accuraci": 35, "8549": 35, "compare_df": 35, "9546": 35, "4395": 35, "originalaccuraci": 35, "8550933577129998": 35, "8548823798305144": 35, "0002467917077986": 35, "1x": 35, "280000": 36, "120000": 36, "150": 36, "56": 36, "mse_opt": 36, "62232345666878": 36, "34": 36, "mse_origin": 36, "80131297814816": 36, "9978641203208111": 36, "0014288520708046": 37, "70": 37, "0014288520708057": 37, "9999999999999989": 37, "43526": 38, "datetim": 38, "start_tim": 38, "stop_tim": 38, "start_year": 38, "start_month": 38, "start_dai": 38, "start_hour": 38, "stop_year": 38, "stop_month": 38, "stop_dai": 38, "stop_hour": 38, "start_station_nam": 38, "end_station_nam": 38, "gender": 38, "user_typ": 38, "trip_dur": 38, "661951": 38, "73551": 38, "29078674972552815": 38, "29078674972650354": 38, "9999999999966457": 38, "45955": 39, "fillna": 39, "used_pin_numb": 39, "online_ord": 39, "used_chip": 39, "repeat_retail": 39, "900000": 39, "100000": 39, "6899813655698377": 39, "6899813655698382": 39, "9999999999999992": 39, "45570": 40, "jet": 40, "tag": 40, "9900000": 40, "1100000": 40, "9023910206230603": 40, "a9a": 41, "08": 41, "87": 41, "88": 41, "7414": 41, "58": 41, "61": 41, "2355": 41, "9769": 41, "74": 41, "75": 41, "803": 41, "57": 41, "0x": 41, "make_blob": 42, "matplotlib": 42, "pyplot": 42, "plt": 42, "inlin": 42, "isotrop": 42, "20k": 42, "20000": 42, "manifold": 42, "embedding_intelex": 42, "diverg": 42, "kl_divergence_": 42, "63": 42, "289110606110757": 42, "embedding_origin": 42, "66": 42, "2955403327941895": 42, "color": 42, "emb": 42, "titl": 42, "xlabel": 42, "ylabel": 42, "face": 44, "address": 44, "encount": 44, "idea": 44, "comment": 44, "har": 45, "potenti": 45, "essenti": 45, "overview": 45, "classic": 45, "googl": 45, "colaboratori": 45, "workload": 45, "gpair": 45, "drive": 45, "innov": 45, "chain": 45, "enterpris": 45, "technologi": 45, "red": 45, "hat": 45, "openshift": 45, "scienc": 45, "hipposcreen": 45, "neurotechnologi": 45, "startup": 45, "brain": 45, "wave": 45, "sklearnex_verbos": 46, "shown": 46, "below": 46, "logger": 46, "getlogg": 46, "setlevel": 46, "statement": 46}, "objects": {"daal4py": [[6, 0, 1, "", "adaboost_model"], [6, 0, 1, "", "adaboost_prediction"], [6, 0, 1, "", "adaboost_training"], [6, 0, 1, "", "adaboost_training_result"], [6, 0, 1, "", "association_rules"], [6, 0, 1, "", "association_rules_result"], [6, 0, 1, "", "bacon_outlier_detection"], [6, 0, 1, "", "bacon_outlier_detection_result"], [6, 0, 1, "", "bf_knn_classification_model"], [6, 0, 1, "", "bf_knn_classification_prediction"], [6, 0, 1, "", "bf_knn_classification_training"], [6, 0, 1, "", "bf_knn_classification_training_result"], [6, 0, 1, "", "brownboost_model"], [6, 0, 1, "", "brownboost_prediction"], [6, 0, 1, "", "brownboost_training"], [6, 0, 1, "", "brownboost_training_result"], [6, 0, 1, "", "cholesky"], [6, 0, 1, "", "cholesky_result"], [6, 0, 1, "", "classifier_prediction_result"], [6, 0, 1, "", "correlation_distance"], [6, 0, 1, "", "correlation_distance_result"], [6, 0, 1, "", "cosine_distance"], [6, 0, 1, "", "cosine_distance_result"], [6, 0, 1, "", "covariance"], [6, 0, 1, "", "covariance_result"], [6, 3, 1, "", "daalfini"], [6, 3, 1, "", "daalinit"], [6, 0, 1, "", "dbscan"], [6, 0, 1, "", "dbscan_result"], [6, 0, 1, "", "decision_forest_classification_model"], [6, 0, 1, "", "decision_forest_classification_prediction"], [6, 0, 1, "", "decision_forest_classification_training"], [6, 0, 1, "", "decision_forest_classification_training_result"], [6, 0, 1, "", "decision_forest_regression_model"], [6, 0, 1, "", "decision_forest_regression_prediction"], [6, 0, 1, "", "decision_forest_regression_prediction_result"], [6, 0, 1, "", "decision_forest_regression_training"], [6, 0, 1, "", "decision_forest_regression_training_result"], [6, 0, 1, "", "decision_tree_classification_model"], [6, 0, 1, "", "decision_tree_classification_prediction"], [6, 0, 1, "", "decision_tree_classification_training"], [6, 0, 1, "", "decision_tree_classification_training_result"], [6, 0, 1, "", "decision_tree_regression_model"], [6, 0, 1, "", "decision_tree_regression_prediction"], [6, 0, 1, "", "decision_tree_regression_prediction_result"], [6, 0, 1, "", "decision_tree_regression_training"], [6, 0, 1, "", "decision_tree_regression_training_result"], [6, 0, 1, "", "distributions_bernoulli"], [6, 1, 1, "", "distributions_bernoulli_result"], [6, 0, 1, "", "distributions_normal"], [6, 1, 1, "", "distributions_normal_result"], [6, 0, 1, "", "distributions_uniform"], [6, 1, 1, "", "distributions_uniform_result"], [6, 0, 1, "", "em_gmm"], [6, 0, 1, "", "em_gmm_init"], [6, 0, 1, "", "em_gmm_init_result"], [6, 0, 1, "", "em_gmm_result"], [6, 3, 1, "", "enable_thread_pinning"], [6, 0, 1, "", "engines_mcg59"], [6, 1, 1, "", "engines_mcg59_result"], [6, 0, 1, "", "engines_mrg32k3a"], [6, 1, 1, "", "engines_mrg32k3a_result"], [6, 0, 1, "", "engines_mt19937"], [6, 1, 1, "", "engines_mt19937_result"], [6, 0, 1, "", "engines_mt2203"], [6, 1, 1, "", "engines_mt2203_result"], [6, 0, 1, "", "engines_philox4x32x10"], [6, 1, 1, "", "engines_philox4x32x10_result"], [6, 0, 1, "", "engines_result"], [6, 0, 1, "", "gbt_classification_model"], [6, 0, 1, "", "gbt_classification_prediction"], [6, 0, 1, "", "gbt_classification_training"], [6, 0, 1, "", "gbt_classification_training_result"], [6, 0, 1, "", "gbt_regression_model"], [6, 0, 1, "", "gbt_regression_prediction"], [6, 0, 1, "", "gbt_regression_prediction_result"], [6, 0, 1, "", "gbt_regression_training"], [6, 0, 1, "", "gbt_regression_training_result"], [6, 0, 1, "", "implicit_als_model"], [6, 0, 1, "", "implicit_als_prediction_ratings"], [6, 0, 1, "", "implicit_als_prediction_ratings_result"], [6, 0, 1, "", "implicit_als_training"], [6, 0, 1, "", "implicit_als_training_result"], [6, 0, 1, "", "kdtree_knn_classification_model"], [6, 0, 1, "", "kdtree_knn_classification_prediction"], [6, 0, 1, "", "kdtree_knn_classification_training"], [6, 0, 1, "", "kdtree_knn_classification_training_result"], [6, 0, 1, "", "kmeans"], [6, 0, 1, "", "kmeans_init"], [6, 0, 1, "", "kmeans_init_result"], [6, 0, 1, "", "kmeans_result"], [6, 0, 1, "", "lasso_regression_model"], [6, 0, 1, "", "lasso_regression_prediction"], [6, 0, 1, "", "lasso_regression_prediction_result"], [6, 0, 1, "", "lasso_regression_training"], [6, 0, 1, "", "lasso_regression_training_result"], [6, 0, 1, "", "linear_regression_model"], [6, 0, 1, "", "linear_regression_prediction"], [6, 0, 1, "", "linear_regression_prediction_result"], [6, 0, 1, "", "linear_regression_training"], [6, 0, 1, "", "linear_regression_training_result"], [6, 0, 1, "", "logistic_regression_model"], [6, 0, 1, "", "logistic_regression_prediction"], [6, 0, 1, "", "logistic_regression_training"], [6, 0, 1, "", "logistic_regression_training_result"], [6, 0, 1, "", "logitboost_model"], [6, 0, 1, "", "logitboost_prediction"], [6, 0, 1, "", "logitboost_training"], [6, 0, 1, "", "logitboost_training_result"], [6, 0, 1, "", "low_order_moments"], [6, 0, 1, "", "low_order_moments_result"], [6, 0, 1, "", "multinomial_naive_bayes_model"], [6, 0, 1, "", "multinomial_naive_bayes_prediction"], [6, 0, 1, "", "multinomial_naive_bayes_training"], [6, 0, 1, "", "multinomial_naive_bayes_training_result"], [6, 0, 1, "", "multivariate_outlier_detection"], [6, 0, 1, "", "multivariate_outlier_detection_result"], [6, 3, 1, "", "my_procid"], [6, 0, 1, "", "normalization_minmax"], [6, 0, 1, "", "normalization_minmax_result"], [6, 0, 1, "", "normalization_zscore"], [6, 0, 1, "", "normalization_zscore_result"], [6, 3, 1, "", "num_procs"], [6, 3, 1, "", "num_threads"], [6, 0, 1, "", "optimization_solver_adagrad"], [6, 0, 1, "", "optimization_solver_adagrad_result"], [6, 0, 1, "", "optimization_solver_coordinate_descent"], [6, 0, 1, "", "optimization_solver_coordinate_descent_result"], [6, 0, 1, "", "optimization_solver_cross_entropy_loss"], [6, 1, 1, "", "optimization_solver_cross_entropy_loss_result"], [6, 0, 1, "", "optimization_solver_lbfgs"], [6, 0, 1, "", "optimization_solver_lbfgs_result"], [6, 0, 1, "", "optimization_solver_logistic_loss"], [6, 1, 1, "", "optimization_solver_logistic_loss_result"], [6, 0, 1, "", "optimization_solver_mse"], [6, 1, 1, "", "optimization_solver_mse_result"], [6, 0, 1, "", "optimization_solver_precomputed"], [6, 1, 1, "", "optimization_solver_precomputed_result"], [6, 0, 1, "", "optimization_solver_saga"], [6, 0, 1, "", "optimization_solver_saga_result"], [6, 0, 1, "", "optimization_solver_sgd"], [6, 0, 1, "", "optimization_solver_sgd_result"], [6, 1, 1, "", "optimization_solver_sum_of_functions_result"], [6, 0, 1, "", "pca"], [6, 0, 1, "", "pca_result"], [6, 0, 1, "", "pca_transform"], [6, 0, 1, "", "pca_transform_result"], [6, 0, 1, "", "pivoted_qr"], [6, 0, 1, "", "pivoted_qr_result"], [6, 0, 1, "", "qr"], [6, 0, 1, "", "qr_result"], [6, 0, 1, "", "quantiles"], [6, 0, 1, "", "quantiles_result"], [6, 0, 1, "", "ridge_regression_model"], [6, 0, 1, "", "ridge_regression_prediction"], [6, 0, 1, "", "ridge_regression_prediction_result"], [6, 0, 1, "", "ridge_regression_training"], [6, 0, 1, "", "ridge_regression_training_result"], [6, 0, 1, "", "sorting"], [6, 0, 1, "", "sorting_result"], [6, 0, 1, "", "stump_classification_model"], [6, 0, 1, "", "stump_classification_prediction"], [6, 0, 1, "", "stump_classification_training"], [6, 0, 1, "", "stump_classification_training_result"], [6, 0, 1, "", "stump_regression_model"], [6, 0, 1, "", "stump_regression_prediction"], [6, 0, 1, "", "stump_regression_prediction_result"], [6, 0, 1, "", "stump_regression_training"], [6, 0, 1, "", "stump_regression_training_result"], [6, 0, 1, "", "svd"], [6, 0, 1, "", "svd_result"], [6, 0, 1, "", "svm_model"], [6, 0, 1, "", "svm_prediction"], [6, 0, 1, "", "svm_training"], [6, 0, 1, "", "svm_training_result"], [6, 0, 1, "", "univariate_outlier_detection"], [6, 0, 1, "", "univariate_outlier_detection_result"]], "daal4py.adaboost_model": [[6, 1, 1, "", "Alpha"], [6, 1, 1, "", "NFeatures"], [6, 1, 1, "", "NumberOfFeatures"], [6, 1, 1, "", "NumberOfWeakLearners"], [6, 2, 1, "", "WeakLearnerModel"]], "daal4py.adaboost_prediction": [[6, 2, 1, "", "compute"]], "daal4py.adaboost_training": [[6, 2, 1, "", "compute"]], "daal4py.adaboost_training_result": [[6, 1, 1, "", "model"], [6, 1, 1, "", "weakLearnersErrors"]], "daal4py.association_rules": [[6, 2, 1, "", "compute"]], "daal4py.association_rules_result": [[6, 1, 1, "", "antecedentItemsets"], [6, 1, 1, "", "confidence"], [6, 1, 1, "", "consequentItemsets"], [6, 1, 1, "", "largeItemsets"], [6, 1, 1, "", "largeItemsetsSupport"]], "daal4py.bacon_outlier_detection": [[6, 2, 1, "", "compute"]], "daal4py.bacon_outlier_detection_result": [[6, 1, 1, "", "weights"]], "daal4py.bf_knn_classification_model": [[6, 1, 1, "", "NFeatures"], [6, 1, 1, "", "NumberOfFeatures"]], "daal4py.bf_knn_classification_prediction": [[6, 2, 1, "", "compute"]], "daal4py.bf_knn_classification_training": [[6, 2, 1, "", "compute"]], "daal4py.bf_knn_classification_training_result": [[6, 1, 1, "", "model"]], "daal4py.brownboost_model": [[6, 1, 1, "", "Alpha"], [6, 1, 1, "", "NFeatures"], [6, 1, 1, "", "NumberOfFeatures"], [6, 1, 1, "", "NumberOfWeakLearners"], [6, 2, 1, "", "WeakLearnerModel"]], "daal4py.brownboost_prediction": [[6, 2, 1, "", "compute"]], "daal4py.brownboost_training": [[6, 2, 1, "", "compute"]], "daal4py.brownboost_training_result": [[6, 1, 1, "", "model"]], "daal4py.cholesky": [[6, 2, 1, "", "compute"]], "daal4py.cholesky_result": [[6, 1, 1, "", "choleskyFactor"]], "daal4py.classifier_prediction_result": [[6, 1, 1, "", "logProbabilities"], [6, 1, 1, "", "prediction"], [6, 1, 1, "", "probabilities"]], "daal4py.correlation_distance": [[6, 2, 1, "", "compute"]], "daal4py.correlation_distance_result": [[6, 1, 1, "", "correlationDistance"]], "daal4py.cosine_distance": [[6, 2, 1, "", "compute"]], "daal4py.cosine_distance_result": [[6, 1, 1, "", "cosineDistance"]], "daal4py.covariance": [[6, 2, 1, "", "compute"]], "daal4py.covariance_result": [[6, 1, 1, "", "correlation"], [6, 1, 1, "", "covariance"], [6, 1, 1, "", "mean"]], "daal4py.dbscan": [[6, 2, 1, "", "compute"]], "daal4py.dbscan_result": [[6, 1, 1, "", "assignments"], [6, 1, 1, "", "coreIndices"], [6, 1, 1, "", "coreObservations"], [6, 1, 1, "", "nClusters"]], "daal4py.decision_forest_classification_model": [[6, 1, 1, "", "NFeatures"], [6, 1, 1, "", "NumberOfClasses"], [6, 1, 1, "", "NumberOfFeatures"], [6, 1, 1, "", "NumberOfTrees"]], "daal4py.decision_forest_classification_prediction": [[6, 2, 1, "", "compute"]], "daal4py.decision_forest_classification_training": [[6, 2, 1, "", "compute"]], "daal4py.decision_forest_classification_training_result": [[6, 1, 1, "", "model"], [6, 1, 1, "", "outOfBagError"], [6, 1, 1, "", "outOfBagErrorAccuracy"], [6, 1, 1, "", "outOfBagErrorDecisionFunction"], [6, 1, 1, "", "outOfBagErrorPerObservation"], [6, 1, 1, "", "variableImportance"]], "daal4py.decision_forest_regression_model": [[6, 1, 1, "", "NumberOfFeatures"], [6, 1, 1, "", "NumberOfTrees"]], "daal4py.decision_forest_regression_prediction": [[6, 2, 1, "", "compute"]], "daal4py.decision_forest_regression_prediction_result": [[6, 1, 1, "", "prediction"]], "daal4py.decision_forest_regression_training": [[6, 2, 1, "", "compute"]], "daal4py.decision_forest_regression_training_result": [[6, 1, 1, "", "model"], [6, 1, 1, "", "outOfBagError"], [6, 1, 1, "", "outOfBagErrorPerObservation"], [6, 1, 1, "", "outOfBagErrorPrediction"], [6, 1, 1, "", "outOfBagErrorR2"], [6, 1, 1, "", "variableImportance"]], "daal4py.decision_tree_classification_model": [[6, 1, 1, "", "NFeatures"], [6, 1, 1, "", "NumberOfFeatures"]], "daal4py.decision_tree_classification_prediction": [[6, 2, 1, "", "compute"]], "daal4py.decision_tree_classification_training": [[6, 2, 1, "", "compute"]], "daal4py.decision_tree_classification_training_result": [[6, 1, 1, "", "model"]], "daal4py.decision_tree_regression_model": [[6, 1, 1, "", "NumberOfFeatures"]], "daal4py.decision_tree_regression_prediction": [[6, 2, 1, "", "compute"]], "daal4py.decision_tree_regression_prediction_result": [[6, 1, 1, "", "prediction"]], "daal4py.decision_tree_regression_training": [[6, 2, 1, "", "compute"]], "daal4py.decision_tree_regression_training_result": [[6, 1, 1, "", "model"]], "daal4py.distributions_bernoulli": [[6, 2, 1, "", "compute"]], "daal4py.distributions_normal": [[6, 2, 1, "", "compute"]], "daal4py.distributions_uniform": [[6, 2, 1, "", "compute"]], "daal4py.em_gmm": [[6, 2, 1, "", "compute"]], "daal4py.em_gmm_init": [[6, 2, 1, "", "compute"]], "daal4py.em_gmm_init_result": [[6, 1, 1, "", "covariances"], [6, 1, 1, "", "means"], [6, 1, 1, "", "weights"]], "daal4py.em_gmm_result": [[6, 1, 1, "", "covariances"], [6, 1, 1, "", "goalFunction"], [6, 1, 1, "", "means"], [6, 1, 1, "", "nIterations"], [6, 1, 1, "", "weights"]], "daal4py.engines_mcg59": [[6, 2, 1, "", "compute"]], "daal4py.engines_mrg32k3a": [[6, 2, 1, "", "compute"]], "daal4py.engines_mt19937": [[6, 2, 1, "", "compute"]], "daal4py.engines_mt2203": [[6, 2, 1, "", "compute"]], "daal4py.engines_philox4x32x10": [[6, 2, 1, "", "compute"]], "daal4py.engines_result": [[6, 1, 1, "", "randomNumbers"]], "daal4py.gbt_classification_model": [[6, 1, 1, "", "NFeatures"], [6, 1, 1, "", "NumberOfFeatures"], [6, 1, 1, "", "NumberOfTrees"], [6, 1, 1, "", "PredictionBias"]], "daal4py.gbt_classification_prediction": [[6, 2, 1, "", "compute"]], "daal4py.gbt_classification_training": [[6, 2, 1, "", "compute"]], "daal4py.gbt_classification_training_result": [[6, 1, 1, "", "model"], [6, 1, 1, "", "variableImportanceByCover"], [6, 1, 1, "", "variableImportanceByGain"], [6, 1, 1, "", "variableImportanceByTotalCover"], [6, 1, 1, "", "variableImportanceByTotalGain"], [6, 1, 1, "", "variableImportanceByWeight"]], "daal4py.gbt_regression_model": [[6, 1, 1, "", "NumberOfFeatures"], [6, 1, 1, "", "NumberOfTrees"], [6, 1, 1, "", "PredictionBias"]], "daal4py.gbt_regression_prediction": [[6, 2, 1, "", "compute"]], "daal4py.gbt_regression_prediction_result": [[6, 1, 1, "", "prediction"]], "daal4py.gbt_regression_training": [[6, 2, 1, "", "compute"]], "daal4py.gbt_regression_training_result": [[6, 1, 1, "", "model"], [6, 1, 1, "", "variableImportanceByCover"], [6, 1, 1, "", "variableImportanceByGain"], [6, 1, 1, "", "variableImportanceByTotalCover"], [6, 1, 1, "", "variableImportanceByTotalGain"], [6, 1, 1, "", "variableImportanceByWeight"]], "daal4py.implicit_als_model": [[6, 1, 1, "", "ItemsFactors"], [6, 1, 1, "", "UsersFactors"]], "daal4py.implicit_als_prediction_ratings": [[6, 2, 1, "", "compute"]], "daal4py.implicit_als_prediction_ratings_result": [[6, 1, 1, "", "prediction"]], "daal4py.implicit_als_training": [[6, 2, 1, "", "compute"]], "daal4py.implicit_als_training_result": [[6, 1, 1, "", "model"]], "daal4py.kdtree_knn_classification_model": [[6, 1, 1, "", "NFeatures"], [6, 1, 1, "", "NumberOfFeatures"]], "daal4py.kdtree_knn_classification_prediction": [[6, 2, 1, "", "compute"]], "daal4py.kdtree_knn_classification_training": [[6, 2, 1, "", "compute"]], "daal4py.kdtree_knn_classification_training_result": [[6, 1, 1, "", "model"]], "daal4py.kmeans": [[6, 2, 1, "", "compute"]], "daal4py.kmeans_init": [[6, 2, 1, "", "compute"]], "daal4py.kmeans_init_result": [[6, 1, 1, "", "centroids"]], "daal4py.kmeans_result": [[6, 1, 1, "", "assignments"], [6, 1, 1, "", "centroids"], [6, 1, 1, "", "nIterations"], [6, 1, 1, "", "objectiveFunction"]], "daal4py.lasso_regression_model": [[6, 1, 1, "", "Beta"], [6, 1, 1, "", "InterceptFlag"], [6, 1, 1, "", "NumberOfBetas"], [6, 1, 1, "", "NumberOfFeatures"], [6, 1, 1, "", "NumberOfResponses"]], "daal4py.lasso_regression_prediction": [[6, 2, 1, "", "compute"]], "daal4py.lasso_regression_prediction_result": [[6, 1, 1, "", "prediction"]], "daal4py.lasso_regression_training": [[6, 2, 1, "", "compute"]], "daal4py.lasso_regression_training_result": [[6, 1, 1, "", "gramMatrixId"], [6, 1, 1, "", "model"]], "daal4py.linear_regression_model": [[6, 1, 1, "", "Beta"], [6, 1, 1, "", "InterceptFlag"], [6, 1, 1, "", "NumberOfBetas"], [6, 1, 1, "", "NumberOfFeatures"], [6, 1, 1, "", "NumberOfResponses"]], "daal4py.linear_regression_prediction": [[6, 2, 1, "", "compute"]], "daal4py.linear_regression_prediction_result": [[6, 1, 1, "", "prediction"]], "daal4py.linear_regression_training": [[6, 2, 1, "", "compute"]], "daal4py.linear_regression_training_result": [[6, 1, 1, "", "model"]], "daal4py.logistic_regression_model": [[6, 1, 1, "", "Beta"], [6, 1, 1, "", "InterceptFlag"], [6, 1, 1, "", "NFeatures"], [6, 1, 1, "", "NumberOfBetas"], [6, 1, 1, "", "NumberOfFeatures"]], "daal4py.logistic_regression_prediction": [[6, 2, 1, "", "compute"]], "daal4py.logistic_regression_training": [[6, 2, 1, "", "compute"]], "daal4py.logistic_regression_training_result": [[6, 1, 1, "", "model"]], "daal4py.logitboost_model": [[6, 1, 1, "", "Iterations"], [6, 1, 1, "", "NFeatures"], [6, 1, 1, "", "NumberOfFeatures"], [6, 1, 1, "", "NumberOfWeakLearners"], [6, 2, 1, "", "WeakLearnerModel"]], "daal4py.logitboost_prediction": [[6, 2, 1, "", "compute"]], "daal4py.logitboost_training": [[6, 2, 1, "", "compute"]], "daal4py.logitboost_training_result": [[6, 1, 1, "", "model"]], "daal4py.low_order_moments": [[6, 2, 1, "", "compute"]], "daal4py.low_order_moments_result": [[6, 1, 1, "", "maximum"], [6, 1, 1, "", "mean"], [6, 1, 1, "", "minimum"], [6, 1, 1, "", "secondOrderRawMoment"], [6, 1, 1, "", "standardDeviation"], [6, 1, 1, "", "sum"], [6, 1, 1, "", "sumSquares"], [6, 1, 1, "", "sumSquaresCentered"], [6, 1, 1, "", "variance"], [6, 1, 1, "", "variation"]], "daal4py.mb": [[6, 0, 1, "", "GBTDAALModel"], [6, 0, 1, "", "LogisticDAALModel"], [6, 3, 1, "", "convert_model"]], "daal4py.mb.GBTDAALModel": [[6, 4, 1, "", "is_classifier_"], [6, 4, 1, "", "is_regressor_"], [6, 2, 1, "", "predict"], [6, 2, 1, "", "predict_proba"]], "daal4py.mb.LogisticDAALModel": [[6, 1, 1, "", "coef_"], [6, 1, 1, "", "dtype_"], [6, 1, 1, "", "intercept_"], [6, 1, 1, "", "n_classes_"], [6, 1, 1, "", "n_features_in_"], [6, 2, 1, "", "predict"], [6, 2, 1, "", "predict_log_proba"], [6, 2, 1, "", "predict_multiple"], [6, 2, 1, "", "predict_proba"]], "daal4py.multinomial_naive_bayes_model": [[6, 1, 1, "", "AuxTable"], [6, 1, 1, "", "LogP"], [6, 1, 1, "", "LogTheta"], [6, 1, 1, "", "NFeatures"], [6, 1, 1, "", "NumberOfFeatures"]], "daal4py.multinomial_naive_bayes_prediction": [[6, 2, 1, "", "compute"]], "daal4py.multinomial_naive_bayes_training": [[6, 2, 1, "", "compute"]], "daal4py.multinomial_naive_bayes_training_result": [[6, 1, 1, "", "model"]], "daal4py.multivariate_outlier_detection": [[6, 2, 1, "", "compute"]], "daal4py.multivariate_outlier_detection_result": [[6, 1, 1, "", "weights"]], "daal4py.normalization_minmax": [[6, 2, 1, "", "compute"]], "daal4py.normalization_minmax_result": [[6, 1, 1, "", "normalizedData"]], "daal4py.normalization_zscore": [[6, 2, 1, "", "compute"]], "daal4py.normalization_zscore_result": [[6, 1, 1, "", "means"], [6, 1, 1, "", "normalizedData"], [6, 1, 1, "", "variances"]], "daal4py.optimization_solver_adagrad": [[6, 2, 1, "", "compute"]], "daal4py.optimization_solver_adagrad_result": [[6, 1, 1, "", "minimum"], [6, 1, 1, "", "nIterations"]], "daal4py.optimization_solver_coordinate_descent": [[6, 2, 1, "", "compute"]], "daal4py.optimization_solver_coordinate_descent_result": [[6, 1, 1, "", "minimum"], [6, 1, 1, "", "nIterations"]], "daal4py.optimization_solver_cross_entropy_loss": [[6, 2, 1, "", "compute"], [6, 2, 1, "", "setup"]], "daal4py.optimization_solver_lbfgs": [[6, 2, 1, "", "compute"]], "daal4py.optimization_solver_lbfgs_result": [[6, 1, 1, "", "minimum"], [6, 1, 1, "", "nIterations"]], "daal4py.optimization_solver_logistic_loss": [[6, 2, 1, "", "compute"], [6, 2, 1, "", "setup"]], "daal4py.optimization_solver_mse": [[6, 2, 1, "", "compute"], [6, 2, 1, "", "setup"]], "daal4py.optimization_solver_precomputed": [[6, 2, 1, "", "compute"]], "daal4py.optimization_solver_saga": [[6, 2, 1, "", "compute"]], "daal4py.optimization_solver_saga_result": [[6, 1, 1, "", "gradientsTable"], [6, 1, 1, "", "minimum"], [6, 1, 1, "", "nIterations"]], "daal4py.optimization_solver_sgd": [[6, 2, 1, "", "compute"]], "daal4py.optimization_solver_sgd_result": [[6, 1, 1, "", "minimum"], [6, 1, 1, "", "nIterations"]], "daal4py.pca": [[6, 2, 1, "", "compute"]], "daal4py.pca_result": [[6, 1, 1, "", "dataForTransform"], [6, 1, 1, "", "eigenvalues"], [6, 1, 1, "", "eigenvectors"], [6, 1, 1, "", "means"], [6, 1, 1, "", "variances"]], "daal4py.pca_transform": [[6, 2, 1, "", "compute"]], "daal4py.pca_transform_result": [[6, 1, 1, "", "transformedData"]], "daal4py.pivoted_qr": [[6, 2, 1, "", "compute"]], "daal4py.pivoted_qr_result": [[6, 1, 1, "", "matrixQ"], [6, 1, 1, "", "matrixR"], [6, 1, 1, "", "permutationMatrix"]], "daal4py.qr": [[6, 2, 1, "", "compute"]], "daal4py.qr_result": [[6, 1, 1, "", "matrixQ"], [6, 1, 1, "", "matrixR"]], "daal4py.quantiles": [[6, 2, 1, "", "compute"]], "daal4py.quantiles_result": [[6, 1, 1, "", "quantiles"]], "daal4py.ridge_regression_model": [[6, 1, 1, "", "Beta"], [6, 1, 1, "", "InterceptFlag"], [6, 1, 1, "", "NumberOfBetas"], [6, 1, 1, "", "NumberOfFeatures"], [6, 1, 1, "", "NumberOfResponses"]], "daal4py.ridge_regression_prediction": [[6, 2, 1, "", "compute"]], "daal4py.ridge_regression_prediction_result": [[6, 1, 1, "", "prediction"]], "daal4py.ridge_regression_training": [[6, 2, 1, "", "compute"]], "daal4py.ridge_regression_training_result": [[6, 1, 1, "", "model"]], "daal4py.sorting": [[6, 2, 1, "", "compute"]], "daal4py.sorting_result": [[6, 1, 1, "", "sortedData"]], "daal4py.stump_classification_model": [[6, 1, 1, "", "LeftValue"], [6, 1, 1, "", "NFeatures"], [6, 1, 1, "", "NumberOfFeatures"], [6, 1, 1, "", "RightValue"], [6, 1, 1, "", "SplitFeature"], [6, 1, 1, "", "SplitValue"]], "daal4py.stump_classification_prediction": [[6, 2, 1, "", "compute"]], "daal4py.stump_classification_training": [[6, 2, 1, "", "compute"]], "daal4py.stump_classification_training_result": [[6, 1, 1, "", "model"], [6, 1, 1, "", "variableImportance"]], "daal4py.stump_regression_model": [[6, 1, 1, "", "LeftValue"], [6, 1, 1, "", "NumberOfFeatures"], [6, 1, 1, "", "RightValue"], [6, 1, 1, "", "SplitFeature"], [6, 1, 1, "", "SplitValue"]], "daal4py.stump_regression_prediction": [[6, 2, 1, "", "compute"]], "daal4py.stump_regression_prediction_result": [[6, 1, 1, "", "prediction"]], "daal4py.stump_regression_training": [[6, 2, 1, "", "compute"]], "daal4py.stump_regression_training_result": [[6, 1, 1, "", "model"], [6, 1, 1, "", "variableImportance"]], "daal4py.svd": [[6, 2, 1, "", "compute"]], "daal4py.svd_result": [[6, 1, 1, "", "leftSingularMatrix"], [6, 1, 1, "", "rightSingularMatrix"], [6, 1, 1, "", "singularValues"]], "daal4py.svm_model": [[6, 1, 1, "", "Bias"], [6, 1, 1, "", "ClassificationCoefficients"], [6, 1, 1, "", "NFeatures"], [6, 1, 1, "", "NumberOfFeatures"], [6, 1, 1, "", "SupportIndices"], [6, 1, 1, "", "SupportVectors"]], "daal4py.svm_prediction": [[6, 2, 1, "", "compute"]], "daal4py.svm_training": [[6, 2, 1, "", "compute"]], "daal4py.svm_training_result": [[6, 1, 1, "", "model"]], "daal4py.univariate_outlier_detection": [[6, 2, 1, "", "compute"]], "daal4py.univariate_outlier_detection_result": [[6, 1, 1, "", "weights"]], "sklearnex.basic_statistics": [[21, 0, 1, "", "BasicStatistics"], [21, 0, 1, "", "IncrementalBasicStatistics"]], "sklearnex.basic_statistics.BasicStatistics": [[21, 2, 1, "", "fit"], [21, 2, 1, "", "get_metadata_routing"], [21, 2, 1, "", "get_params"], [21, 1, 1, "", "max_"], [21, 1, 1, "", "mean_"], [21, 1, 1, "", "min_"], [21, 1, 1, "", "second_order_raw_moment_"], [21, 2, 1, "", "set_fit_request"], [21, 2, 1, "", "set_params"], [21, 1, 1, "", "standard_deviation_"], [21, 1, 1, "", "sum_"], [21, 1, 1, "", "sum_squares_"], [21, 1, 1, "", "sum_squares_centered_"], [21, 1, 1, "", "variance_"], [21, 1, 1, "", "variation_"]], "sklearnex.basic_statistics.IncrementalBasicStatistics": [[21, 1, 1, "", "batch_size_"], [21, 2, 1, "", "fit"], [21, 2, 1, "", "get_metadata_routing"], [21, 2, 1, "", "get_params"], [21, 1, 1, "", "max_"], [21, 1, 1, "", "mean_"], [21, 1, 1, "", "min_"], [21, 1, 1, "", "n_features_in_"], [21, 1, 1, "", "n_samples_seen_"], [21, 2, 1, "", "partial_fit"], [21, 1, 1, "", "second_order_raw_moment_"], [21, 2, 1, "", "set_fit_request"], [21, 2, 1, "", "set_params"], [21, 2, 1, "", "set_partial_fit_request"], [21, 1, 1, "", "standard_deviation_"], [21, 1, 1, "", "sum_"], [21, 1, 1, "", "sum_squares_"], [21, 1, 1, "", "sum_squares_centered_"], [21, 1, 1, "", "variance_"], [21, 1, 1, "", "variation_"]], "sklearnex.covariance": [[21, 0, 1, "", "IncrementalEmpiricalCovariance"]], "sklearnex.covariance.IncrementalEmpiricalCovariance": [[21, 1, 1, "", "batch_size_"], [21, 1, 1, "", "covariance_"], [21, 2, 1, "", "error_norm"], [21, 2, 1, "", "fit"], [21, 2, 1, "", "get_metadata_routing"], [21, 2, 1, "", "get_params"], [21, 2, 1, "", "get_precision"], [21, 1, 1, "", "location_"], [21, 2, 1, "", "mahalanobis"], [21, 1, 1, "", "n_features_in_"], [21, 1, 1, "", "n_samples_seen_"], [21, 2, 1, "", "partial_fit"], [21, 2, 1, "", "score"], [21, 2, 1, "", "set_params"], [21, 2, 1, "", "set_partial_fit_request"], [21, 2, 1, "", "set_score_request"]], "sklearnex.linear_model": [[21, 0, 1, "", "IncrementalLinearRegression"], [21, 0, 1, "", "IncrementalRidge"]], "sklearnex.linear_model.IncrementalLinearRegression": [[21, 1, 1, "", "batch_size_"], [21, 1, 1, "", "coef_"], [21, 2, 1, "", "fit"], [21, 2, 1, "", "get_metadata_routing"], [21, 2, 1, "", "get_params"], [21, 1, 1, "", "intercept_"], [21, 1, 1, "", "n_features_in_"], [21, 1, 1, "", "n_samples_seen_"], [21, 2, 1, "", "partial_fit"], [21, 2, 1, "", "predict"], [21, 2, 1, "", "score"], [21, 2, 1, "", "set_params"], [21, 2, 1, "", "set_partial_fit_request"], [21, 2, 1, "", "set_score_request"]], "sklearnex.linear_model.IncrementalRidge": [[21, 1, 1, "", "batch_size_"], [21, 1, 1, "", "coef_"], [21, 2, 1, "", "fit"], [21, 2, 1, "", "get_metadata_routing"], [21, 2, 1, "", "get_params"], [21, 1, 1, "", "intercept_"], [21, 1, 1, "", "n_features_in_"], [21, 1, 1, "", "n_samples_seen_"], [21, 2, 1, "", "partial_fit"], [21, 2, 1, "", "predict"], [21, 2, 1, "", "score"], [21, 2, 1, "", "set_params"], [21, 2, 1, "", "set_partial_fit_request"], [21, 2, 1, "", "set_score_request"]]}, "objtypes": {"0": "py:class", "1": "py:attribute", "2": "py:method", "3": "py:function", "4": "py:property"}, "objnames": {"0": ["py", "class", "Python class"], "1": ["py", "attribute", "Python attribute"], "2": ["py", "method", "Python method"], "3": ["py", "function", "Python function"], "4": ["py", "property", "Python property"]}, "titleterms": {"about": [1, 20], "daal4pi": [1, 6, 9], "introduct": [1, 9, 20], "us": [1, 3, 9, 14, 15, 17], "stream": 1, "mode": [1, 8, 9, 46], "distribut": [1, 6, 8, 9], "document": [1, 19, 20], "support": [2, 3, 6, 7, 9, 12, 13, 23, 25, 44], "algorithm": [2, 6, 9, 12, 21, 22, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41], "cpu": [2, 9, 12], "classif": [2, 6, 16], "regress": [2, 6, 17, 19, 31, 32, 33, 37, 38, 39, 40], "cluster": [2, 6], "dimension": [2, 6], "reduct": [2, 6], "nearest": [2, 6], "neighbor": [2, 6], "other": [2, 19, 20, 22], "task": [2, 16, 17], "gpu": [2, 8, 12, 23], "spmd": [2, 8], "scikit": [2, 12, 14, 15, 21, 22, 23, 25, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45], "learn": [2, 12, 14, 15, 21, 22, 23, 25, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45], "test": 2, "arrai": 3, "api": [3, 6], "dpnp": 3, "dpctl": 3, "compat": [3, 25], "input": [3, 13], "exampl": [3, 19, 20, 23, 42], "usag": 3, "ndarrai": 3, "usm_ndarrai": 3, "strict": 3, "follow": 4, "u": 4, "medium": 4, "how": 5, "contribut": 5, "licens": [5, 18], "pull": 5, "request": 5, "befor": 5, "chang": 5, "code": 5, "style": 5, "refer": 6, "thread": 6, "control": 6, "mpi": 6, "helper": 6, "model": [6, 20], "builder": 6, "gbt": [6, 20], "logreg": 6, "serv": [6, 19, 20], "result": [6, 20], "class": 6, "decis": 6, "forest": [6, 10, 36], "tree": 6, "gradient": 6, "boost": 6, "k": 6, "knn": [6, 30], "brute": 6, "forc": 6, "adaboost": 6, "brownboost": 6, "logitboost": 6, "stump": 6, "weak": 6, "learner": 6, "multinomi": 6, "naiv": 6, "bay": 6, "vector": 6, "machin": [6, 14], "svm": 6, "logist": [6, 19, 33], "linear": [6, 32], "lasso": [6, 31], "ridg": [6, 37, 38, 39, 40], "mean": 6, "initi": 6, "dbscan": [6, 28], "gaussian": 6, "mixtur": 6, "em": 6, "princip": 6, "compon": 6, "analysi": 6, "pca": 6, "transform": 6, "outlier": 6, "detect": [6, 39], "multivari": 6, "univari": 6, "bacon": 6, "optim": [6, 12], "solver": 6, "object": 6, "function": [6, 11, 24], "squar": 6, "error": 6, "mse": 6, "loss": 6, "cross": 6, "entropi": 6, "sum": 6, "iter": 6, "stochast": 6, "descent": 6, "limit": [6, 20], "memori": [6, 25], "broyden": 6, "fletcher": 6, "goldfarb": 6, "shanno": 6, "adapt": 6, "subgradi": 6, "method": 6, "averag": 6, "coordin": 6, "precomput": 6, "recommend": 6, "system": [6, 25], "associ": 6, "rule": 6, "implicit": 6, "altern": 6, "least": 6, "al": 6, "covari": [6, 11], "correl": 6, "distanc": [6, 11], "cosin": 6, "matrix": 6, "varianc": 6, "matric": 6, "data": [6, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42], "pre": 6, "process": [6, 16], "normal": [6, 11, 31, 32], "z": 6, "score": 6, "min": 6, "max": 6, "statist": 6, "moment": 6, "low": 6, "order": 6, "quantil": 6, "algebra": 6, "choleski": 6, "decomposit": 6, "qr": 6, "without": 6, "pivot": 6, "singular": 6, "valu": 6, "svd": 6, "random": [6, 10, 36], "number": 6, "gener": [6, 42], "engin": 6, "mt19937": 6, "mt2203": 6, "mcg59": 6, "mrg32k3a": 6, "philox4x32x10": 6, "bernoulli": 6, "uniform": 6, "sort": 6, "deprec": 7, "notic": 7, "maco": 7, "multi": 8, "tune": 10, "guid": 10, "tsne": [10, 42], "idea": 11, "implement": 11, "estim": 11, "supercomput": 11, "oracl": 11, "approxim": 11, "shrinkag": 11, "small": 11, "shrunkcovari": 11, "preprocess": [11, 27, 28, 29, 34, 35, 37, 38, 39, 40], "standardscal": 11, "maxabsscal": 11, "minmaxscal": 11, "expos": 11, "acceler": [11, 14], "kernel": [11, 14, 15, 16, 17], "sigmoid_kernel": 11, "polynomial_kernel": 11, "rbf_kernel": 11, "extens": [12, 14, 15, 23, 25, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45], "enabl": 12, "type": 13, "kaggl": [14, 15, 16, 17], "workflow": 14, "automl": [14, 15], "binari": 16, "multiclass": 16, "comput": [16, 20], "vision": 16, "natur": 16, "languag": 16, "singl": 17, "regressor": 17, "stack": 17, "from": [19, 20, 25], "librari": [19, 20], "detail": 19, "note": [20, 25], "non": [21, 22], "oneapi": 23, "prerequisit": 23, "devic": 23, "offload": 23, "preview": 24, "quick": 25, "start": 25, "integr": 25, "patch": [25, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42], "global": 25, "unpatch": 25, "instal": 25, "pypi": 25, "anaconda": 25, "cloud": 25, "configur": 25, "build": 25, "sourc": 25, "intel": [25, 35, 38, 39, 40], "r": 25, "ai": 25, "tool": 25, "releas": 25, "requir": 25, "hardwar": 25, "softwar": 25, "sampl": 26, "elasticnet": 27, "airlin": [27, 37], "depdelai": [27, 37], "dataset": [27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41], "download": [27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41], "origin": [27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42], "train": [27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41], "same": [27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41], "spoken": [28, 29], "arab": [28, 29], "digit": [28, 29], "kmean": 29, "mnist": 30, "yearpredictionmsd": [31, 32], "cifar": 33, "nusvr": 34, "medic": 34, "charg": 34, "randomforestclassifi": 35, "rain": 35, "australia": 35, "explor": 35, "comparison": 35, "yolanda": 36, "new": 38, "york": 38, "citi": 38, "bike": 38, "share": 38, "ieee": 39, "ci": 39, "fraud": 39, "higg": 40, "svc": 41, "adult": 41, "plot": 42, "embed": 42, "issu": 44, "tutori": 45, "case": 45, "studi": 45, "verbos": 46}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.todo": 2, "sphinx.ext.viewcode": 1, "nbsphinx": 4, "sphinx.ext.intersphinx": 1, "sphinx": 57}, "alltitles": {"About daal4py": [[1, "about-daal4py"]], "Introduction": [[1, "introduction"], [9, "introduction"], [20, "introduction"]], "Using daal4py": [[1, "using-daal4py"]], "Streaming mode": [[1, "streaming-mode"]], "Distributed mode": [[1, "distributed-mode"]], "Documentation": [[1, "documentation"], [19, "documentation"], [20, "documentation"]], "Supported Algorithms": [[2, "supported-algorithms"], [12, "supported-algorithms"]], "on CPU": [[2, "on-cpu"]], "Classification": [[2, "classification"], [2, "id1"], [2, "id8"], [6, "classification"]], "Regression": [[2, "regression"], [2, "id2"], [2, "id9"], [6, "regression"]], "Clustering": [[2, "clustering"], [2, "id3"], [2, "id10"], [6, "clustering"]], "Dimensionality Reduction": [[2, "dimensionality-reduction"], [2, "id4"], [2, "id11"]], "Nearest Neighbors": [[2, "nearest-neighbors"], [2, "id5"], [2, "id12"]], "Other Tasks": [[2, "other-tasks"], [2, "id6"], [2, "id13"]], "on GPU": [[2, "on-gpu"]], "SPMD Support": [[2, "spmd-support"]], "Scikit-learn Tests": [[2, "scikit-learn-tests"]], "Array API support": [[3, "array-api-support"]], "Support for DPNP and DPCTL": [[3, "support-for-dpnp-and-dpctl"]], "Support for Array API-compatible inputs": [[3, "support-for-array-api-compatible-inputs"]], "Example usage": [[3, "example-usage"]], "DPNP ndarrays": [[3, "dpnp-ndarrays"]], "DPCTL usm_ndarrays": [[3, "dpctl-usm-ndarrays"]], "Use of array-api-strict": [[3, "use-of-array-api-strict"]], "Follow us on Medium": [[4, "follow-us-on-medium"]], "How to Contribute": [[5, "how-to-contribute"]], "Licensing": [[5, "licensing"]], "Pull Requests": [[5, "pull-requests"]], "Before Contributing Changes": [[5, "before-contributing-changes"]], "Code Style": [[5, "code-style"]], "daal4py API Reference": [[6, "daal4py-api-reference"]], "Thread control": [[6, "thread-control"]], "MPI helpers": [[6, "mpi-helpers"]], "Model builders (GBT and LogReg serving)": [[6, "model-builders-gbt-and-logreg-serving"]], "Results class": [[6, "results-class"]], "Decision Forest Classification": [[6, "decision-forest-classification"]], "Decision Tree Classification": [[6, "decision-tree-classification"]], "Gradient Boosted Classification": [[6, "gradient-boosted-classification"]], "k-Nearest Neighbors (kNN)": [[6, "k-nearest-neighbors-knn"]], "Brute-force k-Nearest Neighbors (kNN)": [[6, "brute-force-k-nearest-neighbors-knn"]], "AdaBoost Classification": [[6, "adaboost-classification"]], "BrownBoost Classification": [[6, "brownboost-classification"]], "LogitBoost Classification": [[6, "logitboost-classification"]], "Stump Weak Learner Classification": [[6, "stump-weak-learner-classification"]], "Multinomial Naive Bayes": [[6, "multinomial-naive-bayes"]], "Support Vector Machine (SVM)": [[6, "support-vector-machine-svm"]], "Logistic Regression": [[6, "logistic-regression"]], "Decision Forest Regression": [[6, "decision-forest-regression"]], "Decision Tree Regression": [[6, "decision-tree-regression"]], "Gradient Boosted Regression": [[6, "gradient-boosted-regression"]], "Linear Regression": [[6, "linear-regression"]], "LASSO Regression": [[6, "lasso-regression"]], "Ridge Regression": [[6, "ridge-regression"]], "Stump Regression": [[6, "stump-regression"]], "K-Means Clustering": [[6, "k-means-clustering"]], "K-Means Initialization": [[6, "k-means-initialization"]], "K-Means": [[6, "k-means"]], "DBSCAN": [[6, "dbscan"]], "Gaussian Mixtures": [[6, "gaussian-mixtures"]], "Initialization for the Gaussian Mixture Model": [[6, "initialization-for-the-gaussian-mixture-model"]], "EM algorithm for the Gaussian Mixture Model": [[6, "em-algorithm-for-the-gaussian-mixture-model"]], "Dimensionality reduction": [[6, "dimensionality-reduction"]], "Principal Component Analysis (PCA)": [[6, "principal-component-analysis-pca"]], "Principal Component Analysis (PCA) Transform": [[6, "principal-component-analysis-pca-transform"]], "Outlier detection": [[6, "outlier-detection"]], "Multivariate Outlier Detection": [[6, "multivariate-outlier-detection"]], "Univariate Outlier Detection": [[6, "univariate-outlier-detection"]], "Multivariate Bacon Outlier Detection": [[6, "multivariate-bacon-outlier-detection"]], "Optimization Solvers": [[6, "optimization-solvers"]], "Objective Functions": [[6, "objective-functions"]], "Mean Squared Error Algorithm (MSE)": [[6, "mean-squared-error-algorithm-mse"]], "Logistic Loss": [[6, "logistic-loss"]], "Cross-entropy Loss": [[6, "cross-entropy-loss"]], "Sum of Functions": [[6, "sum-of-functions"]], "Iterative Solvers": [[6, "iterative-solvers"]], "Stochastic Gradient Descent Algorithm": [[6, "stochastic-gradient-descent-algorithm"]], "Limited-Memory Broyden-Fletcher-Goldfarb-Shanno Algorithm": [[6, "limited-memory-broyden-fletcher-goldfarb-shanno-algorithm"]], "Adaptive Subgradient Method": [[6, "adaptive-subgradient-method"]], "Stochastic Average Gradient Descent": [[6, "stochastic-average-gradient-descent"]], "Coordinate Descent": [[6, "coordinate-descent"]], "Precomputed Function": [[6, "precomputed-function"]], "Recommender systems": [[6, "recommender-systems"]], "Association Rules": [[6, "association-rules"]], "Implicit Alternating Least Squares (implicit ALS)": [[6, "implicit-alternating-least-squares-implicit-als"]], "Covariance, correlation, and distances": [[6, "covariance-correlation-and-distances"]], "Cosine Distance Matrix": [[6, "cosine-distance-matrix"]], "Correlation Distance Matrix": [[6, "correlation-distance-matrix"]], "Correlation and Variance-Covariance Matrices": [[6, "correlation-and-variance-covariance-matrices"]], "Data pre-processing": [[6, "data-pre-processing"]], "Normalization": [[6, "normalization"]], "Z-Score": [[6, "z-score"]], "Min-Max": [[6, "min-max"]], "Statistics": [[6, "statistics"]], "Moments of Low Order": [[6, "moments-of-low-order"]], "Quantiles": [[6, "quantiles"]], "Linear algebra": [[6, "linear-algebra"]], "Cholesky Decomposition": [[6, "cholesky-decomposition"]], "QR Decomposition": [[6, "qr-decomposition"]], "QR Decomposition (without pivoting)": [[6, "qr-decomposition-without-pivoting"]], "Pivoted QR Decomposition": [[6, "pivoted-qr-decomposition"]], "Singular Value Decomposition (SVD)": [[6, "singular-value-decomposition-svd"]], "Random number generation": [[6, "random-number-generation"]], "Random Number Engines": [[6, "random-number-engines"]], "mt19937": [[6, "mt19937"]], "mt2203": [[6, "mt2203"]], "mcg59": [[6, "mcg59"]], "mrg32k3a": [[6, "mrg32k3a"]], "philox4x32x10": [[6, "philox4x32x10"]], "Distributions": [[6, "distributions"]], "Bernoulli": [[6, "bernoulli"]], "Normal": [[6, "normal"]], "Uniform": [[6, "uniform"]], "Sorting": [[6, "sorting"]], "Deprecation Notice": [[7, "deprecation-notice"]], "macOS* Support": [[7, "macos-support"]], "SPMD (multi-GPU distributed mode)": [[8, "spmd-multi-gpu-distributed-mode"]], "Distributed mode (daal4py, CPU)": [[9, "distributed-mode-daal4py-cpu"]], "Using distributed mode": [[9, "using-distributed-mode"]], "Supported algorithms": [[9, "supported-algorithms"]], "Tuning Guide": [[10, "tuning-guide"]], "TSNE": [[10, "tsne"]], "Random Forest": [[10, "random-forest"]], "Ideas": [[11, "ideas"]], "Implement Covariance Estimators for Supercomputers": [[11, "implement-covariance-estimators-for-supercomputers"]], "Oracle Approximating Shrinkage Estimator (small)": [[11, "oracle-approximating-shrinkage-estimator-small"]], "ShrunkCovariance Estimator (small)": [[11, "shrunkcovariance-estimator-small"]], "Implement the Preprocessing Estimators for Supercomputers": [[11, "implement-the-preprocessing-estimators-for-supercomputers"]], "StandardScaler Estimator (small)": [[11, "standardscaler-estimator-small"]], "MaxAbsScaler Estimator (small)": [[11, "maxabsscaler-estimator-small"]], "MinMaxScaler Estimator (small)": [[11, "minmaxscaler-estimator-small"]], "Normalizer Estimator (small)": [[11, "normalizer-estimator-small"]], "Expose Accelerated Kernel Distance Functions": [[11, "expose-accelerated-kernel-distance-functions"]], "sigmoid_kernel Function (small)": [[11, "sigmoid-kernel-function-small"]], "polynomial_kernel Function (small)": [[11, "polynomial-kernel-function-small"]], "rbf_kernel Function (small)": [[11, "rbf-kernel-function-small"]], "Extension for Scikit-learn*": [[12, "sklearnex"]], "Optimizations": [[12, "optimizations"]], "Enable CPU Optimizations": [[12, "enable-cpu-optimizations"]], "Enable GPU optimizations": [[12, "enable-gpu-optimizations"]], "Supported input types": [[13, "supported-input-types"]], "Kaggle Kernels": [[14, "kaggle-kernels"]], "Acceleration": [[14, "acceleration"]], "Machine Learning Workflows": [[14, "machine-learning-workflows"]], "Kaggle kernels that use scikit-learn and Extension for Scikit-learn*:": [[14, "kaggle-kernels-that-use-scikit-learn-and-sklearnex"]], "Kaggle kernels that use AutoML with Extension for Scikit-learn*:": [[14, "kaggle-kernels-that-use-automl-with-sklearnex"]], "Kaggle Kernels that use AutoML and Extension for Scikit-learn*": [[15, "kaggle-kernels-that-use-automl-and-sklearnex"]], "Kaggle Kernels for Classification Tasks": [[16, "kaggle-kernels-for-classification-tasks"]], "Binary Classification": [[16, "binary-classification"]], "MultiClass Classification": [[16, "multiclass-classification"]], "Classification Tasks in Computer Vision": [[16, "classification-tasks-in-computer-vision"]], "Classification Tasks in Natural Language Processing": [[16, "classification-tasks-in-natural-language-processing"]], "Kaggle Kernels for Regression Tasks": [[17, "kaggle-kernels-for-regression-tasks"]], "Using a Single Regressor": [[17, "using-a-single-regressor"]], "Stacking Regressors": [[17, "stacking-regressors"]], "License": [[18, "license"]], "Serving Logistic Regression from Other Libraries": [[19, "serving-logistic-regression-from-other-libraries"]], "Example": [[19, "example"], [20, "example"], [23, "example"]], "Details": [[19, "details"]], "Serving GBT models from other libraries": [[20, "serving-gbt-models-from-other-libraries"]], "Notes about computed results": [[20, "notes-about-computed-results"]], "Limitations": [[20, "limitations"]], "Non-Scikit-Learn Algorithms": [[21, "non-scikit-learn-algorithms"]], "Other Non-Scikit-Learn Algorithms": [[22, "other-non-scikit-learn-algorithms"]], "oneAPI and GPU support in Extension for Scikit-learn*": [[23, "oneapi-and-gpu-support-in-sklearnex"]], "Prerequisites": [[23, "prerequisites"]], "Device offloading": [[23, "device-offloading"]], "Preview Functionality": [[24, "preview-functionality"]], "Quick Start": [[25, "quick-start"]], "Compatibility with Scikit-learn*": [[25, "compatibility-with-scikit-learn"]], "Integrate Extension for Scikit-learn*": [[25, "integrate-sklearnex"]], "Patching": [[25, "patching"]], "Global Patching": [[25, "global-patching"]], "Unpatching": [[25, "unpatching"]], "Installation": [[25, "installation"]], "Install from PyPI": [[25, "install-from-pypi"]], "Install from Anaconda* Cloud": [[25, "install-from-anaconda-cloud"]], "Supported Configurations": [[25, "id6"], [25, "id7"]], "Build from Sources": [[25, "build-from-sources"]], "Install Intel*(R) AI Tools": [[25, "install-intel-r-ai-tools"]], "Release Notes": [[25, "release-notes"]], "System Requirements": [[25, "system-requirements"]], "Hardware Requirements": [[25, "hardware-requirements"]], "Software Requirements": [[25, "software-requirements"]], "Memory Requirements": [[25, "memory-requirements"]], "Samples": [[26, "samples"]], "Extension for Scikit-learn ElasticNet for Airlines DepDelay dataset": [[27, "Extension-for-Scikit-learn-ElasticNet-for-Airlines-DepDelay-dataset"]], "Download the data": [[27, "Download-the-data"], [28, "Download-the-data"], [29, "Download-the-data"], [30, "Download-the-data"], [31, "Download-the-data"], [32, "Download-the-data"], [33, "Download-the-data"], [34, "Download-the-data"], [35, "Download-the-data"], [36, "Download-the-data"], [37, "Download-the-data"], [38, "Download-the-data"], [39, "Download-the-data"], [40, "Download-the-data"], [41, "Download-the-data"]], "Preprocessing": [[27, "Preprocessing"], [28, "Preprocessing"], [29, "Preprocessing"], [34, "Preprocessing"], [35, "Preprocessing"], [37, "Preprocessing"], [38, "Preprocessing"], [39, "Preprocessing"], [40, "Preprocessing"]], "Patch original Scikit-learn with Extension for Scikit-learn": [[27, "Patch-original-Scikit-learn-with-Extension-for-Scikit-learn"], [28, "Patch-original-Scikit-learn-with-Extension-for-Scikit-learn"], [29, "Patch-original-Scikit-learn-with-Extension-for-Scikit-learn"], [30, "Patch-original-Scikit-learn-with-Extension-for-Scikit-learn"], [31, "Patch-original-Scikit-learn-with-Extension-for-Scikit-learn"], [32, "Patch-original-Scikit-learn-with-Extension-for-Scikit-learn"], [33, "Patch-original-Scikit-learn-with-Extension-for-Scikit-learn"], [34, "Patch-original-Scikit-learn-with-Extension-for-Scikit-learn"], [36, "Patch-original-Scikit-learn-with-Extension-for-Scikit-learn"], [37, "Patch-original-Scikit-learn-with-Extension-for-Scikit-learn"], [41, "Patch-original-Scikit-learn-with-Extension-for-Scikit-learn"], [42, "Patch-original-Scikit-learn-with-Extension-for-Scikit-learn"]], "Train the same algorithm with original Scikit-learn": [[27, "Train-the-same-algorithm-with-original-Scikit-learn"], [28, "Train-the-same-algorithm-with-original-Scikit-learn"], [29, "Train-the-same-algorithm-with-original-Scikit-learn"], [30, "Train-the-same-algorithm-with-original-Scikit-learn"], [31, "Train-the-same-algorithm-with-original-Scikit-learn"], [32, "Train-the-same-algorithm-with-original-Scikit-learn"], [33, "Train-the-same-algorithm-with-original-Scikit-learn"], [34, "Train-the-same-algorithm-with-original-Scikit-learn"], [35, "Train-the-same-algorithm-with-original-Scikit-learn"], [36, "Train-the-same-algorithm-with-original-Scikit-learn"], [37, "Train-the-same-algorithm-with-original-Scikit-learn"], [38, "Train-the-same-algorithm-with-original-Scikit-learn"], [39, "Train-the-same-algorithm-with-original-Scikit-learn"], [40, "Train-the-same-algorithm-with-original-Scikit-learn"], [41, "Train-the-same-algorithm-with-original-Scikit-learn"]], "Extension for Scikit-learn DBSCAN for spoken arabic digit dataset": [[28, "Extension-for-Scikit-learn-DBSCAN-for-spoken-arabic-digit-dataset"]], "Extension for Scikit-learn Kmeans for spoken arabic digit dataset": [[29, "Extension-for-Scikit-learn-Kmeans-for-spoken-arabic-digit-dataset"]], "Extension for Scikit-learn KNN for MNIST dataset": [[30, "Extension-for-Scikit-learn-KNN-for-MNIST-dataset"]], "Extension for Scikit-learn Lasso Regression for YearPredictionMSD dataset": [[31, "Extension-for-Scikit-learn-Lasso-Regression-for-YearPredictionMSD-dataset"]], "Normalize the data": [[31, "Normalize-the-data"], [32, "Normalize-the-data"]], "Extension for Scikit-learn Linear Regression for YearPredictionMSD dataset": [[32, "Extension-for-Scikit-learn-Linear-Regression-for-YearPredictionMSD-dataset"]], "Extension for Scikit-learn Logistic Regression for Cifar dataset": [[33, "Extension-for-Scikit-learn-Logistic-Regression-for-Cifar-dataset"]], "Extension for Scikit-learn NuSVR for Medical Charges dataset": [[34, "Extension-for-Scikit-learn-NuSVR-for-Medical-Charges-dataset"]], "Intel\u00ae Extension for Scikit-learn RandomForestClassifier for rain in Australia dataset": [[35, "Intel\u00ae-Extension-for-Scikit-learn-RandomForestClassifier-for-rain-in-Australia-dataset"]], "Explore the data": [[35, "Explore-the-data"]], "Patch original Scikit-learn with Intel\u00ae Extension for Scikit-learn": [[35, "Patch-original-Scikit-learn-with-Intel\u00ae-Extension-for-Scikit-learn"], [38, "Patch-original-Scikit-learn-with-Intel\u00ae-Extension-for-Scikit-learn"], [39, "Patch-original-Scikit-learn-with-Intel\u00ae-Extension-for-Scikit-learn"], [40, "Patch-original-Scikit-learn-with-Intel\u00ae-Extension-for-Scikit-learn"]], "Comparison": [[35, "Comparison"]], "Extension for Scikit-learn Random Forest for Yolanda dataset": [[36, "Extension-for-Scikit-learn-Random-Forest-for-Yolanda-dataset"]], "Extension for Scikit-learn Ridge Regression for Airlines DepDelay dataset": [[37, "Extension-for-Scikit-learn-Ridge-Regression-for-Airlines-DepDelay-dataset"]], "Intel\u00ae Extension for Scikit-learn Ridge Regression for New York City Bike Share dataset": [[38, "Intel\u00ae-Extension-for-Scikit-learn-Ridge-Regression-for-New-York-City-Bike-Share-dataset"]], "Intel\u00ae Extension for Scikit-learn Ridge Regression for IEEE-CIS Fraud Detection dataset": [[39, "Intel\u00ae-Extension-for-Scikit-learn-Ridge-Regression-for-IEEE-CIS-Fraud-Detection-dataset"]], "Intel\u00ae Extension for Scikit-learn Ridge Regression for Higgs dataset": [[40, "Intel\u00ae-Extension-for-Scikit-learn-Ridge-Regression-for-Higgs-dataset"]], "Extension for Scikit-learn SVC for Adult dataset": [[41, "Extension-for-Scikit-learn-SVC-for-Adult-dataset"]], "Extension for Scikit-learn TSNE example": [[42, "Extension-for-Scikit-learn-TSNE-example"]], "Generate the data": [[42, "Generate-the-data"]], "Plot embeddings original scikit-learn and Extension": [[42, "Plot-embeddings-original-scikit-learn-and-Extension"]], "Extension for Scikit-learn Support": [[44, "extension-for-scikit-learn-support"]], "Issues": [[44, "issues"]], "Extension for Scikit-learn* Tutorials & Case Studies": [[45, "sklearnex-tutorials-case-studies"]], "Tutorials": [[45, "tutorials"]], "Case Studies": [[45, "case-studies"]], "Verbose Mode": [[46, "verbose-mode"]]}, "indexentries": {"alpha (daal4py.adaboost_model attribute)": [[6, "daal4py.adaboost_model.Alpha"]], "alpha (daal4py.brownboost_model attribute)": [[6, "daal4py.brownboost_model.Alpha"]], "auxtable (daal4py.multinomial_naive_bayes_model attribute)": [[6, "daal4py.multinomial_naive_bayes_model.AuxTable"]], "beta (daal4py.lasso_regression_model attribute)": [[6, "daal4py.lasso_regression_model.Beta"]], "beta (daal4py.linear_regression_model attribute)": [[6, "daal4py.linear_regression_model.Beta"]], "beta (daal4py.logistic_regression_model attribute)": [[6, "daal4py.logistic_regression_model.Beta"]], "beta (daal4py.ridge_regression_model attribute)": [[6, "daal4py.ridge_regression_model.Beta"]], "bias (daal4py.svm_model attribute)": [[6, "daal4py.svm_model.Bias"]], "classificationcoefficients (daal4py.svm_model attribute)": [[6, "daal4py.svm_model.ClassificationCoefficients"]], "gbtdaalmodel (class in daal4py.mb)": [[6, "daal4py.mb.GBTDAALModel"]], "interceptflag (daal4py.lasso_regression_model attribute)": [[6, "daal4py.lasso_regression_model.InterceptFlag"]], "interceptflag (daal4py.linear_regression_model attribute)": [[6, "daal4py.linear_regression_model.InterceptFlag"]], "interceptflag (daal4py.logistic_regression_model attribute)": [[6, "daal4py.logistic_regression_model.InterceptFlag"]], "interceptflag (daal4py.ridge_regression_model attribute)": [[6, "daal4py.ridge_regression_model.InterceptFlag"]], "itemsfactors (daal4py.implicit_als_model attribute)": [[6, "daal4py.implicit_als_model.ItemsFactors"]], "iterations (daal4py.logitboost_model attribute)": [[6, "daal4py.logitboost_model.Iterations"]], "leftvalue (daal4py.stump_classification_model attribute)": [[6, "daal4py.stump_classification_model.LeftValue"]], "leftvalue (daal4py.stump_regression_model attribute)": [[6, "daal4py.stump_regression_model.LeftValue"]], "logp (daal4py.multinomial_naive_bayes_model attribute)": [[6, "daal4py.multinomial_naive_bayes_model.LogP"]], "logtheta (daal4py.multinomial_naive_bayes_model attribute)": [[6, "daal4py.multinomial_naive_bayes_model.LogTheta"]], "logisticdaalmodel (class in daal4py.mb)": [[6, "daal4py.mb.LogisticDAALModel"]], "nfeatures (daal4py.adaboost_model attribute)": [[6, "daal4py.adaboost_model.NFeatures"]], "nfeatures (daal4py.bf_knn_classification_model attribute)": [[6, "daal4py.bf_knn_classification_model.NFeatures"]], "nfeatures (daal4py.brownboost_model attribute)": [[6, "daal4py.brownboost_model.NFeatures"]], "nfeatures (daal4py.decision_forest_classification_model attribute)": [[6, "daal4py.decision_forest_classification_model.NFeatures"]], "nfeatures (daal4py.decision_tree_classification_model attribute)": [[6, "daal4py.decision_tree_classification_model.NFeatures"]], "nfeatures (daal4py.gbt_classification_model attribute)": [[6, "daal4py.gbt_classification_model.NFeatures"]], "nfeatures (daal4py.kdtree_knn_classification_model attribute)": [[6, "daal4py.kdtree_knn_classification_model.NFeatures"]], "nfeatures (daal4py.logistic_regression_model attribute)": [[6, "daal4py.logistic_regression_model.NFeatures"]], "nfeatures (daal4py.logitboost_model attribute)": [[6, "daal4py.logitboost_model.NFeatures"]], "nfeatures (daal4py.multinomial_naive_bayes_model attribute)": [[6, "daal4py.multinomial_naive_bayes_model.NFeatures"]], "nfeatures (daal4py.stump_classification_model attribute)": [[6, "daal4py.stump_classification_model.NFeatures"]], "nfeatures (daal4py.svm_model attribute)": [[6, "daal4py.svm_model.NFeatures"]], "numberofbetas (daal4py.lasso_regression_model attribute)": [[6, "daal4py.lasso_regression_model.NumberOfBetas"]], "numberofbetas (daal4py.linear_regression_model attribute)": [[6, "daal4py.linear_regression_model.NumberOfBetas"]], "numberofbetas (daal4py.logistic_regression_model attribute)": [[6, "daal4py.logistic_regression_model.NumberOfBetas"]], "numberofbetas (daal4py.ridge_regression_model attribute)": [[6, "daal4py.ridge_regression_model.NumberOfBetas"]], "numberofclasses (daal4py.decision_forest_classification_model attribute)": [[6, "daal4py.decision_forest_classification_model.NumberOfClasses"]], "numberoffeatures (daal4py.adaboost_model attribute)": [[6, "daal4py.adaboost_model.NumberOfFeatures"]], "numberoffeatures (daal4py.bf_knn_classification_model attribute)": [[6, "daal4py.bf_knn_classification_model.NumberOfFeatures"]], "numberoffeatures (daal4py.brownboost_model attribute)": [[6, "daal4py.brownboost_model.NumberOfFeatures"]], "numberoffeatures (daal4py.decision_forest_classification_model attribute)": [[6, "daal4py.decision_forest_classification_model.NumberOfFeatures"]], "numberoffeatures (daal4py.decision_forest_regression_model attribute)": [[6, "daal4py.decision_forest_regression_model.NumberOfFeatures"]], "numberoffeatures (daal4py.decision_tree_classification_model attribute)": [[6, "daal4py.decision_tree_classification_model.NumberOfFeatures"]], "numberoffeatures (daal4py.decision_tree_regression_model attribute)": [[6, "daal4py.decision_tree_regression_model.NumberOfFeatures"]], "numberoffeatures (daal4py.gbt_classification_model attribute)": [[6, "daal4py.gbt_classification_model.NumberOfFeatures"]], "numberoffeatures (daal4py.gbt_regression_model attribute)": [[6, "daal4py.gbt_regression_model.NumberOfFeatures"]], "numberoffeatures (daal4py.kdtree_knn_classification_model attribute)": [[6, "daal4py.kdtree_knn_classification_model.NumberOfFeatures"]], "numberoffeatures (daal4py.lasso_regression_model attribute)": [[6, "daal4py.lasso_regression_model.NumberOfFeatures"]], "numberoffeatures (daal4py.linear_regression_model attribute)": [[6, "daal4py.linear_regression_model.NumberOfFeatures"]], "numberoffeatures (daal4py.logistic_regression_model attribute)": [[6, "daal4py.logistic_regression_model.NumberOfFeatures"]], "numberoffeatures (daal4py.logitboost_model attribute)": [[6, "daal4py.logitboost_model.NumberOfFeatures"]], "numberoffeatures (daal4py.multinomial_naive_bayes_model attribute)": [[6, "daal4py.multinomial_naive_bayes_model.NumberOfFeatures"]], "numberoffeatures (daal4py.ridge_regression_model attribute)": [[6, "daal4py.ridge_regression_model.NumberOfFeatures"]], "numberoffeatures (daal4py.stump_classification_model attribute)": [[6, "daal4py.stump_classification_model.NumberOfFeatures"]], "numberoffeatures (daal4py.stump_regression_model attribute)": [[6, "daal4py.stump_regression_model.NumberOfFeatures"]], "numberoffeatures (daal4py.svm_model attribute)": [[6, "daal4py.svm_model.NumberOfFeatures"]], "numberofresponses (daal4py.lasso_regression_model attribute)": [[6, "daal4py.lasso_regression_model.NumberOfResponses"]], "numberofresponses (daal4py.linear_regression_model attribute)": [[6, "daal4py.linear_regression_model.NumberOfResponses"]], "numberofresponses (daal4py.ridge_regression_model attribute)": [[6, "daal4py.ridge_regression_model.NumberOfResponses"]], "numberoftrees (daal4py.decision_forest_classification_model attribute)": [[6, "daal4py.decision_forest_classification_model.NumberOfTrees"]], "numberoftrees (daal4py.decision_forest_regression_model attribute)": [[6, "daal4py.decision_forest_regression_model.NumberOfTrees"]], "numberoftrees (daal4py.gbt_classification_model attribute)": [[6, "daal4py.gbt_classification_model.NumberOfTrees"]], "numberoftrees (daal4py.gbt_regression_model attribute)": [[6, "daal4py.gbt_regression_model.NumberOfTrees"]], "numberofweaklearners (daal4py.adaboost_model attribute)": [[6, "daal4py.adaboost_model.NumberOfWeakLearners"]], "numberofweaklearners (daal4py.brownboost_model attribute)": [[6, "daal4py.brownboost_model.NumberOfWeakLearners"]], "numberofweaklearners (daal4py.logitboost_model attribute)": [[6, "daal4py.logitboost_model.NumberOfWeakLearners"]], "predictionbias (daal4py.gbt_classification_model attribute)": [[6, "daal4py.gbt_classification_model.PredictionBias"]], "predictionbias (daal4py.gbt_regression_model attribute)": [[6, "daal4py.gbt_regression_model.PredictionBias"]], "rightvalue (daal4py.stump_classification_model attribute)": [[6, "daal4py.stump_classification_model.RightValue"]], "rightvalue (daal4py.stump_regression_model attribute)": [[6, "daal4py.stump_regression_model.RightValue"]], "splitfeature (daal4py.stump_classification_model attribute)": [[6, "daal4py.stump_classification_model.SplitFeature"]], "splitfeature (daal4py.stump_regression_model attribute)": [[6, "daal4py.stump_regression_model.SplitFeature"]], "splitvalue (daal4py.stump_classification_model attribute)": [[6, "daal4py.stump_classification_model.SplitValue"]], "splitvalue (daal4py.stump_regression_model attribute)": [[6, "daal4py.stump_regression_model.SplitValue"]], "supportindices (daal4py.svm_model attribute)": [[6, "daal4py.svm_model.SupportIndices"]], "supportvectors (daal4py.svm_model attribute)": [[6, "daal4py.svm_model.SupportVectors"]], "usersfactors (daal4py.implicit_als_model attribute)": [[6, "daal4py.implicit_als_model.UsersFactors"]], "weaklearnermodel() (daal4py.adaboost_model method)": [[6, "daal4py.adaboost_model.WeakLearnerModel"]], "weaklearnermodel() (daal4py.brownboost_model method)": [[6, "daal4py.brownboost_model.WeakLearnerModel"]], "weaklearnermodel() (daal4py.logitboost_model method)": [[6, "daal4py.logitboost_model.WeakLearnerModel"]], "adaboost_model (class in daal4py)": [[6, "daal4py.adaboost_model"]], "adaboost_prediction (class in daal4py)": [[6, "daal4py.adaboost_prediction"]], "adaboost_training (class in daal4py)": [[6, "daal4py.adaboost_training"]], "adaboost_training_result (class in daal4py)": [[6, "daal4py.adaboost_training_result"]], "antecedentitemsets (daal4py.association_rules_result attribute)": [[6, "daal4py.association_rules_result.antecedentItemsets"]], "assignments (daal4py.dbscan_result attribute)": [[6, "daal4py.dbscan_result.assignments"]], "assignments (daal4py.kmeans_result attribute)": [[6, "daal4py.kmeans_result.assignments"]], "association_rules (class in daal4py)": [[6, "daal4py.association_rules"]], "association_rules_result (class in daal4py)": [[6, "daal4py.association_rules_result"]], "bacon_outlier_detection (class in daal4py)": [[6, "daal4py.bacon_outlier_detection"]], "bacon_outlier_detection_result (class in daal4py)": [[6, "daal4py.bacon_outlier_detection_result"]], "bf_knn_classification_model (class in daal4py)": [[6, "daal4py.bf_knn_classification_model"]], "bf_knn_classification_prediction (class in daal4py)": [[6, "daal4py.bf_knn_classification_prediction"]], "bf_knn_classification_training (class in daal4py)": [[6, "daal4py.bf_knn_classification_training"]], "bf_knn_classification_training_result (class in daal4py)": [[6, "daal4py.bf_knn_classification_training_result"]], "brownboost_model (class in daal4py)": [[6, "daal4py.brownboost_model"]], "brownboost_prediction (class in daal4py)": [[6, "daal4py.brownboost_prediction"]], "brownboost_training (class in daal4py)": [[6, "daal4py.brownboost_training"]], "brownboost_training_result (class in daal4py)": [[6, "daal4py.brownboost_training_result"]], "centroids (daal4py.kmeans_init_result attribute)": [[6, "daal4py.kmeans_init_result.centroids"]], "centroids (daal4py.kmeans_result attribute)": [[6, "daal4py.kmeans_result.centroids"]], "cholesky (class in daal4py)": [[6, "daal4py.cholesky"]], "choleskyfactor (daal4py.cholesky_result attribute)": [[6, "daal4py.cholesky_result.choleskyFactor"]], "cholesky_result (class in daal4py)": [[6, "daal4py.cholesky_result"]], "classifier_prediction_result (class in daal4py)": [[6, "daal4py.classifier_prediction_result"]], "coef_ (daal4py.mb.logisticdaalmodel attribute)": [[6, "daal4py.mb.LogisticDAALModel.coef_"]], "compute() (daal4py.adaboost_prediction method)": [[6, "daal4py.adaboost_prediction.compute"]], "compute() (daal4py.adaboost_training method)": [[6, "daal4py.adaboost_training.compute"]], "compute() (daal4py.association_rules method)": [[6, "daal4py.association_rules.compute"]], "compute() (daal4py.bacon_outlier_detection method)": [[6, "daal4py.bacon_outlier_detection.compute"]], "compute() (daal4py.bf_knn_classification_prediction method)": [[6, "daal4py.bf_knn_classification_prediction.compute"]], "compute() (daal4py.bf_knn_classification_training method)": [[6, "daal4py.bf_knn_classification_training.compute"]], "compute() (daal4py.brownboost_prediction method)": [[6, "daal4py.brownboost_prediction.compute"]], "compute() (daal4py.brownboost_training method)": [[6, "daal4py.brownboost_training.compute"]], "compute() (daal4py.cholesky method)": [[6, "daal4py.cholesky.compute"]], "compute() (daal4py.correlation_distance method)": [[6, "daal4py.correlation_distance.compute"]], "compute() (daal4py.cosine_distance method)": [[6, "daal4py.cosine_distance.compute"]], "compute() (daal4py.covariance method)": [[6, "daal4py.covariance.compute"]], "compute() (daal4py.dbscan method)": [[6, "daal4py.dbscan.compute"]], "compute() (daal4py.decision_forest_classification_prediction method)": [[6, "daal4py.decision_forest_classification_prediction.compute"]], "compute() (daal4py.decision_forest_classification_training method)": [[6, "daal4py.decision_forest_classification_training.compute"]], "compute() (daal4py.decision_forest_regression_prediction method)": [[6, "daal4py.decision_forest_regression_prediction.compute"]], "compute() (daal4py.decision_forest_regression_training method)": [[6, "daal4py.decision_forest_regression_training.compute"]], "compute() (daal4py.decision_tree_classification_prediction method)": [[6, "daal4py.decision_tree_classification_prediction.compute"]], "compute() (daal4py.decision_tree_classification_training method)": [[6, "daal4py.decision_tree_classification_training.compute"]], "compute() (daal4py.decision_tree_regression_prediction method)": [[6, "daal4py.decision_tree_regression_prediction.compute"]], "compute() (daal4py.decision_tree_regression_training method)": [[6, "daal4py.decision_tree_regression_training.compute"]], "compute() (daal4py.distributions_bernoulli method)": [[6, "daal4py.distributions_bernoulli.compute"]], "compute() (daal4py.distributions_normal method)": [[6, "daal4py.distributions_normal.compute"]], "compute() (daal4py.distributions_uniform method)": [[6, "daal4py.distributions_uniform.compute"]], "compute() (daal4py.em_gmm method)": [[6, "daal4py.em_gmm.compute"]], "compute() (daal4py.em_gmm_init method)": [[6, "daal4py.em_gmm_init.compute"]], "compute() (daal4py.engines_mcg59 method)": [[6, "daal4py.engines_mcg59.compute"]], "compute() (daal4py.engines_mrg32k3a method)": [[6, "daal4py.engines_mrg32k3a.compute"]], "compute() (daal4py.engines_mt19937 method)": [[6, "daal4py.engines_mt19937.compute"]], "compute() (daal4py.engines_mt2203 method)": [[6, "daal4py.engines_mt2203.compute"]], "compute() (daal4py.engines_philox4x32x10 method)": [[6, "daal4py.engines_philox4x32x10.compute"]], "compute() (daal4py.gbt_classification_prediction method)": [[6, "daal4py.gbt_classification_prediction.compute"]], "compute() (daal4py.gbt_classification_training method)": [[6, "daal4py.gbt_classification_training.compute"]], "compute() (daal4py.gbt_regression_prediction method)": [[6, "daal4py.gbt_regression_prediction.compute"]], "compute() (daal4py.gbt_regression_training method)": [[6, "daal4py.gbt_regression_training.compute"]], "compute() (daal4py.implicit_als_prediction_ratings method)": [[6, "daal4py.implicit_als_prediction_ratings.compute"]], "compute() (daal4py.implicit_als_training method)": [[6, "daal4py.implicit_als_training.compute"]], "compute() (daal4py.kdtree_knn_classification_prediction method)": [[6, "daal4py.kdtree_knn_classification_prediction.compute"]], "compute() (daal4py.kdtree_knn_classification_training method)": [[6, "daal4py.kdtree_knn_classification_training.compute"]], "compute() (daal4py.kmeans method)": [[6, "daal4py.kmeans.compute"]], "compute() (daal4py.kmeans_init method)": [[6, "daal4py.kmeans_init.compute"]], "compute() (daal4py.lasso_regression_prediction method)": [[6, "daal4py.lasso_regression_prediction.compute"]], "compute() (daal4py.lasso_regression_training method)": [[6, "daal4py.lasso_regression_training.compute"]], "compute() (daal4py.linear_regression_prediction method)": [[6, "daal4py.linear_regression_prediction.compute"]], "compute() (daal4py.linear_regression_training method)": [[6, "daal4py.linear_regression_training.compute"]], "compute() (daal4py.logistic_regression_prediction method)": [[6, "daal4py.logistic_regression_prediction.compute"]], "compute() (daal4py.logistic_regression_training method)": [[6, "daal4py.logistic_regression_training.compute"]], "compute() (daal4py.logitboost_prediction method)": [[6, "daal4py.logitboost_prediction.compute"]], "compute() (daal4py.logitboost_training method)": [[6, "daal4py.logitboost_training.compute"]], "compute() (daal4py.low_order_moments method)": [[6, "daal4py.low_order_moments.compute"]], "compute() (daal4py.multinomial_naive_bayes_prediction method)": [[6, "daal4py.multinomial_naive_bayes_prediction.compute"]], "compute() (daal4py.multinomial_naive_bayes_training method)": [[6, "daal4py.multinomial_naive_bayes_training.compute"]], "compute() (daal4py.multivariate_outlier_detection method)": [[6, "daal4py.multivariate_outlier_detection.compute"]], "compute() (daal4py.normalization_minmax method)": [[6, "daal4py.normalization_minmax.compute"]], "compute() (daal4py.normalization_zscore method)": [[6, "daal4py.normalization_zscore.compute"]], "compute() (daal4py.optimization_solver_adagrad method)": [[6, "daal4py.optimization_solver_adagrad.compute"]], "compute() (daal4py.optimization_solver_coordinate_descent method)": [[6, "daal4py.optimization_solver_coordinate_descent.compute"]], "compute() (daal4py.optimization_solver_cross_entropy_loss method)": [[6, "daal4py.optimization_solver_cross_entropy_loss.compute"]], "compute() (daal4py.optimization_solver_lbfgs method)": [[6, "daal4py.optimization_solver_lbfgs.compute"]], "compute() (daal4py.optimization_solver_logistic_loss method)": [[6, "daal4py.optimization_solver_logistic_loss.compute"]], "compute() (daal4py.optimization_solver_mse method)": [[6, "daal4py.optimization_solver_mse.compute"]], "compute() (daal4py.optimization_solver_precomputed method)": [[6, "daal4py.optimization_solver_precomputed.compute"]], "compute() (daal4py.optimization_solver_saga method)": [[6, "daal4py.optimization_solver_saga.compute"]], "compute() (daal4py.optimization_solver_sgd method)": [[6, "daal4py.optimization_solver_sgd.compute"]], "compute() (daal4py.pca method)": [[6, "daal4py.pca.compute"]], "compute() (daal4py.pca_transform method)": [[6, "daal4py.pca_transform.compute"]], "compute() (daal4py.pivoted_qr method)": [[6, "daal4py.pivoted_qr.compute"]], "compute() (daal4py.qr method)": [[6, "daal4py.qr.compute"]], "compute() (daal4py.quantiles method)": [[6, "daal4py.quantiles.compute"]], "compute() (daal4py.ridge_regression_prediction method)": [[6, "daal4py.ridge_regression_prediction.compute"]], "compute() (daal4py.ridge_regression_training method)": [[6, "daal4py.ridge_regression_training.compute"]], "compute() (daal4py.sorting method)": [[6, "daal4py.sorting.compute"]], "compute() (daal4py.stump_classification_prediction method)": [[6, "daal4py.stump_classification_prediction.compute"]], "compute() (daal4py.stump_classification_training method)": [[6, "daal4py.stump_classification_training.compute"]], "compute() (daal4py.stump_regression_prediction method)": [[6, "daal4py.stump_regression_prediction.compute"]], "compute() (daal4py.stump_regression_training method)": [[6, "daal4py.stump_regression_training.compute"]], "compute() (daal4py.svd method)": [[6, "daal4py.svd.compute"]], "compute() (daal4py.svm_prediction method)": [[6, "daal4py.svm_prediction.compute"]], "compute() (daal4py.svm_training method)": [[6, "daal4py.svm_training.compute"]], "compute() (daal4py.univariate_outlier_detection method)": [[6, "daal4py.univariate_outlier_detection.compute"]], "confidence (daal4py.association_rules_result attribute)": [[6, "daal4py.association_rules_result.confidence"]], "consequentitemsets (daal4py.association_rules_result attribute)": [[6, "daal4py.association_rules_result.consequentItemsets"]], "convert_model() (in module daal4py.mb)": [[6, "daal4py.mb.convert_model"]], "coreindices (daal4py.dbscan_result attribute)": [[6, "daal4py.dbscan_result.coreIndices"]], "coreobservations (daal4py.dbscan_result attribute)": [[6, "daal4py.dbscan_result.coreObservations"]], "correlation (daal4py.covariance_result attribute)": [[6, "daal4py.covariance_result.correlation"]], "correlationdistance (daal4py.correlation_distance_result attribute)": [[6, "daal4py.correlation_distance_result.correlationDistance"]], "correlation_distance (class in daal4py)": [[6, "daal4py.correlation_distance"]], "correlation_distance_result (class in daal4py)": [[6, "daal4py.correlation_distance_result"]], "cosinedistance (daal4py.cosine_distance_result attribute)": [[6, "daal4py.cosine_distance_result.cosineDistance"]], "cosine_distance (class in daal4py)": [[6, "daal4py.cosine_distance"]], "cosine_distance_result (class in daal4py)": [[6, "daal4py.cosine_distance_result"]], "covariance (class in daal4py)": [[6, "daal4py.covariance"]], "covariance (daal4py.covariance_result attribute)": [[6, "daal4py.covariance_result.covariance"]], "covariance_result (class in daal4py)": [[6, "daal4py.covariance_result"]], "covariances (daal4py.em_gmm_init_result attribute)": [[6, "daal4py.em_gmm_init_result.covariances"]], "covariances (daal4py.em_gmm_result attribute)": [[6, "daal4py.em_gmm_result.covariances"]], "daalfini() (in module daal4py)": [[6, "daal4py.daalfini"]], "daalinit() (in module daal4py)": [[6, "daal4py.daalinit"]], "datafortransform (daal4py.pca_result attribute)": [[6, "daal4py.pca_result.dataForTransform"]], "dbscan (class in daal4py)": [[6, "daal4py.dbscan"]], "dbscan_result (class in daal4py)": [[6, "daal4py.dbscan_result"]], "decision_forest_classification_model (class in daal4py)": [[6, "daal4py.decision_forest_classification_model"]], "decision_forest_classification_prediction (class in daal4py)": [[6, "daal4py.decision_forest_classification_prediction"]], "decision_forest_classification_training (class in daal4py)": [[6, "daal4py.decision_forest_classification_training"]], "decision_forest_classification_training_result (class in daal4py)": [[6, "daal4py.decision_forest_classification_training_result"]], "decision_forest_regression_model (class in daal4py)": [[6, "daal4py.decision_forest_regression_model"]], "decision_forest_regression_prediction (class in daal4py)": [[6, "daal4py.decision_forest_regression_prediction"]], "decision_forest_regression_prediction_result (class in daal4py)": [[6, "daal4py.decision_forest_regression_prediction_result"]], "decision_forest_regression_training (class in daal4py)": [[6, "daal4py.decision_forest_regression_training"]], "decision_forest_regression_training_result (class in daal4py)": [[6, "daal4py.decision_forest_regression_training_result"]], "decision_tree_classification_model (class in daal4py)": [[6, "daal4py.decision_tree_classification_model"]], "decision_tree_classification_prediction (class in daal4py)": [[6, "daal4py.decision_tree_classification_prediction"]], "decision_tree_classification_training (class in daal4py)": [[6, "daal4py.decision_tree_classification_training"]], "decision_tree_classification_training_result (class in daal4py)": [[6, "daal4py.decision_tree_classification_training_result"]], "decision_tree_regression_model (class in daal4py)": [[6, "daal4py.decision_tree_regression_model"]], "decision_tree_regression_prediction (class in daal4py)": [[6, "daal4py.decision_tree_regression_prediction"]], "decision_tree_regression_prediction_result (class in daal4py)": [[6, "daal4py.decision_tree_regression_prediction_result"]], "decision_tree_regression_training (class in daal4py)": [[6, "daal4py.decision_tree_regression_training"]], "decision_tree_regression_training_result (class in daal4py)": [[6, "daal4py.decision_tree_regression_training_result"]], "distributions_bernoulli (class in daal4py)": [[6, "daal4py.distributions_bernoulli"]], "distributions_bernoulli_result (in module daal4py)": [[6, "daal4py.distributions_bernoulli_result"]], "distributions_normal (class in daal4py)": [[6, "daal4py.distributions_normal"]], "distributions_normal_result (in module daal4py)": [[6, "daal4py.distributions_normal_result"]], "distributions_uniform (class in daal4py)": [[6, "daal4py.distributions_uniform"]], "distributions_uniform_result (in module daal4py)": [[6, "daal4py.distributions_uniform_result"]], "dtype_ (daal4py.mb.logisticdaalmodel attribute)": [[6, "daal4py.mb.LogisticDAALModel.dtype_"]], "eigenvalues (daal4py.pca_result attribute)": [[6, "daal4py.pca_result.eigenvalues"]], "eigenvectors (daal4py.pca_result attribute)": [[6, "daal4py.pca_result.eigenvectors"]], "em_gmm (class in daal4py)": [[6, "daal4py.em_gmm"]], "em_gmm_init (class in daal4py)": [[6, "daal4py.em_gmm_init"]], "em_gmm_init_result (class in daal4py)": [[6, "daal4py.em_gmm_init_result"]], "em_gmm_result (class in daal4py)": [[6, "daal4py.em_gmm_result"]], "enable_thread_pinning() (in module daal4py)": [[6, "daal4py.enable_thread_pinning"]], "engines_mcg59 (class in daal4py)": [[6, "daal4py.engines_mcg59"]], "engines_mcg59_result (in module daal4py)": [[6, "daal4py.engines_mcg59_result"]], "engines_mrg32k3a (class in daal4py)": [[6, "daal4py.engines_mrg32k3a"]], "engines_mrg32k3a_result (in module daal4py)": [[6, "daal4py.engines_mrg32k3a_result"]], "engines_mt19937 (class in daal4py)": [[6, "daal4py.engines_mt19937"]], "engines_mt19937_result (in module daal4py)": [[6, "daal4py.engines_mt19937_result"]], "engines_mt2203 (class in daal4py)": [[6, "daal4py.engines_mt2203"]], "engines_mt2203_result (in module daal4py)": [[6, "daal4py.engines_mt2203_result"]], "engines_philox4x32x10 (class in daal4py)": [[6, "daal4py.engines_philox4x32x10"]], "engines_philox4x32x10_result (in module daal4py)": [[6, "daal4py.engines_philox4x32x10_result"]], "engines_result (class in daal4py)": [[6, "daal4py.engines_result"]], "gbt_classification_model (class in daal4py)": [[6, "daal4py.gbt_classification_model"]], "gbt_classification_prediction (class in daal4py)": [[6, "daal4py.gbt_classification_prediction"]], "gbt_classification_training (class in daal4py)": [[6, "daal4py.gbt_classification_training"]], "gbt_classification_training_result (class in daal4py)": [[6, "daal4py.gbt_classification_training_result"]], "gbt_regression_model (class in daal4py)": [[6, "daal4py.gbt_regression_model"]], "gbt_regression_prediction (class in daal4py)": [[6, "daal4py.gbt_regression_prediction"]], "gbt_regression_prediction_result (class in daal4py)": [[6, "daal4py.gbt_regression_prediction_result"]], "gbt_regression_training (class in daal4py)": [[6, "daal4py.gbt_regression_training"]], "gbt_regression_training_result (class in daal4py)": [[6, "daal4py.gbt_regression_training_result"]], "goalfunction (daal4py.em_gmm_result attribute)": [[6, "daal4py.em_gmm_result.goalFunction"]], "gradientstable (daal4py.optimization_solver_saga_result attribute)": [[6, "daal4py.optimization_solver_saga_result.gradientsTable"]], "grammatrixid (daal4py.lasso_regression_training_result attribute)": [[6, "daal4py.lasso_regression_training_result.gramMatrixId"]], "implicit_als_model (class in daal4py)": [[6, "daal4py.implicit_als_model"]], "implicit_als_prediction_ratings (class in daal4py)": [[6, "daal4py.implicit_als_prediction_ratings"]], "implicit_als_prediction_ratings_result (class in daal4py)": [[6, "daal4py.implicit_als_prediction_ratings_result"]], "implicit_als_training (class in daal4py)": [[6, "daal4py.implicit_als_training"]], "implicit_als_training_result (class in daal4py)": [[6, "daal4py.implicit_als_training_result"]], "intercept_ (daal4py.mb.logisticdaalmodel attribute)": [[6, "daal4py.mb.LogisticDAALModel.intercept_"]], "is_classifier_ (daal4py.mb.gbtdaalmodel property)": [[6, "daal4py.mb.GBTDAALModel.is_classifier_"]], "is_regressor_ (daal4py.mb.gbtdaalmodel property)": [[6, "daal4py.mb.GBTDAALModel.is_regressor_"]], "kdtree_knn_classification_model (class in daal4py)": [[6, "daal4py.kdtree_knn_classification_model"]], "kdtree_knn_classification_prediction (class in daal4py)": [[6, "daal4py.kdtree_knn_classification_prediction"]], "kdtree_knn_classification_training (class in daal4py)": [[6, "daal4py.kdtree_knn_classification_training"]], "kdtree_knn_classification_training_result (class in daal4py)": [[6, "daal4py.kdtree_knn_classification_training_result"]], "kmeans (class in daal4py)": [[6, "daal4py.kmeans"]], "kmeans_init (class in daal4py)": [[6, "daal4py.kmeans_init"]], "kmeans_init_result (class in daal4py)": [[6, "daal4py.kmeans_init_result"]], "kmeans_result (class in daal4py)": [[6, "daal4py.kmeans_result"]], "largeitemsets (daal4py.association_rules_result attribute)": [[6, "daal4py.association_rules_result.largeItemsets"]], "largeitemsetssupport (daal4py.association_rules_result attribute)": [[6, "daal4py.association_rules_result.largeItemsetsSupport"]], "lasso_regression_model (class in daal4py)": [[6, "daal4py.lasso_regression_model"]], "lasso_regression_prediction (class in daal4py)": [[6, "daal4py.lasso_regression_prediction"]], "lasso_regression_prediction_result (class in daal4py)": [[6, "daal4py.lasso_regression_prediction_result"]], "lasso_regression_training (class in daal4py)": [[6, "daal4py.lasso_regression_training"]], "lasso_regression_training_result (class in daal4py)": [[6, "daal4py.lasso_regression_training_result"]], "leftsingularmatrix (daal4py.svd_result attribute)": [[6, "daal4py.svd_result.leftSingularMatrix"]], "linear_regression_model (class in daal4py)": [[6, "daal4py.linear_regression_model"]], "linear_regression_prediction (class in daal4py)": [[6, "daal4py.linear_regression_prediction"]], "linear_regression_prediction_result (class in daal4py)": [[6, "daal4py.linear_regression_prediction_result"]], "linear_regression_training (class in daal4py)": [[6, "daal4py.linear_regression_training"]], "linear_regression_training_result (class in daal4py)": [[6, "daal4py.linear_regression_training_result"]], "logprobabilities (daal4py.classifier_prediction_result attribute)": [[6, "daal4py.classifier_prediction_result.logProbabilities"]], "logistic_regression_model (class in daal4py)": [[6, "daal4py.logistic_regression_model"]], "logistic_regression_prediction (class in daal4py)": [[6, "daal4py.logistic_regression_prediction"]], "logistic_regression_training (class in daal4py)": [[6, "daal4py.logistic_regression_training"]], "logistic_regression_training_result (class in daal4py)": [[6, "daal4py.logistic_regression_training_result"]], "logitboost_model (class in daal4py)": [[6, "daal4py.logitboost_model"]], "logitboost_prediction (class in daal4py)": [[6, "daal4py.logitboost_prediction"]], "logitboost_training (class in daal4py)": [[6, "daal4py.logitboost_training"]], "logitboost_training_result (class in daal4py)": [[6, "daal4py.logitboost_training_result"]], "low_order_moments (class in daal4py)": [[6, "daal4py.low_order_moments"]], "low_order_moments_result (class in daal4py)": [[6, "daal4py.low_order_moments_result"]], "matrixq (daal4py.pivoted_qr_result attribute)": [[6, "daal4py.pivoted_qr_result.matrixQ"]], "matrixq (daal4py.qr_result attribute)": [[6, "daal4py.qr_result.matrixQ"]], "matrixr (daal4py.pivoted_qr_result attribute)": [[6, "daal4py.pivoted_qr_result.matrixR"]], "matrixr (daal4py.qr_result attribute)": [[6, "daal4py.qr_result.matrixR"]], "maximum (daal4py.low_order_moments_result attribute)": [[6, "daal4py.low_order_moments_result.maximum"]], "mean (daal4py.covariance_result attribute)": [[6, "daal4py.covariance_result.mean"]], "mean (daal4py.low_order_moments_result attribute)": [[6, "daal4py.low_order_moments_result.mean"]], "means (daal4py.em_gmm_init_result attribute)": [[6, "daal4py.em_gmm_init_result.means"]], "means (daal4py.em_gmm_result attribute)": [[6, "daal4py.em_gmm_result.means"]], "means (daal4py.normalization_zscore_result attribute)": [[6, "daal4py.normalization_zscore_result.means"]], "means (daal4py.pca_result attribute)": [[6, "daal4py.pca_result.means"]], "minimum (daal4py.low_order_moments_result attribute)": [[6, "daal4py.low_order_moments_result.minimum"]], "minimum (daal4py.optimization_solver_adagrad_result attribute)": [[6, "daal4py.optimization_solver_adagrad_result.minimum"]], "minimum (daal4py.optimization_solver_coordinate_descent_result attribute)": [[6, "daal4py.optimization_solver_coordinate_descent_result.minimum"]], "minimum (daal4py.optimization_solver_lbfgs_result attribute)": [[6, "daal4py.optimization_solver_lbfgs_result.minimum"]], "minimum (daal4py.optimization_solver_saga_result attribute)": [[6, "daal4py.optimization_solver_saga_result.minimum"]], "minimum (daal4py.optimization_solver_sgd_result attribute)": [[6, "daal4py.optimization_solver_sgd_result.minimum"]], "model (daal4py.adaboost_training_result attribute)": [[6, "daal4py.adaboost_training_result.model"]], "model (daal4py.bf_knn_classification_training_result attribute)": [[6, "daal4py.bf_knn_classification_training_result.model"]], "model (daal4py.brownboost_training_result attribute)": [[6, "daal4py.brownboost_training_result.model"]], "model (daal4py.decision_forest_classification_training_result attribute)": [[6, "daal4py.decision_forest_classification_training_result.model"]], "model (daal4py.decision_forest_regression_training_result attribute)": [[6, "daal4py.decision_forest_regression_training_result.model"]], "model (daal4py.decision_tree_classification_training_result attribute)": [[6, "daal4py.decision_tree_classification_training_result.model"]], "model (daal4py.decision_tree_regression_training_result attribute)": [[6, "daal4py.decision_tree_regression_training_result.model"]], "model (daal4py.gbt_classification_training_result attribute)": [[6, "daal4py.gbt_classification_training_result.model"]], "model (daal4py.gbt_regression_training_result attribute)": [[6, "daal4py.gbt_regression_training_result.model"]], "model (daal4py.implicit_als_training_result attribute)": [[6, "daal4py.implicit_als_training_result.model"]], "model (daal4py.kdtree_knn_classification_training_result attribute)": [[6, "daal4py.kdtree_knn_classification_training_result.model"]], "model (daal4py.lasso_regression_training_result attribute)": [[6, "daal4py.lasso_regression_training_result.model"]], "model (daal4py.linear_regression_training_result attribute)": [[6, "daal4py.linear_regression_training_result.model"]], "model (daal4py.logistic_regression_training_result attribute)": [[6, "daal4py.logistic_regression_training_result.model"]], "model (daal4py.logitboost_training_result attribute)": [[6, "daal4py.logitboost_training_result.model"]], "model (daal4py.multinomial_naive_bayes_training_result attribute)": [[6, "daal4py.multinomial_naive_bayes_training_result.model"]], "model (daal4py.ridge_regression_training_result attribute)": [[6, "daal4py.ridge_regression_training_result.model"]], "model (daal4py.stump_classification_training_result attribute)": [[6, "daal4py.stump_classification_training_result.model"]], "model (daal4py.stump_regression_training_result attribute)": [[6, "daal4py.stump_regression_training_result.model"]], "model (daal4py.svm_training_result attribute)": [[6, "daal4py.svm_training_result.model"]], "multinomial_naive_bayes_model (class in daal4py)": [[6, "daal4py.multinomial_naive_bayes_model"]], "multinomial_naive_bayes_prediction (class in daal4py)": [[6, "daal4py.multinomial_naive_bayes_prediction"]], "multinomial_naive_bayes_training (class in daal4py)": [[6, "daal4py.multinomial_naive_bayes_training"]], "multinomial_naive_bayes_training_result (class in daal4py)": [[6, "daal4py.multinomial_naive_bayes_training_result"]], "multivariate_outlier_detection (class in daal4py)": [[6, "daal4py.multivariate_outlier_detection"]], "multivariate_outlier_detection_result (class in daal4py)": [[6, "daal4py.multivariate_outlier_detection_result"]], "my_procid() (in module daal4py)": [[6, "daal4py.my_procid"]], "nclusters (daal4py.dbscan_result attribute)": [[6, "daal4py.dbscan_result.nClusters"]], "niterations (daal4py.em_gmm_result attribute)": [[6, "daal4py.em_gmm_result.nIterations"]], "niterations (daal4py.kmeans_result attribute)": [[6, "daal4py.kmeans_result.nIterations"]], "niterations (daal4py.optimization_solver_adagrad_result attribute)": [[6, "daal4py.optimization_solver_adagrad_result.nIterations"]], "niterations (daal4py.optimization_solver_coordinate_descent_result attribute)": [[6, "daal4py.optimization_solver_coordinate_descent_result.nIterations"]], "niterations (daal4py.optimization_solver_lbfgs_result attribute)": [[6, "daal4py.optimization_solver_lbfgs_result.nIterations"]], "niterations (daal4py.optimization_solver_saga_result attribute)": [[6, "daal4py.optimization_solver_saga_result.nIterations"]], "niterations (daal4py.optimization_solver_sgd_result attribute)": [[6, "daal4py.optimization_solver_sgd_result.nIterations"]], "n_classes_ (daal4py.mb.logisticdaalmodel attribute)": [[6, "daal4py.mb.LogisticDAALModel.n_classes_"]], "n_features_in_ (daal4py.mb.logisticdaalmodel attribute)": [[6, "daal4py.mb.LogisticDAALModel.n_features_in_"]], "normalization_minmax (class in daal4py)": [[6, "daal4py.normalization_minmax"]], "normalization_minmax_result (class in daal4py)": [[6, "daal4py.normalization_minmax_result"]], "normalization_zscore (class in daal4py)": [[6, "daal4py.normalization_zscore"]], "normalization_zscore_result (class in daal4py)": [[6, "daal4py.normalization_zscore_result"]], "normalizeddata (daal4py.normalization_minmax_result attribute)": [[6, "daal4py.normalization_minmax_result.normalizedData"]], "normalizeddata (daal4py.normalization_zscore_result attribute)": [[6, "daal4py.normalization_zscore_result.normalizedData"]], "num_procs() (in module daal4py)": [[6, "daal4py.num_procs"]], "num_threads() (in module daal4py)": [[6, "daal4py.num_threads"]], "objectivefunction (daal4py.kmeans_result attribute)": [[6, "daal4py.kmeans_result.objectiveFunction"]], "optimization_solver_adagrad (class in daal4py)": [[6, "daal4py.optimization_solver_adagrad"]], "optimization_solver_adagrad_result (class in daal4py)": [[6, "daal4py.optimization_solver_adagrad_result"]], "optimization_solver_coordinate_descent (class in daal4py)": [[6, "daal4py.optimization_solver_coordinate_descent"]], "optimization_solver_coordinate_descent_result (class in daal4py)": [[6, "daal4py.optimization_solver_coordinate_descent_result"]], "optimization_solver_cross_entropy_loss (class in daal4py)": [[6, "daal4py.optimization_solver_cross_entropy_loss"]], "optimization_solver_cross_entropy_loss_result (in module daal4py)": [[6, "daal4py.optimization_solver_cross_entropy_loss_result"]], "optimization_solver_lbfgs (class in daal4py)": [[6, "daal4py.optimization_solver_lbfgs"]], "optimization_solver_lbfgs_result (class in daal4py)": [[6, "daal4py.optimization_solver_lbfgs_result"]], "optimization_solver_logistic_loss (class in daal4py)": [[6, "daal4py.optimization_solver_logistic_loss"]], "optimization_solver_logistic_loss_result (in module daal4py)": [[6, "daal4py.optimization_solver_logistic_loss_result"]], "optimization_solver_mse (class in daal4py)": [[6, "daal4py.optimization_solver_mse"]], "optimization_solver_mse_result (in module daal4py)": [[6, "daal4py.optimization_solver_mse_result"]], "optimization_solver_precomputed (class in daal4py)": [[6, "daal4py.optimization_solver_precomputed"]], "optimization_solver_precomputed_result (in module daal4py)": [[6, "daal4py.optimization_solver_precomputed_result"]], "optimization_solver_saga (class in daal4py)": [[6, "daal4py.optimization_solver_saga"]], "optimization_solver_saga_result (class in daal4py)": [[6, "daal4py.optimization_solver_saga_result"]], "optimization_solver_sgd (class in daal4py)": [[6, "daal4py.optimization_solver_sgd"]], "optimization_solver_sgd_result (class in daal4py)": [[6, "daal4py.optimization_solver_sgd_result"]], "optimization_solver_sum_of_functions_result (in module daal4py)": [[6, "daal4py.optimization_solver_sum_of_functions_result"]], "outofbagerror (daal4py.decision_forest_classification_training_result attribute)": [[6, "daal4py.decision_forest_classification_training_result.outOfBagError"]], "outofbagerror (daal4py.decision_forest_regression_training_result attribute)": [[6, "daal4py.decision_forest_regression_training_result.outOfBagError"]], "outofbagerroraccuracy (daal4py.decision_forest_classification_training_result attribute)": [[6, "daal4py.decision_forest_classification_training_result.outOfBagErrorAccuracy"]], "outofbagerrordecisionfunction (daal4py.decision_forest_classification_training_result attribute)": [[6, "daal4py.decision_forest_classification_training_result.outOfBagErrorDecisionFunction"]], "outofbagerrorperobservation (daal4py.decision_forest_classification_training_result attribute)": [[6, "daal4py.decision_forest_classification_training_result.outOfBagErrorPerObservation"]], "outofbagerrorperobservation (daal4py.decision_forest_regression_training_result attribute)": [[6, "daal4py.decision_forest_regression_training_result.outOfBagErrorPerObservation"]], "outofbagerrorprediction (daal4py.decision_forest_regression_training_result attribute)": [[6, "daal4py.decision_forest_regression_training_result.outOfBagErrorPrediction"]], "outofbagerrorr2 (daal4py.decision_forest_regression_training_result attribute)": [[6, "daal4py.decision_forest_regression_training_result.outOfBagErrorR2"]], "pca (class in daal4py)": [[6, "daal4py.pca"]], "pca_result (class in daal4py)": [[6, "daal4py.pca_result"]], "pca_transform (class in daal4py)": [[6, "daal4py.pca_transform"]], "pca_transform_result (class in daal4py)": [[6, "daal4py.pca_transform_result"]], "permutationmatrix (daal4py.pivoted_qr_result attribute)": [[6, "daal4py.pivoted_qr_result.permutationMatrix"]], "pivoted_qr (class in daal4py)": [[6, "daal4py.pivoted_qr"]], "pivoted_qr_result (class in daal4py)": [[6, "daal4py.pivoted_qr_result"]], "predict() (daal4py.mb.gbtdaalmodel method)": [[6, "daal4py.mb.GBTDAALModel.predict"]], "predict() (daal4py.mb.logisticdaalmodel method)": [[6, "daal4py.mb.LogisticDAALModel.predict"]], "predict_log_proba() (daal4py.mb.logisticdaalmodel method)": [[6, "daal4py.mb.LogisticDAALModel.predict_log_proba"]], "predict_multiple() (daal4py.mb.logisticdaalmodel method)": [[6, "daal4py.mb.LogisticDAALModel.predict_multiple"]], "predict_proba() (daal4py.mb.gbtdaalmodel method)": [[6, "daal4py.mb.GBTDAALModel.predict_proba"]], "predict_proba() (daal4py.mb.logisticdaalmodel method)": [[6, "daal4py.mb.LogisticDAALModel.predict_proba"]], "prediction (daal4py.classifier_prediction_result attribute)": [[6, "daal4py.classifier_prediction_result.prediction"]], "prediction (daal4py.decision_forest_regression_prediction_result attribute)": [[6, "daal4py.decision_forest_regression_prediction_result.prediction"]], "prediction (daal4py.decision_tree_regression_prediction_result attribute)": [[6, "daal4py.decision_tree_regression_prediction_result.prediction"]], "prediction (daal4py.gbt_regression_prediction_result attribute)": [[6, "daal4py.gbt_regression_prediction_result.prediction"]], "prediction (daal4py.implicit_als_prediction_ratings_result attribute)": [[6, "daal4py.implicit_als_prediction_ratings_result.prediction"]], "prediction (daal4py.lasso_regression_prediction_result attribute)": [[6, "daal4py.lasso_regression_prediction_result.prediction"]], "prediction (daal4py.linear_regression_prediction_result attribute)": [[6, "daal4py.linear_regression_prediction_result.prediction"]], "prediction (daal4py.ridge_regression_prediction_result attribute)": [[6, "daal4py.ridge_regression_prediction_result.prediction"]], "prediction (daal4py.stump_regression_prediction_result attribute)": [[6, "daal4py.stump_regression_prediction_result.prediction"]], "probabilities (daal4py.classifier_prediction_result attribute)": [[6, "daal4py.classifier_prediction_result.probabilities"]], "qr (class in daal4py)": [[6, "daal4py.qr"]], "qr_result (class in daal4py)": [[6, "daal4py.qr_result"]], "quantiles (class in daal4py)": [[6, "daal4py.quantiles"]], "quantiles (daal4py.quantiles_result attribute)": [[6, "daal4py.quantiles_result.quantiles"]], "quantiles_result (class in daal4py)": [[6, "daal4py.quantiles_result"]], "randomnumbers (daal4py.engines_result attribute)": [[6, "daal4py.engines_result.randomNumbers"]], "ridge_regression_model (class in daal4py)": [[6, "daal4py.ridge_regression_model"]], "ridge_regression_prediction (class in daal4py)": [[6, "daal4py.ridge_regression_prediction"]], "ridge_regression_prediction_result (class in daal4py)": [[6, "daal4py.ridge_regression_prediction_result"]], "ridge_regression_training (class in daal4py)": [[6, "daal4py.ridge_regression_training"]], "ridge_regression_training_result (class in daal4py)": [[6, "daal4py.ridge_regression_training_result"]], "rightsingularmatrix (daal4py.svd_result attribute)": [[6, "daal4py.svd_result.rightSingularMatrix"]], "secondorderrawmoment (daal4py.low_order_moments_result attribute)": [[6, "daal4py.low_order_moments_result.secondOrderRawMoment"]], "setup() (daal4py.optimization_solver_cross_entropy_loss method)": [[6, "daal4py.optimization_solver_cross_entropy_loss.setup"]], "setup() (daal4py.optimization_solver_logistic_loss method)": [[6, "daal4py.optimization_solver_logistic_loss.setup"]], "setup() (daal4py.optimization_solver_mse method)": [[6, "daal4py.optimization_solver_mse.setup"]], "singularvalues (daal4py.svd_result attribute)": [[6, "daal4py.svd_result.singularValues"]], "sorteddata (daal4py.sorting_result attribute)": [[6, "daal4py.sorting_result.sortedData"]], "sorting (class in daal4py)": [[6, "daal4py.sorting"]], "sorting_result (class in daal4py)": [[6, "daal4py.sorting_result"]], "standarddeviation (daal4py.low_order_moments_result attribute)": [[6, "daal4py.low_order_moments_result.standardDeviation"]], "stump_classification_model (class in daal4py)": [[6, "daal4py.stump_classification_model"]], "stump_classification_prediction (class in daal4py)": [[6, "daal4py.stump_classification_prediction"]], "stump_classification_training (class in daal4py)": [[6, "daal4py.stump_classification_training"]], "stump_classification_training_result (class in daal4py)": [[6, "daal4py.stump_classification_training_result"]], "stump_regression_model (class in daal4py)": [[6, "daal4py.stump_regression_model"]], "stump_regression_prediction (class in daal4py)": [[6, "daal4py.stump_regression_prediction"]], "stump_regression_prediction_result (class in daal4py)": [[6, "daal4py.stump_regression_prediction_result"]], "stump_regression_training (class in daal4py)": [[6, "daal4py.stump_regression_training"]], "stump_regression_training_result (class in daal4py)": [[6, "daal4py.stump_regression_training_result"]], "sum (daal4py.low_order_moments_result attribute)": [[6, "daal4py.low_order_moments_result.sum"]], "sumsquares (daal4py.low_order_moments_result attribute)": [[6, "daal4py.low_order_moments_result.sumSquares"]], "sumsquarescentered (daal4py.low_order_moments_result attribute)": [[6, "daal4py.low_order_moments_result.sumSquaresCentered"]], "svd (class in daal4py)": [[6, "daal4py.svd"]], "svd_result (class in daal4py)": [[6, "daal4py.svd_result"]], "svm_model (class in daal4py)": [[6, "daal4py.svm_model"]], "svm_prediction (class in daal4py)": [[6, "daal4py.svm_prediction"]], "svm_training (class in daal4py)": [[6, "daal4py.svm_training"]], "svm_training_result (class in daal4py)": [[6, "daal4py.svm_training_result"]], "transformeddata (daal4py.pca_transform_result attribute)": [[6, "daal4py.pca_transform_result.transformedData"]], "univariate_outlier_detection (class in daal4py)": [[6, "daal4py.univariate_outlier_detection"]], "univariate_outlier_detection_result (class in daal4py)": [[6, "daal4py.univariate_outlier_detection_result"]], "variableimportance (daal4py.decision_forest_classification_training_result attribute)": [[6, "daal4py.decision_forest_classification_training_result.variableImportance"]], "variableimportance (daal4py.decision_forest_regression_training_result attribute)": [[6, "daal4py.decision_forest_regression_training_result.variableImportance"]], "variableimportance (daal4py.stump_classification_training_result attribute)": [[6, "daal4py.stump_classification_training_result.variableImportance"]], "variableimportance (daal4py.stump_regression_training_result attribute)": [[6, "daal4py.stump_regression_training_result.variableImportance"]], "variableimportancebycover (daal4py.gbt_classification_training_result attribute)": [[6, "daal4py.gbt_classification_training_result.variableImportanceByCover"]], "variableimportancebycover (daal4py.gbt_regression_training_result attribute)": [[6, "daal4py.gbt_regression_training_result.variableImportanceByCover"]], "variableimportancebygain (daal4py.gbt_classification_training_result attribute)": [[6, "daal4py.gbt_classification_training_result.variableImportanceByGain"]], "variableimportancebygain (daal4py.gbt_regression_training_result attribute)": [[6, "daal4py.gbt_regression_training_result.variableImportanceByGain"]], "variableimportancebytotalcover (daal4py.gbt_classification_training_result attribute)": [[6, "daal4py.gbt_classification_training_result.variableImportanceByTotalCover"]], "variableimportancebytotalcover (daal4py.gbt_regression_training_result attribute)": [[6, "daal4py.gbt_regression_training_result.variableImportanceByTotalCover"]], "variableimportancebytotalgain (daal4py.gbt_classification_training_result attribute)": [[6, "daal4py.gbt_classification_training_result.variableImportanceByTotalGain"]], "variableimportancebytotalgain (daal4py.gbt_regression_training_result attribute)": [[6, "daal4py.gbt_regression_training_result.variableImportanceByTotalGain"]], "variableimportancebyweight (daal4py.gbt_classification_training_result attribute)": [[6, "daal4py.gbt_classification_training_result.variableImportanceByWeight"]], "variableimportancebyweight (daal4py.gbt_regression_training_result attribute)": [[6, "daal4py.gbt_regression_training_result.variableImportanceByWeight"]], "variance (daal4py.low_order_moments_result attribute)": [[6, "daal4py.low_order_moments_result.variance"]], "variances (daal4py.normalization_zscore_result attribute)": [[6, "daal4py.normalization_zscore_result.variances"]], "variances (daal4py.pca_result attribute)": [[6, "daal4py.pca_result.variances"]], "variation (daal4py.low_order_moments_result attribute)": [[6, "daal4py.low_order_moments_result.variation"]], "weaklearnerserrors (daal4py.adaboost_training_result attribute)": [[6, "daal4py.adaboost_training_result.weakLearnersErrors"]], "weights (daal4py.bacon_outlier_detection_result attribute)": [[6, "daal4py.bacon_outlier_detection_result.weights"]], "weights (daal4py.em_gmm_init_result attribute)": [[6, "daal4py.em_gmm_init_result.weights"]], "weights (daal4py.em_gmm_result attribute)": [[6, "daal4py.em_gmm_result.weights"]], "weights (daal4py.multivariate_outlier_detection_result attribute)": [[6, "daal4py.multivariate_outlier_detection_result.weights"]], "weights (daal4py.univariate_outlier_detection_result attribute)": [[6, "daal4py.univariate_outlier_detection_result.weights"]], "basicstatistics (class in sklearnex.basic_statistics)": [[21, "sklearnex.basic_statistics.BasicStatistics"]], "incrementalbasicstatistics (class in sklearnex.basic_statistics)": [[21, "sklearnex.basic_statistics.IncrementalBasicStatistics"]], "incrementalempiricalcovariance (class in sklearnex.covariance)": [[21, "sklearnex.covariance.IncrementalEmpiricalCovariance"]], "incrementallinearregression (class in sklearnex.linear_model)": [[21, "sklearnex.linear_model.IncrementalLinearRegression"]], "incrementalridge (class in sklearnex.linear_model)": [[21, "sklearnex.linear_model.IncrementalRidge"]], "batch_size_ (sklearnex.basic_statistics.incrementalbasicstatistics attribute)": [[21, "sklearnex.basic_statistics.IncrementalBasicStatistics.batch_size_"]], "batch_size_ (sklearnex.covariance.incrementalempiricalcovariance attribute)": [[21, "sklearnex.covariance.IncrementalEmpiricalCovariance.batch_size_"]], "batch_size_ (sklearnex.linear_model.incrementallinearregression attribute)": [[21, "sklearnex.linear_model.IncrementalLinearRegression.batch_size_"]], "batch_size_ (sklearnex.linear_model.incrementalridge attribute)": [[21, "sklearnex.linear_model.IncrementalRidge.batch_size_"]], "coef_ (sklearnex.linear_model.incrementallinearregression attribute)": [[21, "sklearnex.linear_model.IncrementalLinearRegression.coef_"]], "coef_ (sklearnex.linear_model.incrementalridge attribute)": [[21, "sklearnex.linear_model.IncrementalRidge.coef_"]], "covariance_ (sklearnex.covariance.incrementalempiricalcovariance attribute)": [[21, "sklearnex.covariance.IncrementalEmpiricalCovariance.covariance_"]], "error_norm() (sklearnex.covariance.incrementalempiricalcovariance method)": [[21, "sklearnex.covariance.IncrementalEmpiricalCovariance.error_norm"]], "fit() (sklearnex.basic_statistics.basicstatistics method)": [[21, "sklearnex.basic_statistics.BasicStatistics.fit"]], "fit() (sklearnex.basic_statistics.incrementalbasicstatistics method)": [[21, "sklearnex.basic_statistics.IncrementalBasicStatistics.fit"]], "fit() (sklearnex.covariance.incrementalempiricalcovariance method)": [[21, "sklearnex.covariance.IncrementalEmpiricalCovariance.fit"]], "fit() (sklearnex.linear_model.incrementallinearregression method)": [[21, "sklearnex.linear_model.IncrementalLinearRegression.fit"]], "fit() (sklearnex.linear_model.incrementalridge method)": [[21, "sklearnex.linear_model.IncrementalRidge.fit"]], "get_metadata_routing() (sklearnex.basic_statistics.basicstatistics method)": [[21, "sklearnex.basic_statistics.BasicStatistics.get_metadata_routing"]], "get_metadata_routing() (sklearnex.basic_statistics.incrementalbasicstatistics method)": [[21, "sklearnex.basic_statistics.IncrementalBasicStatistics.get_metadata_routing"]], "get_metadata_routing() (sklearnex.covariance.incrementalempiricalcovariance method)": [[21, "sklearnex.covariance.IncrementalEmpiricalCovariance.get_metadata_routing"]], "get_metadata_routing() (sklearnex.linear_model.incrementallinearregression method)": [[21, "sklearnex.linear_model.IncrementalLinearRegression.get_metadata_routing"]], "get_metadata_routing() (sklearnex.linear_model.incrementalridge method)": [[21, "sklearnex.linear_model.IncrementalRidge.get_metadata_routing"]], "get_params() (sklearnex.basic_statistics.basicstatistics method)": [[21, "sklearnex.basic_statistics.BasicStatistics.get_params"]], "get_params() (sklearnex.basic_statistics.incrementalbasicstatistics method)": [[21, "sklearnex.basic_statistics.IncrementalBasicStatistics.get_params"]], "get_params() (sklearnex.covariance.incrementalempiricalcovariance method)": [[21, "sklearnex.covariance.IncrementalEmpiricalCovariance.get_params"]], "get_params() (sklearnex.linear_model.incrementallinearregression method)": [[21, "sklearnex.linear_model.IncrementalLinearRegression.get_params"]], "get_params() (sklearnex.linear_model.incrementalridge method)": [[21, "sklearnex.linear_model.IncrementalRidge.get_params"]], "get_precision() (sklearnex.covariance.incrementalempiricalcovariance method)": [[21, "sklearnex.covariance.IncrementalEmpiricalCovariance.get_precision"]], "intercept_ (sklearnex.linear_model.incrementallinearregression attribute)": [[21, "sklearnex.linear_model.IncrementalLinearRegression.intercept_"]], "intercept_ (sklearnex.linear_model.incrementalridge attribute)": [[21, "sklearnex.linear_model.IncrementalRidge.intercept_"]], "location_ (sklearnex.covariance.incrementalempiricalcovariance attribute)": [[21, "sklearnex.covariance.IncrementalEmpiricalCovariance.location_"]], "mahalanobis() (sklearnex.covariance.incrementalempiricalcovariance method)": [[21, "sklearnex.covariance.IncrementalEmpiricalCovariance.mahalanobis"]], "max_ (sklearnex.basic_statistics.basicstatistics attribute)": [[21, "sklearnex.basic_statistics.BasicStatistics.max_"]], "max_ (sklearnex.basic_statistics.incrementalbasicstatistics attribute)": [[21, "sklearnex.basic_statistics.IncrementalBasicStatistics.max_"]], "mean_ (sklearnex.basic_statistics.basicstatistics attribute)": [[21, "sklearnex.basic_statistics.BasicStatistics.mean_"]], "mean_ (sklearnex.basic_statistics.incrementalbasicstatistics attribute)": [[21, "sklearnex.basic_statistics.IncrementalBasicStatistics.mean_"]], "min_ (sklearnex.basic_statistics.basicstatistics attribute)": [[21, "sklearnex.basic_statistics.BasicStatistics.min_"]], "min_ (sklearnex.basic_statistics.incrementalbasicstatistics attribute)": [[21, "sklearnex.basic_statistics.IncrementalBasicStatistics.min_"]], "n_features_in_ (sklearnex.basic_statistics.incrementalbasicstatistics attribute)": [[21, "sklearnex.basic_statistics.IncrementalBasicStatistics.n_features_in_"]], "n_features_in_ (sklearnex.covariance.incrementalempiricalcovariance attribute)": [[21, "sklearnex.covariance.IncrementalEmpiricalCovariance.n_features_in_"]], "n_features_in_ (sklearnex.linear_model.incrementallinearregression attribute)": [[21, "sklearnex.linear_model.IncrementalLinearRegression.n_features_in_"]], "n_features_in_ (sklearnex.linear_model.incrementalridge attribute)": [[21, "sklearnex.linear_model.IncrementalRidge.n_features_in_"]], "n_samples_seen_ (sklearnex.basic_statistics.incrementalbasicstatistics attribute)": [[21, "sklearnex.basic_statistics.IncrementalBasicStatistics.n_samples_seen_"]], "n_samples_seen_ (sklearnex.covariance.incrementalempiricalcovariance attribute)": [[21, "sklearnex.covariance.IncrementalEmpiricalCovariance.n_samples_seen_"]], "n_samples_seen_ (sklearnex.linear_model.incrementallinearregression attribute)": [[21, "sklearnex.linear_model.IncrementalLinearRegression.n_samples_seen_"]], "n_samples_seen_ (sklearnex.linear_model.incrementalridge attribute)": [[21, "sklearnex.linear_model.IncrementalRidge.n_samples_seen_"]], "partial_fit() (sklearnex.basic_statistics.incrementalbasicstatistics method)": [[21, "sklearnex.basic_statistics.IncrementalBasicStatistics.partial_fit"]], "partial_fit() (sklearnex.covariance.incrementalempiricalcovariance method)": [[21, "sklearnex.covariance.IncrementalEmpiricalCovariance.partial_fit"]], "partial_fit() (sklearnex.linear_model.incrementallinearregression method)": [[21, "sklearnex.linear_model.IncrementalLinearRegression.partial_fit"]], "partial_fit() (sklearnex.linear_model.incrementalridge method)": [[21, "sklearnex.linear_model.IncrementalRidge.partial_fit"]], "predict() (sklearnex.linear_model.incrementallinearregression method)": [[21, "sklearnex.linear_model.IncrementalLinearRegression.predict"]], "predict() (sklearnex.linear_model.incrementalridge method)": [[21, "sklearnex.linear_model.IncrementalRidge.predict"]], "score() (sklearnex.covariance.incrementalempiricalcovariance method)": [[21, "sklearnex.covariance.IncrementalEmpiricalCovariance.score"]], "score() (sklearnex.linear_model.incrementallinearregression method)": [[21, "sklearnex.linear_model.IncrementalLinearRegression.score"]], "score() (sklearnex.linear_model.incrementalridge method)": [[21, "sklearnex.linear_model.IncrementalRidge.score"]], "second_order_raw_moment_ (sklearnex.basic_statistics.basicstatistics attribute)": [[21, "sklearnex.basic_statistics.BasicStatistics.second_order_raw_moment_"]], "second_order_raw_moment_ (sklearnex.basic_statistics.incrementalbasicstatistics attribute)": [[21, "sklearnex.basic_statistics.IncrementalBasicStatistics.second_order_raw_moment_"]], "set_fit_request() (sklearnex.basic_statistics.basicstatistics method)": [[21, "sklearnex.basic_statistics.BasicStatistics.set_fit_request"]], "set_fit_request() (sklearnex.basic_statistics.incrementalbasicstatistics method)": [[21, "sklearnex.basic_statistics.IncrementalBasicStatistics.set_fit_request"]], "set_params() (sklearnex.basic_statistics.basicstatistics method)": [[21, "sklearnex.basic_statistics.BasicStatistics.set_params"]], "set_params() (sklearnex.basic_statistics.incrementalbasicstatistics method)": [[21, "sklearnex.basic_statistics.IncrementalBasicStatistics.set_params"]], "set_params() (sklearnex.covariance.incrementalempiricalcovariance method)": [[21, "sklearnex.covariance.IncrementalEmpiricalCovariance.set_params"]], "set_params() (sklearnex.linear_model.incrementallinearregression method)": [[21, "sklearnex.linear_model.IncrementalLinearRegression.set_params"]], "set_params() (sklearnex.linear_model.incrementalridge method)": [[21, "sklearnex.linear_model.IncrementalRidge.set_params"]], "set_partial_fit_request() (sklearnex.basic_statistics.incrementalbasicstatistics method)": [[21, "sklearnex.basic_statistics.IncrementalBasicStatistics.set_partial_fit_request"]], "set_partial_fit_request() (sklearnex.covariance.incrementalempiricalcovariance method)": [[21, "sklearnex.covariance.IncrementalEmpiricalCovariance.set_partial_fit_request"]], "set_partial_fit_request() (sklearnex.linear_model.incrementallinearregression method)": [[21, "sklearnex.linear_model.IncrementalLinearRegression.set_partial_fit_request"]], "set_partial_fit_request() (sklearnex.linear_model.incrementalridge method)": [[21, "sklearnex.linear_model.IncrementalRidge.set_partial_fit_request"]], "set_score_request() (sklearnex.covariance.incrementalempiricalcovariance method)": [[21, "sklearnex.covariance.IncrementalEmpiricalCovariance.set_score_request"]], "set_score_request() (sklearnex.linear_model.incrementallinearregression method)": [[21, "sklearnex.linear_model.IncrementalLinearRegression.set_score_request"]], "set_score_request() (sklearnex.linear_model.incrementalridge method)": [[21, "sklearnex.linear_model.IncrementalRidge.set_score_request"]], "standard_deviation_ (sklearnex.basic_statistics.basicstatistics attribute)": [[21, "sklearnex.basic_statistics.BasicStatistics.standard_deviation_"]], "standard_deviation_ (sklearnex.basic_statistics.incrementalbasicstatistics attribute)": [[21, "sklearnex.basic_statistics.IncrementalBasicStatistics.standard_deviation_"]], "sum_ (sklearnex.basic_statistics.basicstatistics attribute)": [[21, "sklearnex.basic_statistics.BasicStatistics.sum_"]], "sum_ (sklearnex.basic_statistics.incrementalbasicstatistics attribute)": [[21, "sklearnex.basic_statistics.IncrementalBasicStatistics.sum_"]], "sum_squares_ (sklearnex.basic_statistics.basicstatistics attribute)": [[21, "sklearnex.basic_statistics.BasicStatistics.sum_squares_"]], "sum_squares_ (sklearnex.basic_statistics.incrementalbasicstatistics attribute)": [[21, "sklearnex.basic_statistics.IncrementalBasicStatistics.sum_squares_"]], "sum_squares_centered_ (sklearnex.basic_statistics.basicstatistics attribute)": [[21, "sklearnex.basic_statistics.BasicStatistics.sum_squares_centered_"]], "sum_squares_centered_ (sklearnex.basic_statistics.incrementalbasicstatistics attribute)": [[21, "sklearnex.basic_statistics.IncrementalBasicStatistics.sum_squares_centered_"]], "variance_ (sklearnex.basic_statistics.basicstatistics attribute)": [[21, "sklearnex.basic_statistics.BasicStatistics.variance_"]], "variance_ (sklearnex.basic_statistics.incrementalbasicstatistics attribute)": [[21, "sklearnex.basic_statistics.IncrementalBasicStatistics.variance_"]], "variation_ (sklearnex.basic_statistics.basicstatistics attribute)": [[21, "sklearnex.basic_statistics.BasicStatistics.variation_"]], "variation_ (sklearnex.basic_statistics.incrementalbasicstatistics attribute)": [[21, "sklearnex.basic_statistics.IncrementalBasicStatistics.variation_"]]}})